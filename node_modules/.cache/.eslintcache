[{"/Users/mukesh-8058/Documents/CRM/src/index.js":"1","/Users/mukesh-8058/Documents/CRM/src/reportWebVitals.js":"2","/Users/mukesh-8058/Documents/CRM/src/App.js":"3","/Users/mukesh-8058/Documents/CRM/src/Store/index.js":"4","/Users/mukesh-8058/Documents/CRM/src/Store/Auth/AuthStore.js":"5","/Users/mukesh-8058/Documents/CRM/src/Store/Auth/AuthContext.js":"6","/Users/mukesh-8058/Documents/CRM/src/Pages/Home.js":"7","/Users/mukesh-8058/Documents/CRM/src/Pages/Contacts.js":"8","/Users/mukesh-8058/Documents/CRM/src/Pages/Leads.js":"9","/Users/mukesh-8058/Documents/CRM/src/Pages/Signin.js":"10","/Users/mukesh-8058/Documents/CRM/src/Pages/Signup.js":"11","/Users/mukesh-8058/Documents/CRM/src/Components/Leads/AddLead.js":"12","/Users/mukesh-8058/Documents/CRM/src/Components/Leads/ViewLead.js":"13","/Users/mukesh-8058/Documents/CRM/src/Store/Leads/leads-slice.js":"14","/Users/mukesh-8058/Documents/CRM/src/Components/Header/Header.js":"15","/Users/mukesh-8058/Documents/CRM/src/Components/Contacts/AddContact.js":"16","/Users/mukesh-8058/Documents/CRM/src/Components/Contacts/ContactsContainer.js":"17","/Users/mukesh-8058/Documents/CRM/src/Components/Leads/LeadsActions.js":"18","/Users/mukesh-8058/Documents/CRM/src/Store/Leads/leads-actions.js":"19","/Users/mukesh-8058/Documents/CRM/src/Components/Leads/LeadsContainer.js":"20","/Users/mukesh-8058/Documents/CRM/src/Pages/loadingPage.js":"21","/Users/mukesh-8058/Documents/CRM/src/Hooks/httpHook.js":"22","/Users/mukesh-8058/Documents/CRM/src/Hooks/inputHook.js":"23","/Users/mukesh-8058/Documents/CRM/src/library/authFns.js":"24","/Users/mukesh-8058/Documents/CRM/src/Hooks/useForm.js":"25","/Users/mukesh-8058/Documents/CRM/src/Components/Input/Input.js":"26","/Users/mukesh-8058/Documents/CRM/src/Components/FormActions/FormActions.js":"27","/Users/mukesh-8058/Documents/CRM/src/Store/Contacts/contacts-actions.js":"28","/Users/mukesh-8058/Documents/CRM/src/Components/Filter/Filter.js":"29","/Users/mukesh-8058/Documents/CRM/src/Components/Record/Record.js":"30","/Users/mukesh-8058/Documents/CRM/src/Store/Contacts/contacts-slice.js":"31"},{"size":556,"mtime":1625427489098,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1623131679168,"results":"34","hashOfConfig":"33"},{"size":1802,"mtime":1631711570490,"results":"35","hashOfConfig":"33"},{"size":212,"mtime":1625427769338,"results":"36","hashOfConfig":"33"},{"size":2061,"mtime":1632317095413,"results":"37","hashOfConfig":"33"},{"size":211,"mtime":1625416837969,"results":"38","hashOfConfig":"33"},{"size":117,"mtime":1624688936605,"results":"39","hashOfConfig":"33"},{"size":428,"mtime":1626431252070,"results":"40","hashOfConfig":"33"},{"size":1592,"mtime":1629799880905,"results":"41","hashOfConfig":"33"},{"size":3268,"mtime":1630178924584,"results":"42","hashOfConfig":"33"},{"size":5923,"mtime":1625463382765,"results":"43","hashOfConfig":"33"},{"size":3252,"mtime":1632759225095,"results":"44","hashOfConfig":"33"},{"size":2574,"mtime":1633094964237,"results":"45","hashOfConfig":"33"},{"size":980,"mtime":1627652805695,"results":"46","hashOfConfig":"33"},{"size":1006,"mtime":1629816692107,"results":"47","hashOfConfig":"33"},{"size":3406,"mtime":1631955501553,"results":"48","hashOfConfig":"33"},{"size":393,"mtime":1625661714055,"results":"49","hashOfConfig":"33"},{"size":1331,"mtime":1626432359613,"results":"50","hashOfConfig":"33"},{"size":3757,"mtime":1632923408038,"results":"51","hashOfConfig":"33"},{"size":2433,"mtime":1631877347626,"results":"52","hashOfConfig":"33"},{"size":198,"mtime":1624691089365,"results":"53","hashOfConfig":"33"},{"size":1219,"mtime":1632758380137,"results":"54","hashOfConfig":"33"},{"size":1017,"mtime":1624606849450,"results":"55","hashOfConfig":"33"},{"size":1052,"mtime":1624684299141,"results":"56","hashOfConfig":"33"},{"size":1480,"mtime":1631953491861,"results":"57","hashOfConfig":"33"},{"size":618,"mtime":1631954531185,"results":"58","hashOfConfig":"33"},{"size":778,"mtime":1626432144747,"results":"59","hashOfConfig":"33"},{"size":744,"mtime":1626431022675,"results":"60","hashOfConfig":"33"},{"size":2312,"mtime":1626195730877,"results":"61","hashOfConfig":"33"},{"size":1338,"mtime":1631877567206,"results":"62","hashOfConfig":"33"},{"size":350,"mtime":1626430034481,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p1juu5",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mukesh-8058/Documents/CRM/src/index.js",[],"/Users/mukesh-8058/Documents/CRM/src/reportWebVitals.js",[],"/Users/mukesh-8058/Documents/CRM/src/App.js",[],"/Users/mukesh-8058/Documents/CRM/src/Store/index.js",[],"/Users/mukesh-8058/Documents/CRM/src/Store/Auth/AuthStore.js",[],"/Users/mukesh-8058/Documents/CRM/src/Store/Auth/AuthContext.js",[],"/Users/mukesh-8058/Documents/CRM/src/Pages/Home.js",[],"/Users/mukesh-8058/Documents/CRM/src/Pages/Contacts.js",[],"/Users/mukesh-8058/Documents/CRM/src/Pages/Leads.js",["132"],"import { useContext } from \"react\";\nimport { useEffect } from \"react\"\nimport { useSelector } from \"react-redux\";\nimport ModuleActions from \"../Components/Leads/LeadsActions\";\nimport LeadsContainer from \"../Components/Leads/LeadsContainer\";\nimport useHttp from \"../Hooks/httpHook\";\nimport AuthContext from \"../Store/Auth/AuthContext\";\nimport { getAllLeads, getFilterColumns } from \"../Store/Leads/leads-actions\";\n\nconst LeadsModule = () => {\n    const ctx = useContext(AuthContext);\n\n    const { sendRequest: getLeads, isLoading, error: getLeadsError } = useHttp(getAllLeads, true);\n    const {sendRequest: fetchFilerColumns, isLoading: FilterLoading, error: filterError} = useHttp(getFilterColumns, true);\n    \n    const { filterColumns, leads, columns } = useSelector(state => state.leads);\n\n    useEffect(() => {\n       getLeads(ctx.orgId);\n       fetchFilerColumns(ctx.orgId);\n    },[ctx.orgId]);\n\n    if(getLeadsError.isValid || filterError.isValid) {\n        return <div style={{height:\"93vh\", backgroundColor:\"white\", color:\"red\", fontWeight:\"bold\", display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}>\n        { getLeadsError && filterError && <p>{getLeadsError.message}</p>}\n        <button>Please Re-Login</button>\n        </div>\n    }\n\n    return <div> \n                <ModuleActions path=\"add-lead\" module=\"Leads\"/>\n                <LeadsContainer filterCols={filterColumns} leadCols={ columns || [] } leads={ leads|| [] } isLoading={isLoading && FilterLoading} filterError={filterError} getLeadsError={getLeadsError}/>\n            </div>\n}\n\nexport default LeadsModule;","/Users/mukesh-8058/Documents/CRM/src/Pages/Signin.js",["133"],"import styles from './SignIn.module.css';\nimport image from '../images/image.png'\nimport { Fragment, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport LoadingPage from './loadingPage';\nimport useInput from '../Hooks/inputHook';\nimport AuthContext from '../Store/Auth/AuthContext';\nimport useHttp from '../Hooks/httpHook';\nimport { postSignIn } from '../library/authFns';\n\nconst isEmail = (value) => value.includes('@') && value.trim().length > 3;\nconst isEmpty = (value) => value.trim() !== \"\" && value.trim().length >= 3; \n\nconst SignIn = () => {\n    const ctx = useContext(AuthContext);  \n\n    const {value: email, \n            valueChangeHandler: emailChangehandler, \n            blurHandler: emailBlurHandler, \n            isValid: emailValid, \n            isTouched: emailTouched} = useInput(isEmail);\n    const {value: password, \n            valueChangeHandler: passwordChangehandler, \n            blurHandler: passwordBlurHandler, \n            isValid: passwordValid, \n            isTouched: passwordTouched} = useInput(isEmpty);\n\n    const { isLoading, error, sendRequest } = useHttp(postSignIn, false);\n\n    const signInhandler = (e) => {\n        e.preventDefault();\n        if(emailValid && passwordValid) {\n            const signInObj = {\n                email,\n                password\n            }\n            sendRequest(signInObj, (data)=> {\n                ctx.signIn(data);\n            });\n        }\n    };\n\n    return <Fragment> \n                <div className={styles.signup}><button> <Link to=\"/signup\">SIGN UP</Link> </button></div>\n                <main className={styles.signinContainer}>\n                  { isLoading && <LoadingPage/>}\n                    <section className={styles.form}>\n                        <div className={styles[\"form-detail\"]}>\n                            <h1>Sign in</h1>\n                            <p>to access CRM.</p>\n                        </div>\n                    <form onSubmit={signInhandler}>\n                        <div className={styles[\"form-control\"]}>\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"text\" id=\"email\" onChange={emailChangehandler} onBlur={emailBlurHandler}/>\n                            { !emailValid && emailTouched && <p className={styles.error}>Please enter a valid email</p> }\n                            { !error.isValid && error.value===\"email\" && <p className={styles.error}>{error.message}</p> }\n                        </div>\n                        <div className={styles[\"form-control\"]}>\n                            <label htmlFor=\"password\">Password</label>\n                            <input type=\"password\" id=\"password\" onChange={passwordChangehandler} onBlur={passwordBlurHandler}/>\n                            { !error.isValid && error.value===\"password\" && <p className={styles.error}>{error.message}</p> }\n                        </div>\n                        <button className={styles.submitBtn}>Sign In</button>\n                    </form>\n                </section>\n                <section className={styles.rightContainer}> \n                   <img src={image} alt=\"CRM\"/>\n                 </section>\n             </main>\n             </Fragment>\n}\n\nexport default SignIn;","/Users/mukesh-8058/Documents/CRM/src/Pages/Signup.js",[],"/Users/mukesh-8058/Documents/CRM/src/Components/Leads/AddLead.js",["134"],"import React, { useContext, useEffect, useState } from 'react';\nimport useForm from '../../Hooks/useForm';\nimport styles from './AddLead.module.css';\nimport LoadingPage from '../../Pages/loadingPage';\nimport Input from '../Input/Input';\nimport useHttp from '../../Hooks/httpHook';\nimport AuthContext from '../../Store/Auth/AuthContext';\nimport { addLeadRecord, getLeadsFields } from '../../Store/Leads/leads-actions';\nimport FormActions from '../FormActions/FormActions';\n\n\nconst AddLead = () => {\n\n    //custom hooks\n    const { inputHandler, address, information, isLoading } = useForm(getLeadsFields);\n    const { sendRequest: addRecord, error } = useHttp( addLeadRecord, true);\n  \n    const [description, setDescription] = useState(\"\");\n    const ctx = useContext(AuthContext);\n    let informationFields, addressFields;\n\n\n    if(address) {\n         addressFields = <React.Fragment>\n                            <h3>Address Information</h3>\n                            <div className={styles.inp}>\n                            {Object.values(address).map(obj => <Input key={obj.id} label={obj.label} type={obj.type} name={obj.name} value={obj.value} section={obj.section} handleChange={inputHandler}/>) }         \n                            </div>\n                            </React.Fragment>\n    }\n\n    if(information) {\n        informationFields =  <React.Fragment>\n                                <h3>Lead Information</h3>\n                                <div className={styles.inp}>\n                                { Object.values(information).map(obj => <Input \n                                    key={obj.id} \n                                    label={obj.label} \n                                    type={obj.type} \n                                    name={obj.name} \n                                    value={obj.value} \n                                    section={obj.section} \n                                    handleChange={inputHandler}\n                                    error={error}\n                                    />) }       \n                                </div>\n                                </React.Fragment>\n    }\n\n    const saveHandler = (e) => {\n        e.preventDefault();\n        let leadObj = { description, orgId: ctx.orgId };\n\n        Object.values(address).map(leadAddress =>  leadObj = { ...leadObj, [leadAddress.name] : leadAddress.value });\n        Object.values(information).map(leadInfo => leadObj = { ...leadObj, [leadInfo.name]: leadInfo.value });\n        addRecord(leadObj, ()=> {\n            console.log(\"re directing\");\n        });\n    }\n\n    return (\n            <form className={styles.form} autoComplete=\"none\">\n                { isLoading && <LoadingPage/> }\n                <FormActions saveHandler={saveHandler}/>\n                <div className={styles.formfields}>\n                        {informationFields}\n                        {addressFields}\n                    <h3>Description Information</h3>\n                    <div  className={styles.inp}>\n                        <textarea type=\"text\" name=\"description\" onChange={(e) => setDescription(e.target.value)}></textarea>\n                    </div>\n                </div>       \n            </form>\n    )\n\n}\n\nexport default AddLead;","/Users/mukesh-8058/Documents/CRM/src/Components/Leads/ViewLead.js",["135","136","137"],"import {  faBackward } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router';\nimport useHttp from '../../Hooks/httpHook';\nimport { getSingleLeadRecord } from '../../Store/Leads/leads-actions';\nimport styles from './ViewLead.module.css';\n\nconst ViewLead = () => {\n\n    const params = useParams();\n    const {orgId, leadId} = params;\n    const [lead, setLead] = useState([]);\n    const {sendRequest : fetchLeadRecord , isLoading, error} = useHttp(getSingleLeadRecord, false);\n\n    useEffect(() => {\n        fetchLeadRecord({orgId, leadId}, (leadRecord) => {\n            setLead(leadRecord.record)\n        });\n        \n    }, []);\n    const navigateBackHandler = () => {\n\n    }\n    let displayRecord;\n    if(lead) {\n        displayRecord =  Object.keys(lead).map((leadR, index) => {\n                    return <div className={styles.field} key={index}> \n                                <div className={styles.label}>{ leadR }</div> \n                                <div className={styles.value}>{ lead[leadR] || \"-\" }</div> \n                            </div>\n                })\n       \n    }\n\nreturn <section className={styles.singleRecord}>\n            <section className={styles[\"singleRecord-actions\"]}>\n                <div className={styles.back}>\n                    <FontAwesomeIcon icon={faBackward} onClick={navigateBackHandler}/>\n                    <p>{ \"\" || lead.last_name}</p>\n                </div>\n                <div className={styles.action}>\n                    <button className={styles.convert}>Convert</button>\n                    <button className={styles.edit}>Edit</button>\n                    <button className={styles.clone}>Clone</button>\n                    <button className={styles.delete}>Delete</button>\n                </div>\n            </section>\n            <section className={styles.values}>\n                <section className={styles.rightPane}>\n                       <div className={styles.full}>\n                            <h1 className={styles.leadInfo}>Lead Information:</h1>\n                            <div className={styles.full}>  {displayRecord}</div>     \n                       </div>\n                       <div className={styles.notes}>\n                            <h1>Notes:</h1>\n                            <textarea></textarea>\n                       </div>\n                </section>\n            </section>\n</section>\n}\n\nexport default ViewLead;","/Users/mukesh-8058/Documents/CRM/src/Store/Leads/leads-slice.js",[],"/Users/mukesh-8058/Documents/CRM/src/Components/Header/Header.js",[],"/Users/mukesh-8058/Documents/CRM/src/Components/Contacts/AddContact.js",[],"/Users/mukesh-8058/Documents/CRM/src/Components/Contacts/ContactsContainer.js",[],"/Users/mukesh-8058/Documents/CRM/src/Components/Leads/LeadsActions.js",[],"/Users/mukesh-8058/Documents/CRM/src/Store/Leads/leads-actions.js",[],"/Users/mukesh-8058/Documents/CRM/src/Components/Leads/LeadsContainer.js",[],"/Users/mukesh-8058/Documents/CRM/src/Pages/loadingPage.js",[],"/Users/mukesh-8058/Documents/CRM/src/Hooks/httpHook.js",[],"/Users/mukesh-8058/Documents/CRM/src/Hooks/inputHook.js",[],"/Users/mukesh-8058/Documents/CRM/src/library/authFns.js",[],"/Users/mukesh-8058/Documents/CRM/src/Hooks/useForm.js",["138"],"import { useEffect, useState, useCallback, useContext } from \"react\";\nimport useHttp from \"./httpHook\"\nimport AuthContext from \"../Store/Auth/AuthContext\";\n\nconst useForm = (requestFn) => {\n\n    const { isLoading, error, sendRequest } =  useHttp(requestFn, false);\n    const [formObj, setFormObj]= useState({});  \n\n    const ctx = useContext(AuthContext);\n\n    useEffect(() => {\n        sendRequest(ctx.orgId, (data)=> {\n            setFormObj(data);\n        })\n    },[]);\n\n  const inputHandler = useCallback((event, section) => {\n    \n     const { name, value } = event.target;\n     const newFormObj = {...formObj};\n    // code runs if address section is split into billing section\n     if(section === \"billing\") {\n         newFormObj.address.billing[name].value = value;\n         setFormObj({...newFormObj});\n     }\n     // code runs if address section is split into shipping section\n     if(section === \"shipping\"){\n        newFormObj.address.shipping[name].value = value;\n        setFormObj({...newFormObj});\n\n     } \n     // code runs if address section is not split and if the section is information section\n     if(section === \"address\" || section === \"information\") {\n        newFormObj[section][name].value = value;\n        setFormObj({...newFormObj});\n     }\n    \n  },[formObj])\n   \n    return {\n        inputHandler,\n        isLoading,\n        httpError: error,\n        address: formObj.address,\n        information: formObj.information\n    }\n}\n\nexport default useForm;","/Users/mukesh-8058/Documents/CRM/src/Components/Input/Input.js",[],"/Users/mukesh-8058/Documents/CRM/src/Components/FormActions/FormActions.js",[],"/Users/mukesh-8058/Documents/CRM/src/Store/Contacts/contacts-actions.js",["139"],"import { contactsActions } from \"./contacts-slice\";\n\nconst url = \"http://localhost:8080\";\n\nexport const getContactsFields = async (orgId, token) => {\n        const response = await fetch(`${url}/org/${orgId}/contacts/contactsfields`,{\n            method:\"GET\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            }\n        });\n        const responseData = await response.json();\n        if(!response.ok) {\n            let error = new Error(responseData.message || \"Error Occured!\")\n            error.isValid = responseData.isValid || false;\n            error.value = responseData.value || \"\";\n            throw(error);\n        }\n        return responseData;\n}","/Users/mukesh-8058/Documents/CRM/src/Components/Filter/Filter.js",[],"/Users/mukesh-8058/Documents/CRM/src/Components/Record/Record.js",[],"/Users/mukesh-8058/Documents/CRM/src/Store/Contacts/contacts-slice.js",[],{"ruleId":"140","severity":1,"message":"141","line":21,"column":7,"nodeType":"142","endLine":21,"endColumn":18,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":26,"column":24,"nodeType":"146","messageId":"147","endLine":26,"endColumn":39},{"ruleId":"144","severity":1,"message":"148","line":1,"column":29,"nodeType":"146","messageId":"147","endLine":1,"endColumn":38},{"ruleId":"144","severity":1,"message":"149","line":15,"column":44,"nodeType":"146","messageId":"147","endLine":15,"endColumn":53},{"ruleId":"144","severity":1,"message":"150","line":15,"column":55,"nodeType":"146","messageId":"147","endLine":15,"endColumn":60},{"ruleId":"140","severity":1,"message":"151","line":22,"column":8,"nodeType":"142","endLine":22,"endColumn":10,"suggestions":"152"},{"ruleId":"140","severity":1,"message":"153","line":16,"column":7,"nodeType":"142","endLine":16,"endColumn":9,"suggestions":"154"},{"ruleId":"144","severity":1,"message":"155","line":1,"column":10,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchFilerColumns' and 'getLeads'. Either include them or remove the dependency array.","ArrayExpression",["156"],"no-unused-vars","'passwordTouched' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchLeadRecord', 'leadId', and 'orgId'. Either include them or remove the dependency array.",["157"],"React Hook useEffect has missing dependencies: 'ctx.orgId' and 'sendRequest'. Either include them or remove the dependency array.",["158"],"'contactsActions' is defined but never used.",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [ctx.orgId, fetchFilerColumns, getLeads]",{"range":"165","text":"166"},"Update the dependencies array to be: [fetchLeadRecord, leadId, orgId]",{"range":"167","text":"168"},"Update the dependencies array to be: [ctx.orgId, sendRequest]",{"range":"169","text":"170"},[886,897],"[ctx.orgId, fetchFilerColumns, getLeads]",[794,796],"[fetchLeadRecord, leadId, orgId]",[468,470],"[ctx.orgId, sendRequest]"]