{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Documents/GitHub/CRM/src/Components/Leads/LeadsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TopBarLoading from '../../Pages/LoadingTopBar';\nimport { contactsActions } from '../../Store/Contacts/contacts-slice';\nimport { leadActions } from '../../Store/Leads/leads-slice';\nimport { filterConfigObj } from '../../Utils/filter';\nimport Filter from '../Filter/Filter';\nimport Record from '../Record/Record';\nimport styles from './LeadsContainer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeadsContainer = ({\n  leadCols,\n  isLoading,\n  filterCols\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    leads,\n    filterApplied,\n    filteredLeads\n  } = useSelector(state => state.leads);\n  const filterMethodNames = filterConfigObj.map(filter => filter.filterName);\n\n  const filterLeads = ({\n    name,\n    value,\n    filterByMethod\n  }) => {\n    const findFilterConfig = filterConfigObj.filter(filterConfig => filterConfig.filterName === filterByMethod);\n    console.log(findFilterConfig);\n  };\n\n  let columns = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minWidth: \"2rem\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        borderRadius: \"10px 0 0 0\"\n      },\n      className: styles.column,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), leadCols.map((col, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.column,\n      children: col.label\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 40\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.leadsContainer,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(TopBarLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        leadsCols: filterCols,\n        filter: filterLeads,\n        module: \"leads\",\n        filterMethodNames: filterMethodNames\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.leadsrecords,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"lead-columns\"],\n          children: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), filterApplied && filteredLeads.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"100%\",\n            backgroundColor: \"#fff\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No Leads present for the specified criteria. Please refresh the page.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 187\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 65\n        }, this), !!leads && filteredLeads.length === 0 && !filterApplied && leads.map(lead => /*#__PURE__*/_jsxDEV(Record, {\n          lead: lead\n        }, lead.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 95\n        }, this)), filterApplied && filteredLeads.length !== 0 && filteredLeads.map(lead => /*#__PURE__*/_jsxDEV(Record, {\n          lead: lead\n        }, lead.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 91\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LeadsContainer, \"eWjbkRa9XlimwJ4N6NTJP6zPrI4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LeadsContainer;\nexport default LeadsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeadsContainer\");","map":{"version":3,"sources":["/Users/mukesh-8058/Documents/GitHub/CRM/src/Components/Leads/LeadsContainer.js"],"names":["React","useState","Fragment","useDispatch","useSelector","TopBarLoading","contactsActions","leadActions","filterConfigObj","Filter","Record","styles","LeadsContainer","leadCols","isLoading","filterCols","dispatch","leads","filterApplied","filteredLeads","state","filterMethodNames","map","filter","filterName","filterLeads","name","value","filterByMethod","findFilterConfig","filterConfig","console","log","columns","minWidth","position","backgroundColor","borderRadius","column","col","index","label","leadsContainer","leadsrecords","length","height","display","justifyContent","alignItems","lead","id"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TopBarLoading from '../../Pages/LoadingTopBar';\nimport { contactsActions } from '../../Store/Contacts/contacts-slice';\nimport { leadActions } from '../../Store/Leads/leads-slice';\nimport { filterConfigObj } from '../../Utils/filter';\nimport Filter from '../Filter/Filter';\nimport Record from '../Record/Record';\nimport styles from './LeadsContainer.module.css';\n\n\nconst LeadsContainer = ({ leadCols, isLoading, filterCols }) => {\n    const dispatch = useDispatch();\n    const { leads, filterApplied, filteredLeads } = useSelector((state) => state.leads);\n    \n    const filterMethodNames = filterConfigObj.map(filter => filter.filterName);\n\n    const filterLeads = ({ name, value, filterByMethod }) => {\n      const findFilterConfig = filterConfigObj.filter(filterConfig => filterConfig.filterName === filterByMethod);\n        console.log(findFilterConfig);\n    }\n\n\n\n    let columns = <React.Fragment>\n        <div style={{ minWidth: \"2rem\", position: \"relative\", backgroundColor: \"#fff\", borderRadius: \"10px 0 0 0\" }} className={styles.column}>\n            <input type=\"checkbox\" />\n        </div>\n        { leadCols.map((col, index) => <div key={index} className={styles.column}>{col.label}</div>) }\n    </React.Fragment>;\n\n\n\n    return (<Fragment>\n                <section className={styles.leadsContainer}>\n            { isLoading && <TopBarLoading /> }\n            <Filter leadsCols={filterCols} filter={filterLeads} module=\"leads\" filterMethodNames={filterMethodNames} />\n            <section className={styles.leadsrecords}>\n                <div className={styles[\"lead-columns\"]}>{columns}</div>\n                {filterApplied && filteredLeads.length === 0 && <div style={{ height: \"100%\", backgroundColor: \"#fff\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}><p>No Leads present for the specified criteria. Please refresh the page.</p></div>}\n                {!!leads && filteredLeads.length === 0 && !filterApplied && leads.map(lead => <Record lead={lead} key={lead.id} />)}\n                {filterApplied && filteredLeads.length !== 0 && filteredLeads.map(lead => <Record key={lead.id} lead={lead} key={lead.id} />)}\n            </section>\n            \n        </section>\n        </Fragment>\n    );\n}\n\nexport default LeadsContainer;"]},"metadata":{},"sourceType":"module"}