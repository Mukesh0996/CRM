{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/CRM/src/Components/Leads/LeadsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingPage from '../../Pages/loadingPage';\nimport { leadActions } from '../../Store/Leads/leads-slice';\nimport Filter from '../Filter/Filter';\nimport Record from '../Record/Record';\nimport styles from './LeadsContainer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeadsContainer = ({\n  leadCols,\n  isLoading\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const leads = useSelector(state => state.leads.leads);\n\n  const is = ({\n    name,\n    value\n  }, leads) => {\n    console.log(name);\n    const lead = leads.filter(lead => lead[name] === value);\n    dispatch(leadActions.replaceLeads({\n      leads: lead\n    }));\n  };\n\n  const contains = () => {};\n\n  const [filterMethods, setFilterMethods] = useState([is, contains]);\n  const [filterString, setFilterString] = useState([\"is\", \"contains\"]);\n\n  const filterLeads = obj => {\n    const methodIndex = filterString.findIndex(filter => filter === obj.filterByMethod);\n    const method = filterMethods[methodIndex];\n    method(obj, leads);\n  };\n\n  let columns = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minWidth: \"3rem\",\n        position: \"fixed\",\n        backgroundColor: \"#fff\",\n        borderRadius: \"10px 0 0 0\"\n      },\n      className: styles.column,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), leadCols.map((key, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.column,\n      children: key.label\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 39\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.leadsContainer,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      leadsCols: leadCols,\n      filter: filterLeads\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.leadsrecords,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"lead-columns\"],\n        children: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), leads.map(lead => /*#__PURE__*/_jsxDEV(Record, {\n        lead: lead\n      }, lead.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 40\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LeadsContainer, \"3y1yUrOrJal/Ka5Ks76AO7525zs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LeadsContainer;\nexport default LeadsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeadsContainer\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Components/Leads/LeadsContainer.js"],"names":["React","useState","useDispatch","useSelector","LoadingPage","leadActions","Filter","Record","styles","LeadsContainer","leadCols","isLoading","dispatch","leads","state","is","name","value","console","log","lead","filter","replaceLeads","contains","filterMethods","setFilterMethods","filterString","setFilterString","filterLeads","obj","methodIndex","findIndex","filterByMethod","method","columns","minWidth","position","backgroundColor","borderRadius","column","map","key","index","label","leadsContainer","leadsrecords","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingPage from '../../Pages/loadingPage';\nimport { leadActions } from '../../Store/Leads/leads-slice';\nimport Filter from '../Filter/Filter';\nimport Record from '../Record/Record';\nimport styles from './LeadsContainer.module.css';\n\n\nconst LeadsContainer = ({ leadCols, isLoading }) => {\n   const dispatch = useDispatch(); \n\n   const leads = useSelector((state)=> state.leads.leads);\n\n    const is = ({name, value}, leads) => {\n        console.log(name);\n        const lead = leads.filter((lead)=> lead[name] === value);\n            dispatch(leadActions.replaceLeads({\n                leads: lead\n            }));\n    };\n   \n    const contains = () => {\n\n    };\n\n    const [filterMethods, setFilterMethods] = useState([is, contains]);\n    const [filterString, setFilterString] = useState([\"is\", \"contains\"]);\n\n\n    const filterLeads = (obj) => {\n        const methodIndex = filterString.findIndex(filter => filter === obj.filterByMethod);\n        const method = filterMethods[methodIndex];\n        method(obj, leads)\n    }\n\n\n    let columns = <React.Fragment>\n        <div style={{ minWidth: \"3rem\", position: \"fixed\", backgroundColor: \"#fff\", borderRadius: \"10px 0 0 0\" }} className={styles.column}>\n            <input type=\"checkbox\" />\n        </div>\n        {leadCols.map((key, index) => <div key={index} className={styles.column}>{key.label}</div>)}\n    </React.Fragment>;\n\n    return (<section className={styles.leadsContainer}>\n                {isLoading && <LoadingPage />}\n                <Filter leadsCols={leadCols} filter={filterLeads}/>\n                <section className={styles.leadsrecords}>\n                    <div className={styles[\"lead-columns\"]}>\n                        {columns}\n                    </div>\n                    {leads.map(lead => <Record lead={lead} key={lead.id} />)}\n                </section>\n            </section>);\n}\n\nexport default LeadsContainer"]},"metadata":{},"sourceType":"module"}