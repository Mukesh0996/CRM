{"ast":null,"code":"import _objectSpread from\"/Users/mukesh-8058/Desktop/CRM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/mukesh-8058/Desktop/CRM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState,useCallback,useContext}from\"react\";import useHttp from\"./httpHook\";import AuthContext from\"../Store/Auth/AuthContext\";var useForm=function useForm(requestFn){var _useHttp=useHttp(requestFn,false),isLoading=_useHttp.isLoading,error=_useHttp.error,sendRequest=_useHttp.sendRequest;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),formObj=_useState2[0],setFormObj=_useState2[1];var ctx=useContext(AuthContext);useEffect(function(){sendRequest(ctx.orgId,function(data){setFormObj(data);});},[]);var inputHandler=useCallback(function(event,section){var _event$target=event.target,name=_event$target.name,value=_event$target.value;var newFormObj=_objectSpread({},formObj);// code runs if address section is split into billing section\nif(section===\"billing\"){newFormObj.address.billing[name].value=value;setFormObj(_objectSpread({},newFormObj));}// code runs if address section is split into shipping section\nif(section===\"shipping\"){newFormObj.address.shipping[name].value=value;setFormObj(_objectSpread({},newFormObj));}// code runs if address section is not split and if the section is information section\nif(section===\"address\"||section===\"information\"){newFormObj[section][name].value=value;setFormObj(_objectSpread({},newFormObj));}},[formObj]);return{inputHandler:inputHandler,isLoading:isLoading,httpError:error,address:formObj.address,information:formObj.information};};export default useForm;","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Hooks/useForm.js"],"names":["useEffect","useState","useCallback","useContext","useHttp","AuthContext","useForm","requestFn","isLoading","error","sendRequest","formObj","setFormObj","ctx","orgId","data","inputHandler","event","section","target","name","value","newFormObj","address","billing","shipping","httpError","information"],"mappings":"ySAAA,OAASA,SAAT,CAAoBC,QAApB,CAA8BC,WAA9B,CAA2CC,UAA3C,KAA6D,OAA7D,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,SAAD,CAAe,CAE3B,aAA2CH,OAAO,CAACG,SAAD,CAAY,KAAZ,CAAlD,CAAQC,SAAR,UAAQA,SAAR,CAAmBC,KAAnB,UAAmBA,KAAnB,CAA0BC,WAA1B,UAA0BA,WAA1B,CACA,cAA6BT,QAAQ,CAAC,EAAD,CAArC,wCAAOU,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,GAAG,CAAGV,UAAU,CAACE,WAAD,CAAtB,CAEAL,SAAS,CAAC,UAAM,CACZU,WAAW,CAACG,GAAG,CAACC,KAAL,CAAY,SAACC,IAAD,CAAS,CAC5BH,UAAU,CAACG,IAAD,CAAV,CACH,CAFU,CAAX,CAGH,CAJQ,CAIP,EAJO,CAAT,CAMF,GAAMC,CAAAA,YAAY,CAAGd,WAAW,CAAC,SAACe,KAAD,CAAQC,OAAR,CAAoB,CAElD,kBAAwBD,KAAK,CAACE,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CACA,GAAMC,CAAAA,UAAU,kBAAOX,OAAP,CAAhB,CACD;AACC,GAAGO,OAAO,GAAK,SAAf,CAA0B,CACtBI,UAAU,CAACC,OAAX,CAAmBC,OAAnB,CAA2BJ,IAA3B,EAAiCC,KAAjC,CAAyCA,KAAzC,CACAT,UAAU,kBAAKU,UAAL,EAAV,CACH,CACD;AACA,GAAGJ,OAAO,GAAK,UAAf,CAA0B,CACvBI,UAAU,CAACC,OAAX,CAAmBE,QAAnB,CAA4BL,IAA5B,EAAkCC,KAAlC,CAA0CA,KAA1C,CACAT,UAAU,kBAAKU,UAAL,EAAV,CAEF,CACD;AACA,GAAGJ,OAAO,GAAK,SAAZ,EAAyBA,OAAO,GAAK,aAAxC,CAAuD,CACpDI,UAAU,CAACJ,OAAD,CAAV,CAAoBE,IAApB,EAA0BC,KAA1B,CAAkCA,KAAlC,CACAT,UAAU,kBAAKU,UAAL,EAAV,CACF,CAEH,CArB+B,CAqB9B,CAACX,OAAD,CArB8B,CAAhC,CAuBE,MAAO,CACHK,YAAY,CAAZA,YADG,CAEHR,SAAS,CAATA,SAFG,CAGHkB,SAAS,CAAEjB,KAHR,CAIHc,OAAO,CAAEZ,OAAO,CAACY,OAJd,CAKHI,WAAW,CAAEhB,OAAO,CAACgB,WALlB,CAAP,CAOH,CA3CD,CA6CA,cAAerB,CAAAA,OAAf","sourcesContent":["import { useEffect, useState, useCallback, useContext } from \"react\";\nimport useHttp from \"./httpHook\"\nimport AuthContext from \"../Store/Auth/AuthContext\";\n\nconst useForm = (requestFn) => {\n\n    const { isLoading, error, sendRequest } =  useHttp(requestFn, false);\n    const [formObj, setFormObj]= useState({});  \n\n    const ctx = useContext(AuthContext);\n\n    useEffect(() => {\n        sendRequest(ctx.orgId, (data)=> {\n            setFormObj(data);\n        })\n    },[]);\n\n  const inputHandler = useCallback((event, section) => {\n    \n     const { name, value } = event.target;\n     const newFormObj = {...formObj};\n    // code runs if address section is split into billing section\n     if(section === \"billing\") {\n         newFormObj.address.billing[name].value = value;\n         setFormObj({...newFormObj});\n     }\n     // code runs if address section is split into shipping section\n     if(section === \"shipping\"){\n        newFormObj.address.shipping[name].value = value;\n        setFormObj({...newFormObj});\n\n     } \n     // code runs if address section is not split and if the section is information section\n     if(section === \"address\" || section === \"information\") {\n        newFormObj[section][name].value = value;\n        setFormObj({...newFormObj});\n     }\n    \n  },[formObj])\n   \n    return {\n        inputHandler,\n        isLoading,\n        httpError: error,\n        address: formObj.address,\n        information: formObj.information\n    }\n}\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}