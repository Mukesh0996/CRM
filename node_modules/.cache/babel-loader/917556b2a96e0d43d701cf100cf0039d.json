{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/front/src/Store/AuthStore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  userId: \"\",\n  orgId: \"\",\n  signIn: () => {},\n  signOut: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(initialToken);\n\n  const signInHandler = () => {};\n\n  const signOutHandler = () => {};\n\n  const authValue = {\n    isLoggedIn: isLoggedIn,\n    token,\n    signIn: signInHandler,\n    signOut: signOutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"stDztsFomB59huzIhxP3e0An3y4=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/front/src/Store/AuthStore.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","userId","orgId","signIn","signOut","AuthContextProvider","props","initialToken","localStorage","getItem","setIsLoggedIn","setToken","signInHandler","signOutHandler","authValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACpCC,EAAAA,KAAK,EAAE,EAD6B;AAEpCC,EAAAA,UAAU,EAAE,KAFwB;AAGpCC,EAAAA,MAAM,EAAC,EAH6B;AAIpCC,EAAAA,KAAK,EAAC,EAJ8B;AAKpCC,EAAAA,MAAM,EAAE,MAAK,CAAE,CALqB;AAMpCC,EAAAA,OAAO,EAAE,MAAM,CAAE;AANmB,CAApB,CAApB;AASA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAE1C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACT,UAAD,EAAaU,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACG,KAAD,EAAQY,QAAR,IAAoBf,QAAQ,CAACW,YAAD,CAAlC;;AAEA,QAAMK,aAAa,GAAG,MAAM,CAE3B,CAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAKA,QAAMC,SAAS,GAAG;AACdd,IAAAA,UAAU,EAAEA,UADE;AAEdD,IAAAA,KAFc;AAGdI,IAAAA,MAAM,EAAES,aAHM;AAIdR,IAAAA,OAAO,EAAES;AAJK,GAAlB;AAUA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,SAA7B;AAAA,cAAyCR,KAAK,CAACS;AAA/C;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CA3BM;;GAAMV,mB;;KAAAA,mB","sourcesContent":["import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\n    token: \"\",\n    isLoggedIn: false,\n    userId:\"\",\n    orgId:\"\",\n    signIn: ()=> {},\n    signOut: () => {}\n})\n\nexport const AuthContextProvider = (props) => {\n\n    const initialToken = localStorage.getItem('token')\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [token, setToken] = useState(initialToken);\n\n    const signInHandler = () => {\n\n    }\n\n    const signOutHandler = () => {\n\n    }\n\n\n    const authValue = {\n        isLoggedIn: isLoggedIn,\n        token,\n        signIn: signInHandler,\n        signOut: signOutHandler \n    }\n\n\n\n\n    return <AuthContext.Provider value={authValue}>{props.children}</AuthContext.Provider>\n\n}"]},"metadata":{},"sourceType":"module"}