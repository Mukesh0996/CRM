{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Documents/GitHub/CRM/src/Components/Dasboard/ChartBar.js\";\nimport styles from './ChartBar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chartbar = ({\n  value,\n  label,\n  maxValue\n}) => {\n  let minValue = \"0%\";\n\n  if (value > 0) {\n    setTimeout(() => {\n      minValue = Math.round(value / maxValue) * 100 + \"%\";\n    }, 2000);\n  }\n\n  console.log(value, label);\n  const elemStyle = {\n    height: minValue\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chart,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chartBarvalue,\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chartBar,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: elemStyle,\n        className: styles.chartBar_fill\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chartBar_label,\n      children: label.substring(0, 3)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Chartbar;\nexport default Chartbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chartbar\");","map":{"version":3,"sources":["/Users/mukesh-8058/Documents/GitHub/CRM/src/Components/Dasboard/ChartBar.js"],"names":["styles","Chartbar","value","label","maxValue","minValue","setTimeout","Math","round","console","log","elemStyle","height","chart","chartBarvalue","chartBar","chartBar_fill","chartBar_label","substring"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,uBAAnB;;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AAG3C,MAAIC,QAAQ,GAAG,IAAf;;AAEA,MAAGH,KAAK,GAAG,CAAX,EAAc;AACVI,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,QAAQ,GAAIE,IAAI,CAACC,KAAL,CAAWN,KAAK,GAACE,QAAjB,IAA2B,GAA5B,GAAmC,GAA9C;AACH,KAFS,EAEP,IAFO,CAAV;AAGH;;AACGK,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ,EAAmBC,KAAnB;AAEJ,QAAMQ,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAEP;AADM,GAAlB;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACa,KAAvB;AAAA,4BACC;AAAK,MAAA,SAAS,EAAEb,MAAM,CAACc,aAAvB;AAAA,gBAAuCZ;AAAvC;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACe,QAAvB;AAAA,6BACI;AAAK,QAAA,KAAK,EAAEJ,SAAZ;AAAwB,QAAA,SAAS,EAAEX,MAAM,CAACgB;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFD,eAKC;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACiB,cAAvB;AAAA,gBAAwCd,KAAK,CAACe,SAAN,CAAgB,CAAhB,EAAmB,CAAnB;AAAxC;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH,CAxBD;;KAAMjB,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import styles from './ChartBar.module.css';\n\n\nconst Chartbar = ({value, label, maxValue}) => {\n\n\n    let minValue = \"0%\";\n\n    if(value > 0) {\n        setTimeout(() => {\n            minValue = (Math.round(value/maxValue)*100) + \"%\";\n        }, 2000)\n    }\n        console.log(value, label);\n\n    const elemStyle = {\n        height: minValue\n    }\n   \n\n    return <div className={styles.chart}>\n            <div className={styles.chartBarvalue}>{value}</div>\n            <div className={styles.chartBar}>\n                <div style={elemStyle}  className={styles.chartBar_fill}></div>\n            </div>\n            <div className={styles.chartBar_label}>{label.substring(0, 3)}</div>\n    </div>\n}\n\nexport default Chartbar;"]},"metadata":{},"sourceType":"module"}