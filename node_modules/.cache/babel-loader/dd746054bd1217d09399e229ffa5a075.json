{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/React/front/src/Pages/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useInput from '../Hooks/inputHook';\nimport LoadingPage from './loadingPage';\nimport styles from './Signup.module.css'; //helper functions\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() !== \"\" && value.trim().length >= 3;\n\nconst isContactNumber = value => !isNaN(value) && value.trim().length >= 10;\n\nconst isEmail = value => value.includes('@') && value.trim().length > 3;\n\nconst Signup = () => {\n  _s();\n\n  const [signIn, setSignIn] = useState(\"\");\n  const [error, setError] = useState({\n    isError: false,\n    errorMessage: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    value: first_name,\n    valueChangeHandler: firstNameHandler,\n    blurHandler: fNameBlurHandler,\n    isValid: fNameValid,\n    isTouched: fNameTouched\n  } = useInput(isEmpty);\n  console.log(fNameValid, fNameTouched);\n  const {\n    value: last_name,\n    valueChangeHandler: lastNameHandler,\n    blurHandler: lNameBlurHandler,\n    isValid: lNameValid,\n    isTouched: lNameTouched\n  } = useInput(isEmpty);\n  const {\n    value: email,\n    valueChangeHandler: emailHandler,\n    blurHandler: emailBlurHandler,\n    isValid: emailValid,\n    isTouched: emailTouched\n  } = useInput(isEmail);\n  const {\n    value: contact,\n    valueChangeHandler: contactHandler,\n    blurHandler: contactBlurHandler,\n    isValid: contactValid,\n    isTouched: contactTouched\n  } = useInput(isContactNumber);\n  const {\n    value: org_name,\n    valueChangeHandler: orgNameHandler,\n    blurHandler: orgBlurHandler,\n    isValid: orgNameValid,\n    isTouched: orgNameTouched\n  } = useInput(isEmpty);\n  const {\n    value: password,\n    valueChangeHandler: passwordHandler,\n    blurHandler: passwordBlurHandler,\n    isValid: passwordValid,\n    isTouched: passwordTouched\n  } = useInput(isEmpty);\n\n  const sendRequest = async signUpObj => {\n    const response = await fetch(\"http://localhost:8080/signup\", {\n      method: \"POST\",\n      body: JSON.stringify(signUpObj),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const resData = await response.json();\n\n    if (!response.ok) {\n      throw new Error(resData.message);\n    }\n\n    if (response.ok) {\n      setIsLoading(false);\n      setSignIn(\"Sign In Successfull\");\n    }\n  };\n\n  const signUphandler = event => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    if (fNameValid && lNameValid && emailValid && contactValid && orgNameValid && passwordValid) {\n      const signUpObj = {\n        first_name,\n        last_name,\n        email,\n        contact,\n        org_name,\n        password\n      };\n\n      try {\n        sendRequest(signUpObj);\n      } catch (error) {\n        setIsLoading(false);\n        setError({\n          isError: true,\n          errorMessage: error.message\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.signin,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Already have an account? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"SIGN IN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 82\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.signupContainer,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 31\n      }, this), error.isError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.signUp,\n        children: [error.errorMessage, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"form-detail\"],\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Sign up. For Free\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"to access CRM.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: signUphandler,\n          autoComplete: \"false\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"form-control\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"f_name\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"f_name\",\n              name: \"first_name\",\n              onChange: event => firstNameHandler(event),\n              onBlur: fNameBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), !fNameValid && fNameTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: \"Please enter a valid First Name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"form-control\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"l_name\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"l_name\",\n              name: \"last_name\",\n              onBlur: lNameBlurHandler,\n              onChange: lastNameHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), !lNameValid && lNameTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: \"Please enter a valid Last Name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"form-control\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Work Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"email\",\n              name: \"email\",\n              onBlur: emailBlurHandler,\n              onChange: emailHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), !emailValid && emailTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: \"Please enter a valid Email.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"form-control\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"contact\",\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"contact\",\n              name: \"contact\",\n              onBlur: contactBlurHandler,\n              onChange: contactHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), !contactValid && contactTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: \"Please enter a valid Contact number.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"form-control\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"orgname\",\n              children: \"Organizations Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"orgname\",\n              name: \"org_name\",\n              onBlur: orgBlurHandler,\n              onChange: orgNameHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), !orgNameValid && orgNameTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: \"Please enter a valid organizations name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"form-control\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              autoComplete: \"false\",\n              onBlur: passwordBlurHandler,\n              onChange: passwordHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), !passwordValid && passwordTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: \"Please enter a valid password. Should be of length 3.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 68\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.submitBtn,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), signIn.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.signinSuccess,\n            children: [signIn, \" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 93\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Signup, \"hqgOmcU3E7FfPpnWRM7ESJwp3so=\", false, function () {\n  return [useInput, useInput, useInput, useInput, useInput, useInput];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/React/front/src/Pages/Signup.js"],"names":["Fragment","useState","Link","useInput","LoadingPage","styles","isEmpty","value","trim","length","isContactNumber","isNaN","isEmail","includes","Signup","signIn","setSignIn","error","setError","isError","errorMessage","isLoading","setIsLoading","first_name","valueChangeHandler","firstNameHandler","blurHandler","fNameBlurHandler","isValid","fNameValid","isTouched","fNameTouched","console","log","last_name","lastNameHandler","lNameBlurHandler","lNameValid","lNameTouched","email","emailHandler","emailBlurHandler","emailValid","emailTouched","contact","contactHandler","contactBlurHandler","contactValid","contactTouched","org_name","orgNameHandler","orgBlurHandler","orgNameValid","orgNameTouched","password","passwordHandler","passwordBlurHandler","passwordValid","passwordTouched","sendRequest","signUpObj","response","fetch","method","body","JSON","stringify","headers","resData","json","ok","Error","message","signUphandler","event","preventDefault","signin","signupContainer","signUp","form","submitBtn","signinSuccess"],"mappings":"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","sourcesContent":["import { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useInput from '../Hooks/inputHook';\nimport LoadingPage from './loadingPage';\nimport styles from './Signup.module.css';\n\n//helper functions\nconst isEmpty = (value) => value.trim() !== \"\" && value.trim().length >= 3; \nconst isContactNumber = (value) => !isNaN(value) && value.trim().length >= 10;\nconst isEmail = (value) => value.includes('@') && value.trim().length > 3;\n\nconst Signup = () => {\n    const [signIn, setSignIn] = useState(\"\");\n    const [error, setError] = useState({ isError: false, errorMessage: \"\" });\n    const [isLoading, setIsLoading] = useState(false);\n\n   const { value: first_name, \n            valueChangeHandler: firstNameHandler, \n            blurHandler: fNameBlurHandler,\n            isValid: fNameValid , isTouched: fNameTouched } = useInput(isEmpty);\n            console.log(fNameValid, fNameTouched);\n\n    const { value: last_name, \n           valueChangeHandler: lastNameHandler, \n           blurHandler: lNameBlurHandler, \n           isValid: lNameValid, isTouched : lNameTouched} = useInput(isEmpty);\n\n   const { value: email, \n         valueChangeHandler: emailHandler, \n         blurHandler: emailBlurHandler, \n         isValid: emailValid, isTouched: emailTouched } = useInput(isEmail);\n\n   const { value: contact, \n        valueChangeHandler: contactHandler, \n        blurHandler: contactBlurHandler, \n        isValid: contactValid, isTouched: contactTouched } = useInput(isContactNumber);\n\n   const { value: org_name, \n           valueChangeHandler: orgNameHandler, \n           blurHandler: orgBlurHandler, \n           isValid: orgNameValid, isTouched: orgNameTouched } = useInput(isEmpty);\n\n   const { value: password, \n         valueChangeHandler: passwordHandler, \n         blurHandler: passwordBlurHandler, \n         isValid: passwordValid, isTouched: passwordTouched } = useInput(isEmpty);\n\n         const sendRequest = async (signUpObj) => {\n            const response = await fetch(\"http://localhost:8080/signup\", {\n                method: \"POST\",\n                body: JSON.stringify(signUpObj),\n                headers : {\n                    'Content-Type': 'application/json'\n                }\n            })\n            const resData = await response.json();\n            if(!response.ok) {\n                throw new Error(resData.message)                      \n            } \n            if(response.ok){\n               setIsLoading(false); \n               setSignIn(\"Sign In Successfull\");\n            }               \n        }\n\n    const signUphandler =  (event) => {\n        event.preventDefault();\n        setIsLoading(true);\n        if(fNameValid && lNameValid && emailValid && contactValid && orgNameValid && passwordValid) {\n            const signUpObj = { first_name, last_name, email, contact, org_name, password };\n            try {\n               sendRequest(signUpObj);\n            } catch (error) {\n                setIsLoading(false);\n                    setError({isError: true, errorMessage: error.message})\n            }\n        }\n    }\n\n    return (<Fragment>\n                <div className={styles.signin}> <p> Already have an account? </p><Link to=\"/\">SIGN IN</Link></div>\n                <main className={styles.signupContainer}>\n                {isLoading && <LoadingPage/>}\n                {error.isError && <p className={styles.signUp}>{error.errorMessage} </p>}\n                <section className={styles.form}>\n                    <div className={styles[\"form-detail\"]}>\n                        <h1>Sign up. For Free</h1>\n                        <p>to access CRM.</p>\n                    </div>\n                    <form onSubmit={signUphandler} autoComplete=\"false\">\n                        <div className={styles[\"form-control\"]}>\n                            <label htmlFor=\"f_name\">First Name</label>\n                            <input type=\"text\" id=\"f_name\" name=\"first_name\" onChange={(event)=> firstNameHandler(event)} onBlur={fNameBlurHandler}/>\n                            { !fNameValid && fNameTouched && <p className={styles.error}>Please enter a valid First Name.</p> }\n                        </div>\n                        <div className={styles[\"form-control\"]}>\n                            <label htmlFor=\"l_name\">Last Name</label>\n                            <input type=\"text\" id=\"l_name\" name=\"last_name\" onBlur={lNameBlurHandler} onChange={lastNameHandler}/>\n                            { !lNameValid && lNameTouched && <p className={styles.error}>Please enter a valid Last Name.</p> }\n                        </div>\n                        <div className={styles[\"form-control\"]}>\n                            <label htmlFor=\"email\">Work Email</label>\n                            <input type=\"text\" id=\"email\" name=\"email\" onBlur={emailBlurHandler}  onChange={emailHandler}/>\n                            { !emailValid && emailTouched && <p className={styles.error}>Please enter a valid Email.</p> }\n                        </div>\n                        <div className={styles[\"form-control\"]}>\n                            <label htmlFor=\"contact\">Contact</label>\n                            <input type=\"text\" id=\"contact\" name=\"contact\"  onBlur={contactBlurHandler} onChange={contactHandler}/>\n                            { !contactValid && contactTouched && <p className={styles.error}>Please enter a valid Contact number.</p> }\n                        </div>\n                        <div className={styles[\"form-control\"]}>\n                            <label htmlFor=\"orgname\">Organizations Name</label>\n                            <input type=\"text\" id=\"orgname\" name=\"org_name\"  onBlur= {orgBlurHandler} onChange={orgNameHandler}/>\n                            { !orgNameValid && orgNameTouched && <p className={styles.error}>Please enter a valid organizations name.</p> }\n                        </div>\n                        <div className={styles[\"form-control\"]}>\n                            <label htmlFor=\"password\">Password</label>\n                            <input type=\"password\" id=\"password\" name=\"password\"  autoComplete=\"false\" onBlur={passwordBlurHandler} onChange={passwordHandler}/>\n                            { !passwordValid && passwordTouched && <p className={styles.error}>Please enter a valid password. Should be of length 3.</p> }\n                        </div>\n                        <button className={styles.submitBtn}>Sign Up</button>\n                        { signIn.length > 0 && <p className={styles.signinSuccess}>{signIn} <Link to=\"/\">Sign In</Link></p> }\n                    </form>\n                </section>\n            </main>\n        </Fragment>\n    );\n\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}