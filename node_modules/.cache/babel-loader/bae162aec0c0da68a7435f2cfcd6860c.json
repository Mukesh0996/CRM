{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/CRM/src/Components/Leads/LeadsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport LoadingPage from '../../Pages/loadingPage';\nimport Filter from '../Filter/Filter';\nimport Record from '../Record/Record';\nimport styles from './LeadsContainer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeadsContainer = ({\n  leadCols,\n  leads,\n  isLoading\n}) => {\n  _s();\n\n  const is = () => {\n    console.log(\"executing\");\n  };\n\n  const contains = () => {};\n\n  const [filterMethods, setFilterMethods] = useState([is, contains]);\n  const [filterString, setFilterString] = useState([\"is\", \"contains\"]);\n\n  const filterLeads = obj => {\n    console.log(obj);\n    const methodIndex = filterString.findIndex(filter => filter === obj.filterByMethod);\n    console.log(methodIndex);\n  };\n\n  let columns = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minWidth: \"3rem\",\n        position: \"fixed\",\n        backgroundColor: \"#fff\",\n        borderRadius: \"10px 0 0 0\"\n      },\n      className: styles.column,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), leadCols.map((key, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.column,\n      children: key.label\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 39\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.leadsContainer,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      leadsCols: leadCols,\n      filter: filterLeads\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.leadsrecords,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"lead-columns\"],\n        children: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), leads.map(lead => /*#__PURE__*/_jsxDEV(Record, {\n        lead: lead\n      }, lead.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 40\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LeadsContainer, \"2idWOlV8VaEnc3Y4RGKCtngS46o=\");\n\n_c = LeadsContainer;\nexport default LeadsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeadsContainer\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Components/Leads/LeadsContainer.js"],"names":["React","useState","LoadingPage","Filter","Record","styles","LeadsContainer","leadCols","leads","isLoading","is","console","log","contains","filterMethods","setFilterMethods","filterString","setFilterString","filterLeads","obj","methodIndex","findIndex","filter","filterByMethod","columns","minWidth","position","backgroundColor","borderRadius","column","map","key","index","label","leadsContainer","leadsrecords","lead","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAD,KAAoC;AAAA;;AACvD,QAAMC,EAAE,GAAG,MAAM;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GAFD;;AAGA,QAAMC,QAAQ,GAAG,MAAM,CAAE,CAAzB;;AAEA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,CAACS,EAAD,EAAKG,QAAL,CAAD,CAAlD;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,CAAC,IAAD,EAAO,UAAP,CAAD,CAAhD;;AAGA,QAAMiB,WAAW,GAAIC,GAAD,IAAS;AACzBR,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACA,UAAMC,WAAW,GAAGJ,YAAY,CAACK,SAAb,CAAuBC,MAAM,IAAIA,MAAM,KAAKH,GAAG,CAACI,cAAhD,CAApB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYQ,WAAZ;AAEH,GALD;;AAQA,MAAII,OAAO,gBAAG,QAAC,KAAD,CAAO,QAAP;AAAA,4BACV;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,QAAQ,EAAE,OAA9B;AAAuCC,QAAAA,eAAe,EAAE,MAAxD;AAAgEC,QAAAA,YAAY,EAAE;AAA9E,OAAZ;AAA0G,MAAA,SAAS,EAAEvB,MAAM,CAACwB,MAA5H;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADU,EAITtB,QAAQ,CAACuB,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,kBAAgB;AAAiB,MAAA,SAAS,EAAE3B,MAAM,CAACwB,MAAnC;AAAA,gBAA4CE,GAAG,CAACE;AAAhD,OAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,YAA7B,CAJS;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAOA,sBAAQ;AAAS,IAAA,SAAS,EAAE3B,MAAM,CAAC6B,cAA3B;AAAA,eACKzB,SAAS,iBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADlB,eAEI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEF,QAAnB;AAA6B,MAAA,MAAM,EAAEW;AAArC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAS,MAAA,SAAS,EAAEb,MAAM,CAAC8B,YAA3B;AAAA,8BACI;AAAK,QAAA,SAAS,EAAE9B,MAAM,CAAC,cAAD,CAAtB;AAAA,kBACKmB;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKhB,KAAK,CAACsB,GAAN,CAAUM,IAAI,iBAAI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEA;AAAd,SAAyBA,IAAI,CAACC,EAA9B;AAAA;AAAA;AAAA;AAAA,cAAlB,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAUH,CAnCD;;GAAM/B,c;;KAAAA,c;AAqCN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport LoadingPage from '../../Pages/loadingPage';\nimport Filter from '../Filter/Filter';\nimport Record from '../Record/Record';\nimport styles from './LeadsContainer.module.css';\n\n\nconst LeadsContainer = ({ leadCols, leads, isLoading }) => {\n    const is = () => {\n        console.log(\"executing\");\n    };\n    const contains = () => {};\n\n    const [filterMethods, setFilterMethods] = useState([is, contains]);\n    const [filterString, setFilterString] = useState([\"is\", \"contains\"]);\n\n\n    const filterLeads = (obj) => {\n        console.log(obj);\n        const methodIndex = filterString.findIndex(filter => filter === obj.filterByMethod);\n        console.log(methodIndex);\n      \n    }\n\n\n    let columns = <React.Fragment>\n        <div style={{ minWidth: \"3rem\", position: \"fixed\", backgroundColor: \"#fff\", borderRadius: \"10px 0 0 0\" }} className={styles.column}>\n            <input type=\"checkbox\" />\n        </div>\n        {leadCols.map((key, index) => <div key={index} className={styles.column}>{key.label}</div>)}\n    </React.Fragment>;\n\n    return (<section className={styles.leadsContainer}>\n                {isLoading && <LoadingPage />}\n                <Filter leadsCols={leadCols} filter={filterLeads}/>\n                <section className={styles.leadsrecords}>\n                    <div className={styles[\"lead-columns\"]}>\n                        {columns}\n                    </div>\n                    {leads.map(lead => <Record lead={lead} key={lead.id} />)}\n                </section>\n            </section>);\n}\n\nexport default LeadsContainer"]},"metadata":{},"sourceType":"module"}