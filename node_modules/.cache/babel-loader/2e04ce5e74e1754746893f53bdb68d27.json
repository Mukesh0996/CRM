{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mukesh-8058/Desktop/CRM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mukesh-8058/Desktop/CRM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var url=\"http://localhost:8080\";export var postSignIn=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var response,responseData,error;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(url,\"/login\"),{method:\"POST\",body:JSON.stringify(data),headers:{\"Content-Type\":\"application/json\"}});case 2:response=_context.sent;_context.next=5;return response.json();case 5:responseData=_context.sent;if(response.ok){_context.next=11;break;}error=new Error(responseData.message);error.isValid=responseData.isValid;error.value=responseData.value;throw error;case 11:return _context.abrupt(\"return\",responseData);case 12:case\"end\":return _context.stop();}}},_callee);}));return function postSignIn(_x){return _ref.apply(this,arguments);};}();export var postSignUp=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){var response,responseData,error;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(url,\"/signup\"),{method:\"POST\",body:JSON.stringify(data),headers:{\"Content-Type\":\"application/json\"}});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:responseData=_context2.sent;if(response.ok){_context2.next=11;break;}error=new Error(responseData.message);error.isValid=responseData.isValid;error.value=responseData.value;throw error;case 11:return _context2.abrupt(\"return\",responseData);case 12:case\"end\":return _context2.stop();}}},_callee2);}));return function postSignUp(_x2){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/library/authFns.js"],"names":["url","postSignIn","data","fetch","method","body","JSON","stringify","headers","response","json","responseData","ok","error","Error","message","isValid","value","postSignUp"],"mappings":"uSAAA,GAAMA,CAAAA,GAAG,CAAG,uBAAZ,CAEA,MAAO,IAAMC,CAAAA,UAAU,0FAAG,iBAAOC,IAAP,wKACCC,CAAAA,KAAK,WAAIH,GAAJ,WAAiB,CACzCI,MAAM,CAAC,MADkC,CAEzCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFmC,CAGzCM,OAAO,CAAE,CACL,eAAgB,kBADX,CAHgC,CAAjB,CADN,QAChBC,QADgB,qCAQKA,CAAAA,QAAQ,CAACC,IAAT,EARL,QAQhBC,YARgB,kBASlBF,QAAQ,CAACG,EATS,0BAUfC,KAVe,CAUP,GAAIC,CAAAA,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAVO,CAWnBF,KAAK,CAACG,OAAN,CAAgBL,YAAY,CAACK,OAA7B,CACAH,KAAK,CAACI,KAAN,CAAcN,YAAY,CAACM,KAA3B,CAZmB,KAabJ,CAAAA,KAba,yCAgBfF,YAhBe,yDAAH,kBAAVV,CAAAA,UAAU,4CAAhB,CAmBP,MAAO,IAAMiB,CAAAA,UAAU,2FAAG,kBAAMhB,IAAN,6KACCC,CAAAA,KAAK,WAAIH,GAAJ,YAAkB,CAC1CI,MAAM,CAAC,MADmC,CAE1CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFoC,CAG1CM,OAAO,CAAG,CACN,eAAgB,kBADV,CAHgC,CAAlB,CADN,QAChBC,QADgB,uCAQKA,CAAAA,QAAQ,CAACC,IAAT,EARL,QAQhBC,YARgB,mBASlBF,QAAQ,CAACG,EATS,2BAUdC,KAVc,CAUN,GAAIC,CAAAA,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAVM,CAWlBF,KAAK,CAACG,OAAN,CAAgBL,YAAY,CAACK,OAA7B,CACAH,KAAK,CAACI,KAAN,CAAcN,YAAY,CAACM,KAA3B,CAZkB,KAaZJ,CAAAA,KAbY,0CAefF,YAfe,2DAAH,kBAAVO,CAAAA,UAAU,8CAAhB","sourcesContent":["const url = \"http://localhost:8080\";\n\nexport const postSignIn = async (data) => {\n    const response = await fetch(`${url}/login`, {\n        method:\"POST\",\n        body: JSON.stringify(data),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    const responseData = await response.json();\n    if(!response.ok) {\n       let error = new Error(responseData.message);\n       error.isValid = responseData.isValid;\n       error.value = responseData.value;\n       throw(error);\n      \n    }\n    return responseData;\n}\n\nexport const postSignUp = async(data) => {\n    const response = await fetch(`${url}/signup`, {\n        method:\"POST\",\n        body: JSON.stringify(data),\n        headers : {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    const responseData = await response.json();\n    if(!response.ok) {\n        let error = new Error(responseData.message);\n        error.isValid = responseData.isValid;\n        error.value = responseData.value;\n        throw(error);\n    }\n    return responseData;\n}"]},"metadata":{},"sourceType":"module"}