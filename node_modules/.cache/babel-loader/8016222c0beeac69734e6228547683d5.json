{"ast":null,"code":"import { contactsActions } from \"./contacts-slice\";\nconst url = \"http://localhost:8080\";\nexport const getContactsFields = async (orgId, token) => {\n  const response = await fetch(`${url}/contacts/org/${orgId}/contactsfields`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n  const responseData = await response.json();\n\n  if (!response.ok) {\n    let error = new Error(responseData.message || \"Error Occured!\");\n    error.isValid = responseData.isValid || false;\n    error.value = responseData.value || \"\";\n    throw error;\n  }\n\n  return responseData;\n};\nexport const getAllContacts = async (orgId, token) => {\n  console.log(\"exec\");\n  const response = await fetch(`${url}/contacts/org/${orgId}/getrecords`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n  const responseData = await response.json();\n\n  if (!response.ok) {\n    let error = new Error(responseData.message);\n    error.isValid = responseData.isValid;\n    error.value = responseData.value;\n    throw error;\n  }\n\n  console.log(responseData);\n};","map":{"version":3,"sources":["/Users/mukesh-8058/Documents/GitHub/CRM/src/Store/Contacts/contacts-actions.js"],"names":["contactsActions","url","getContactsFields","orgId","token","response","fetch","method","headers","responseData","json","ok","error","Error","message","isValid","value","getAllContacts","console","log"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AAEA,OAAO,MAAMC,iBAAiB,GAAG,OAAOC,KAAP,EAAcC,KAAd,KAAwB;AACjD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,GAAI,iBAAgBE,KAAM,iBAA9B,EAA+C;AACvEI,IAAAA,MAAM,EAAC,KADgE;AAEvEC,IAAAA,OAAO,EAAE;AACL,sBAAe,kBADV;AAEL,uBAAkB,UAASJ,KAAM;AAF5B;AAF8D,GAA/C,CAA5B;AAOA,QAAMK,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;;AACA,MAAG,CAACL,QAAQ,CAACM,EAAb,EAAiB;AACb,QAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,YAAY,CAACK,OAAb,IAAwB,gBAAlC,CAAZ;AACAF,IAAAA,KAAK,CAACG,OAAN,GAAgBN,YAAY,CAACM,OAAb,IAAwB,KAAxC;AACAH,IAAAA,KAAK,CAACI,KAAN,GAAcP,YAAY,CAACO,KAAb,IAAsB,EAApC;AACA,UAAMJ,KAAN;AACH;;AACD,SAAOH,YAAP;AACP,CAhBM;AAkBP,OAAO,MAAMQ,cAAc,GAAG,OAAOd,KAAP,EAAcC,KAAd,KAAwB;AAClDc,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,GAAI,iBAAgBE,KAAM,aAA9B,EAA4C;AACpEI,IAAAA,MAAM,EAAC,KAD6D;AAEpEC,IAAAA,OAAO,EAAG;AACN,sBAAgB,kBADV;AAEN,uBAAkB,UAASJ,KAAM;AAF3B;AAF0D,GAA5C,CAA5B;AAQA,QAAMK,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;;AACA,MAAG,CAACL,QAAQ,CAACM,EAAb,EAAiB;AACb,QAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,YAAY,CAACK,OAAvB,CAAZ;AACAF,IAAAA,KAAK,CAACG,OAAN,GAAgBN,YAAY,CAACM,OAA7B;AACAH,IAAAA,KAAK,CAACI,KAAN,GAAcP,YAAY,CAACO,KAA3B;AACA,UAAMJ,KAAN;AACH;;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACH,CAlBM","sourcesContent":["import { contactsActions } from \"./contacts-slice\";\n\nconst url = \"http://localhost:8080\";\n\nexport const getContactsFields = async (orgId, token) => {\n        const response = await fetch(`${url}/contacts/org/${orgId}/contactsfields`,{\n            method:\"GET\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            }\n        });\n        const responseData = await response.json();\n        if(!response.ok) {\n            let error = new Error(responseData.message || \"Error Occured!\")\n            error.isValid = responseData.isValid || false;\n            error.value = responseData.value || \"\";\n            throw(error);\n        }\n        return responseData;\n}\n\nexport const getAllContacts = async (orgId, token) => {\n    console.log(\"exec\");\n    const response = await fetch(`${url}/contacts/org/${orgId}/getrecords`, {\n        method:\"GET\",\n        headers : {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    const responseData = await response.json();\n    if(!response.ok) {\n        let error = new Error(responseData.message);\n        error.isValid = responseData.isValid;\n        error.value = responseData.value;\n        throw(error);\n    }\n    console.log(responseData);\n}"]},"metadata":{},"sourceType":"module"}