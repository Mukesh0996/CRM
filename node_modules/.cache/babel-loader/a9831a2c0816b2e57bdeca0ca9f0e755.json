{"ast":null,"code":"import { leadsActions } from \"./leads-slice\";\nconst url = \"http://localhost:8080\";\nexport const getFields = (orgId, token) => {\n  return async dispatch => {\n    console.log(dispatch);\n    const response = await fetch(`${url}/org/${orgId}/leads/leadstable`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(responseData => {\n      console.log(responseData);\n      dispatch(leadsActions.addFields({\n        fields: responseData\n      }));\n    });\n\n    if (!response.ok) {// let error = new Error(responseData.message || \"Error Occured!\")\n      // error.isValid = responseData.isValid || false;\n      // error.value = responseData.value || \"\";\n      // throw(error);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Store/Leads/leads-actions.js"],"names":["leadsActions","url","getFields","orgId","token","dispatch","console","log","response","fetch","method","headers","then","responseData","addFields","fields","ok"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAiB;AAEtC,SAAO,MAAOC,QAAP,IAAoB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,GAAI,QAAOE,KAAM,mBAArB,EAAwC;AAChEO,MAAAA,MAAM,EAAC,KADyD;AAEhEC,MAAAA,OAAO,EAAG;AACN,wBAAe,kBADT;AAEN,yBAAkB,UAASP,KAAM;AAF3B;AAFsD,KAAxC,CAAL,CAMpBQ,IANoB,CAMfC,YAAY,IAAI;AACpBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,YAAZ;AACAR,MAAAA,QAAQ,CAACL,YAAY,CAACc,SAAb,CAAuB;AAC5BC,QAAAA,MAAM,EAAEF;AADoB,OAAvB,CAAD,CAAR;AAGH,KAXsB,CAAvB;;AAcA,QAAG,CAACL,QAAQ,CAACQ,EAAb,EAAiB,CACb;AACA;AACA;AACA;AACH;AAEJ,GAvBD;AAwBH,CA1BM","sourcesContent":["import { leadsActions } from \"./leads-slice\";\n\nconst url = \"http://localhost:8080\";\n\nexport const getFields = (orgId, token) =>{\n   \n    return async (dispatch) => {\n        console.log(dispatch)\n        const response = await fetch(`${url}/org/${orgId}/leads/leadstable`,{\n            method:\"GET\",\n            headers : {\n                \"Content-Type\":\"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            }\n        }).then(responseData => {\n            console.log(responseData);\n            dispatch(leadsActions.addFields({\n                fields: responseData\n            }))\n        })\n        \n        \n        if(!response.ok) {\n            // let error = new Error(responseData.message || \"Error Occured!\")\n            // error.isValid = responseData.isValid || false;\n            // error.value = responseData.value || \"\";\n            // throw(error);\n        }\n       \n    }\n};"]},"metadata":{},"sourceType":"module"}