{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/CRM/src/Components/Leads/AddLead.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport useForm from '../../Hooks/Leads/useForm';\nimport styles from './AddLead.module.css';\nimport { postLeadRecord } from '../../library/leadsFns';\nimport LoadingPage from '../../Pages/loadingPage';\nimport Input from '../Input/Input';\nimport useHttp from '../../Hooks/httpHook';\nimport AuthContext from '../../Store/Auth/AuthContext';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getFields } from '../../Store/Leads/leads-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddLead = () => {\n  _s();\n\n  const {\n    inputHandler,\n    address,\n    information,\n    isLoading\n  } = useForm();\n  const {\n    sendRequest,\n    error\n  } = useHttp(postLeadRecord);\n  const [description, setDescription] = useState(\"\");\n  const dispatch = useDispatch();\n  const ctx = useContext(AuthContext);\n  let informationFields, addressFields;\n  const history = useHistory();\n\n  const onCancelHandler = event => {\n    event.preventDefault();\n    history.goBack(-1);\n  };\n\n  if (address) {\n    addressFields = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Address Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inp,\n        children: Object.values(address).map(obj => /*#__PURE__*/_jsxDEV(Input, {\n          label: obj.label,\n          type: obj.type,\n          name: obj.name,\n          value: obj.value,\n          section: obj.section,\n          handleChange: inputHandler\n        }, obj.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 64\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 26\n    }, this);\n  }\n\n  if (information) {\n    informationFields = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Lead Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inp,\n        children: Object.values(information).map(obj => /*#__PURE__*/_jsxDEV(Input, {\n          label: obj.label,\n          type: obj.type,\n          name: obj.name,\n          value: obj.value,\n          section: obj.section,\n          handleChange: inputHandler,\n          error: error\n        }, obj.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 73\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 30\n    }, this);\n  }\n\n  const saveHandler = e => {\n    e.preventDefault();\n    let leadObj = {\n      description,\n      orgId: ctx.orgId\n    };\n    Object.values(address).map(leadAddress => leadObj = { ...leadObj,\n      [leadAddress.name]: leadAddress.value\n    });\n    Object.values(information).map(leadInfo => leadObj = { ...leadObj,\n      [leadInfo.name]: leadInfo.value\n    });\n    sendRequest(leadObj, () => {});\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    autoComplete: \"none\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formActions,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Lead\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.alt,\n          onClick: onCancelHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.alt,\n          children: \"Save and New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.save,\n          onClick: saveHandler,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formfields,\n      children: [informationFields, addressFields, /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Description Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inp,\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"description\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AddLead, \"aOg49+3UqMI042AnH344hj8m4FE=\", false, function () {\n  return [useForm, useHttp, useDispatch, useHistory];\n});\n\n_c = AddLead;\nexport default AddLead;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLead\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Components/Leads/AddLead.js"],"names":["React","useContext","useState","useHistory","useForm","styles","postLeadRecord","LoadingPage","Input","useHttp","AuthContext","useDispatch","useSelector","useEffect","getFields","AddLead","inputHandler","address","information","isLoading","sendRequest","error","description","setDescription","dispatch","ctx","informationFields","addressFields","history","onCancelHandler","event","preventDefault","goBack","inp","Object","values","map","obj","label","type","name","value","section","id","saveHandler","e","leadObj","orgId","leadAddress","leadInfo","form","formActions","alt","save","formfields","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,iCAA1B;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA,WAAzB;AAAsCC,IAAAA;AAAtC,MAAoDf,OAAO,EAAjE;AACA,QAAM;AAAEgB,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAyBZ,OAAO,CAAEH,cAAF,CAAtC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMsB,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,GAAG,GAAGxB,UAAU,CAACS,WAAD,CAAtB;AAGA,MAAIgB,iBAAJ,EAAuBC,aAAvB;AACA,QAAMC,OAAO,GAAGzB,UAAU,EAA1B;;AAEA,QAAM0B,eAAe,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAACI,MAAR,CAAe,CAAC,CAAhB;AACH,GAHD;;AAIA,MAAGf,OAAH,EAAY;AACPU,IAAAA,aAAa,gBAAG,QAAC,KAAD,CAAO,QAAP;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAK,QAAA,SAAS,EAAEtB,MAAM,CAAC4B,GAAvB;AAAA,kBACCC,MAAM,CAACC,MAAP,CAAclB,OAAd,EAAuBmB,GAAvB,CAA2BC,GAAG,iBAAI,QAAC,KAAD;AAAoB,UAAA,KAAK,EAAEA,GAAG,CAACC,KAA/B;AAAsC,UAAA,IAAI,EAAED,GAAG,CAACE,IAAhD;AAAsD,UAAA,IAAI,EAAEF,GAAG,CAACG,IAAhE;AAAsE,UAAA,KAAK,EAAEH,GAAG,CAACI,KAAjF;AAAwF,UAAA,OAAO,EAAEJ,GAAG,CAACK,OAArG;AAA8G,UAAA,YAAY,EAAE1B;AAA5H,WAAYqB,GAAG,CAACM,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAAlC;AADD;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhB;AAMJ;;AAED,MAAGzB,WAAH,EAAgB;AACZQ,IAAAA,iBAAiB,gBAAI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAK,QAAA,SAAS,EAAErB,MAAM,CAAC4B,GAAvB;AAAA,kBACEC,MAAM,CAACC,MAAP,CAAcjB,WAAd,EAA2BkB,GAA3B,CAA+BC,GAAG,iBAAI,QAAC,KAAD;AAEpC,UAAA,KAAK,EAAEA,GAAG,CAACC,KAFyB;AAGpC,UAAA,IAAI,EAAED,GAAG,CAACE,IAH0B;AAIpC,UAAA,IAAI,EAAEF,GAAG,CAACG,IAJ0B;AAKpC,UAAA,KAAK,EAAEH,GAAG,CAACI,KALyB;AAMpC,UAAA,OAAO,EAAEJ,GAAG,CAACK,OANuB;AAOpC,UAAA,YAAY,EAAE1B,YAPsB;AAQpC,UAAA,KAAK,EAAEK;AAR6B,WAC/BgB,GAAG,CAACM,EAD2B;AAAA;AAAA;AAAA;AAAA,gBAAtC;AADF;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB;AAeH;;AAED,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACd,cAAF;AACA,QAAIe,OAAO,GAAG;AAAExB,MAAAA,WAAF;AAAeyB,MAAAA,KAAK,EAAEtB,GAAG,CAACsB;AAA1B,KAAd;AAEAb,IAAAA,MAAM,CAACC,MAAP,CAAclB,OAAd,EAAuBmB,GAAvB,CAA2BY,WAAW,IAAKF,OAAO,GAAG,EAAE,GAAGA,OAAL;AAAc,OAACE,WAAW,CAACR,IAAb,GAAqBQ,WAAW,CAACP;AAA/C,KAArD;AACAP,IAAAA,MAAM,CAACC,MAAP,CAAcjB,WAAd,EAA2BkB,GAA3B,CAA+Ba,QAAQ,IAAIH,OAAO,GAAG,EAAE,GAAGA,OAAL;AAAc,OAACG,QAAQ,CAACT,IAAV,GAAiBS,QAAQ,CAACR;AAAxC,KAArD;AAEArB,IAAAA,WAAW,CAAC0B,OAAD,EAAU,MAAM,CAE1B,CAFU,CAAX;AAGH,GAVD;;AAYA,sBACQ;AAAM,IAAA,SAAS,EAAEzC,MAAM,CAAC6C,IAAxB;AAA8B,IAAA,YAAY,EAAC,MAA3C;AAAA,eACK/B,SAAS,iBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADlB,eAEI;AAAK,MAAA,SAAS,EAAEd,MAAM,CAAC8C,WAAvB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAE9C,MAAM,CAAC+C,GAA1B;AAA+B,UAAA,OAAO,EAAEvB,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAExB,MAAM,CAAC+C,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAE/C,MAAM,CAACgD,IAAxC;AAA8C,UAAA,OAAO,EAAET,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI;AAAK,MAAA,SAAS,EAAEvC,MAAM,CAACiD,UAAvB;AAAA,iBACS5B,iBADT,EAESC,aAFT,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAM,QAAA,SAAS,EAAEtB,MAAM,CAAC4B,GAAxB;AAAA,+BACI;AAAU,UAAA,IAAI,EAAC,MAAf;AAAsB,UAAA,IAAI,EAAC,aAA3B;AAAyC,UAAA,QAAQ,EAAGY,CAAD,IAAOtB,cAAc,CAACsB,CAAC,CAACU,MAAF,CAASd,KAAV;AAAxE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAsBH,CA7ED;;GAAM1B,O;UAEwDX,O,EAC3BK,O,EAEdE,W,EAKDR,U;;;KAVdY,O;AA+EN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport useForm from '../../Hooks/Leads/useForm';\nimport styles from './AddLead.module.css';\nimport { postLeadRecord } from '../../library/leadsFns';\nimport LoadingPage from '../../Pages/loadingPage';\nimport Input from '../Input/Input';\nimport useHttp from '../../Hooks/httpHook';\nimport AuthContext from '../../Store/Auth/AuthContext';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getFields } from '../../Store/Leads/leads-actions';\n\n\nconst AddLead = () => {\n    \n    const { inputHandler, address, information, isLoading } = useForm();\n    const { sendRequest, error } = useHttp( postLeadRecord);\n    const [description, setDescription] = useState(\"\");\n    const dispatch = useDispatch()\n    const ctx = useContext(AuthContext);\n\n\n    let informationFields, addressFields;\n    const history = useHistory();\n\n    const onCancelHandler = (event) => {\n        event.preventDefault();\n        history.goBack(-1);\n    }\n    if(address) {\n         addressFields = <React.Fragment>\n                            <h3>Address Information</h3>\n                            <div className={styles.inp}>\n                            {Object.values(address).map(obj => <Input key={obj.id} label={obj.label} type={obj.type} name={obj.name} value={obj.value} section={obj.section} handleChange={inputHandler}/>) }         \n                            </div>\n                            </React.Fragment>\n    }\n\n    if(information) {\n        informationFields =  <React.Fragment>\n                                <h3>Lead Information</h3>\n                                <div className={styles.inp}>\n                                { Object.values(information).map(obj => <Input \n                                    key={obj.id} \n                                    label={obj.label} \n                                    type={obj.type} \n                                    name={obj.name} \n                                    value={obj.value} \n                                    section={obj.section} \n                                    handleChange={inputHandler}\n                                    error={error}\n                                    />) }       \n                                </div>\n                                </React.Fragment>\n    }\n\n    const saveHandler = (e) => {\n        e.preventDefault();\n        let leadObj = { description, orgId: ctx.orgId };\n\n        Object.values(address).map(leadAddress =>  leadObj = { ...leadObj, [leadAddress.name] : leadAddress.value });\n        Object.values(information).map(leadInfo => leadObj = { ...leadObj, [leadInfo.name]: leadInfo.value });\n\n        sendRequest(leadObj, () => {\n            \n        })\n    }\n\n    return (\n            <form className={styles.form} autoComplete=\"none\">\n                {isLoading && <LoadingPage/>}\n                <div className={styles.formActions}>\n                    <h2>Create Lead</h2>\n                    <div>\n                        <button className={styles.alt} onClick={onCancelHandler}>Cancel</button>\n                        <button className={styles.alt}>Save and New</button>\n                        <button type=\"submit\" className={styles.save} onClick={saveHandler}>Save</button>\n                    </div> \n                </div>\n                <div className={styles.formfields}>\n                        {informationFields}\n                        {addressFields}\n                    <h3>Description Information</h3>\n                    <div  className={styles.inp}>\n                        <textarea type=\"text\" name=\"description\" onChange={(e) => setDescription(e.target.value)}></textarea>\n                    </div>\n                </div>       \n            </form>\n    )\n\n}\n\nexport default AddLead;"]},"metadata":{},"sourceType":"module"}