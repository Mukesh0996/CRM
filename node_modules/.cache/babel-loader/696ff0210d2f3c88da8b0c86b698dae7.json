{"ast":null,"code":"import { leadsActions } from \"./leads-slice\";\nconst url = \"http://localhost:8080\";\nexport const getFields = (orgId, token) => {\n  return async dispatch => {\n    console.log(\"dispatch is\", dispatch);\n    const response = await fetch(`${url}/org/${orgId}/leads/leadstable/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch cart\");\n    }\n\n    const data = await response.json();\n    dispatch(leadsActions.replaceLeads({\n      fields: data\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Store/Leads/leads-actions.js"],"names":["leadsActions","url","getFields","orgId","token","dispatch","console","log","response","fetch","method","headers","ok","Error","data","json","replaceLeads","fields"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AAGA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAEvC,SAAO,MAAOC,QAAP,IAAoB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,QAA3B;AACA,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,GAAI,QAAOE,KAAM,oBAArB,EAA0C;AAClEO,MAAAA,MAAM,EAAC,KAD2D;AAElEC,MAAAA,OAAO,EAAG;AACN,wBAAe,kBADT;AAEN,yBAAkB,UAASP,KAAM;AAF3B;AAFwD,KAA1C,CAA5B;;AAOA,QAAG,CAACI,QAAQ,CAACI,EAAb,EAAiB;AACb,YAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;;AACD,UAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;AACAV,IAAAA,QAAQ,CAACL,YAAY,CAACgB,YAAb,CAA0B;AAC/BC,MAAAA,MAAM,EAAEH;AADuB,KAA1B,CAAD,CAAR;AAGH,GAhBD;AAkBH,CApBM","sourcesContent":["import { leadsActions } from \"./leads-slice\";\n\nconst url = \"http://localhost:8080\";\n\n\nexport const getFields = (orgId, token) => {\n\n    return async (dispatch) => {\n        console.log(\"dispatch is\", dispatch);\n        const response = await fetch(`${url}/org/${orgId}/leads/leadstable/`, {\n            method:\"GET\",\n            headers : {\n                \"Content-Type\":\"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            }\n        });\n        if(!response.ok) {\n            throw new Error(\"Failed to fetch cart\");\n        }\n        const data = await response.json();\n        dispatch(leadsActions.replaceLeads({\n            fields: data\n        }))\n    };\n\n}"]},"metadata":{},"sourceType":"module"}