{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useHttp = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState({\n    isValid: false,\n    value: \"\",\n    message: \"\"\n  });\n\n  const sendRequest = async (requestConfig, sendData) => {\n    setIsLoading(true);\n    console.log(requestConfig);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method,\n        body: requestConfig.body,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const responseData = await response.json();\n\n      if (!response.ok) {\n        setError({\n          isValid: responseData.isValid ? responseData.isValid : \"\",\n          value: responseData.value ? responseData.value : \"\"\n        });\n        throw new Error(responseData.message);\n      }\n\n      sendData(responseData);\n    } catch (error) {\n      console.log(error);\n      setIsLoading(false);\n      setError(prevState => {\n        return { ...prevState,\n          message: error.message\n        };\n      });\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    sendRequest,\n    error\n  };\n};\n\n_s(useHttp, \"ISvcW3SrWLnbitTF/Tft5kSrH8A=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/React/front/src/Hooks/httpHook.js"],"names":["useState","useHttp","isLoading","setIsLoading","error","setError","isValid","value","message","sendRequest","requestConfig","sendData","console","log","response","fetch","url","method","body","headers","responseData","json","ok","Error","prevState"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAACM,IAAAA,OAAO,EAAE,KAAV;AAAiBC,IAAAA,KAAK,EAAC,EAAvB;AAA2BC,IAAAA,OAAO,EAAC;AAAnC,GAAD,CAAlC;;AAEA,QAAMC,WAAW,GAAG,OAAOC,aAAP,EAAqBC,QAArB,KAAkC;AAClDR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;;AACA,QAAI;AACA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACL,aAAa,CAACM,GAAf,EAAoB;AAC5CC,QAAAA,MAAM,EAAEP,aAAa,CAACO,MADsB;AAE5CC,QAAAA,IAAI,EAAER,aAAa,CAACQ,IAFwB;AAG5CC,QAAAA,OAAO,EAAG;AACN,0BAAe;AADT;AAHkC,OAApB,CAA5B;AAOA,YAAMC,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAA3B;;AACA,UAAG,CAACP,QAAQ,CAACQ,EAAb,EAAiB;AACbjB,QAAAA,QAAQ,CAAC;AACLC,UAAAA,OAAO,EAAEc,YAAY,CAACd,OAAb,GAAuBc,YAAY,CAACd,OAApC,GAA8C,EADlD;AAELC,UAAAA,KAAK,EAAEa,YAAY,CAACb,KAAb,GAAqBa,YAAY,CAACb,KAAlC,GAA0C;AAF5C,SAAD,CAAR;AAIA,cAAM,IAAIgB,KAAJ,CAAUH,YAAY,CAACZ,OAAvB,CAAN;AACH;;AACDG,MAAAA,QAAQ,CAACS,YAAD,CAAR;AACH,KAjBD,CAiBE,OAAOhB,KAAP,EAAc;AACZQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACAD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAACmB,SAAS,IAAI;AAClB,eAAO,EAAE,GAAGA,SAAL;AAAgBhB,UAAAA,OAAO,EAAEJ,KAAK,CAACI;AAA/B,SAAP;AACH,OAFO,CAAR;AAGH;;AACDL,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GA5BD;;AA8BA,SAAO;AACHD,IAAAA,SADG;AAEHO,IAAAA,WAFG;AAGHL,IAAAA;AAHG,GAAP;AAMH,CAzCD;;GAAMH,O;;AA2CN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\"\n\n\nconst useHttp = () => {\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState({isValid: false, value:\"\", message:\"\"});\n\n    const sendRequest = async (requestConfig,sendData) => {\n        setIsLoading(true);\n        console.log(requestConfig)\n        try {\n            const response = await fetch(requestConfig.url, {\n                method: requestConfig.method,\n                body: requestConfig.body,\n                headers : {\n                    \"Content-Type\":\"application/json\"\n                }\n            });\n            const responseData = await response.json();\n            if(!response.ok) {\n                setError({\n                    isValid: responseData.isValid ? responseData.isValid : \"\",\n                    value: responseData.value ? responseData.value : \"\",\n                })\n                throw new Error(responseData.message)\n            }\n            sendData(responseData);            \n        } catch (error) {\n            console.log(error);\n            setIsLoading(false);\n            setError(prevState => {\n                return { ...prevState, message: error.message }\n            })\n        }\n        setIsLoading(false);\n    }\n\n    return {\n        isLoading,\n        sendRequest,\n        error\n    }\n\n}\n\nexport default useHttp;"]},"metadata":{},"sourceType":"module"}