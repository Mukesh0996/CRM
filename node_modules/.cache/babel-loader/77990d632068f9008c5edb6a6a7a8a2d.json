{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/CRM/src/Store/AuthStore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport AuthContext from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [token, setToken] = useState('');\n  const [userId, setUserId] = useState('');\n  const [orgId, setOrgId] = useState('');\n  useEffect(() => {\n    console.log(\"executing use Effect\");\n    setToken(() => {\n      return localStorage.getItem('token');\n    });\n    setUserId(() => {\n      return localStorage.getItem('userId');\n    });\n    setOrgId(() => {\n      return localStorage.getItem('orgId');\n    });\n  }, [token, userId, orgId]);\n\n  const signInHandler = ({\n    token,\n    userId,\n    orgId\n  }) => {\n    setToken(token);\n    setUserId(userId);\n    setOrgId(orgId);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"userId\", userId);\n    localStorage.setItem(\"orgId\", orgId);\n  };\n\n  const signOutHandler = () => {};\n\n  const isLoggedIn = !!token && !!userId && !!orgId;\n  const authContext = {\n    isLoggedIn,\n    token,\n    userId,\n    orgId,\n    signIn: signInHandler,\n    signOut: signOutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"JhbVzDNqZ4CgWfbNjRXlnEIe8iI=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Store/AuthStore.js"],"names":["React","useEffect","useState","AuthContext","AuthContextProvider","props","token","setToken","userId","setUserId","orgId","setOrgId","console","log","localStorage","getItem","signInHandler","setItem","signOutHandler","isLoggedIn","authContext","signIn","signOut","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAE1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAN,IAAAA,QAAQ,CAAC,MAAK;AACV,aAAOO,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AACH,KAFO,CAAR;AAGAN,IAAAA,SAAS,CAAC,MAAM;AACZ,aAAOK,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAP;AACH,KAFQ,CAAT;AAGAJ,IAAAA,QAAQ,CAAC,MAAM;AACX,aAAOG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AACH,KAFO,CAAR;AAIH,GAZQ,EAYP,CAACT,KAAD,EAAQE,MAAR,EAAgBE,KAAhB,CAZO,CAAT;;AAeA,QAAMM,aAAa,GAAG,CAAC;AAACV,IAAAA,KAAD;AAAQE,IAAAA,MAAR;AAAgBE,IAAAA;AAAhB,GAAD,KAA4B;AAC9CH,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,IAAAA,QAAQ,CAACD,KAAD,CAAR;AAEAI,IAAAA,YAAY,CAACG,OAAb,CAAqB,OAArB,EAA8BX,KAA9B;AACAQ,IAAAA,YAAY,CAACG,OAAb,CAAqB,QAArB,EAA+BT,MAA/B;AACAM,IAAAA,YAAY,CAACG,OAAb,CAAqB,OAArB,EAA8BP,KAA9B;AACH,GARD;;AAUA,QAAMQ,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAGA,QAAMC,UAAU,GAAG,CAAC,CAACb,KAAF,IAAW,CAAC,CAACE,MAAb,IAAuB,CAAC,CAACE,KAA5C;AACA,QAAMU,WAAW,GAAG;AAChBD,IAAAA,UADgB;AAEhBb,IAAAA,KAFgB;AAGhBE,IAAAA,MAHgB;AAIhBE,IAAAA,KAJgB;AAKhBW,IAAAA,MAAM,EAAEL,aALQ;AAMhBM,IAAAA,OAAO,EAAEJ;AANO,GAApB;AAQA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cAA2Cf,KAAK,CAACkB;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CA7CM;;GAAMnB,mB;;KAAAA,mB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AuthContext from './AuthContext';\n\n\nexport const AuthContextProvider = (props) => {\n    \n    const [token, setToken] = useState('');\n    const [userId, setUserId] = useState('');\n    const [orgId, setOrgId] = useState('');\n\n    useEffect(() => {\n        console.log(\"executing use Effect\")\n        setToken(() =>{\n            return localStorage.getItem('token');\n        });\n        setUserId(() => {\n            return localStorage.getItem('userId');\n        })\n        setOrgId(() => {\n            return localStorage.getItem('orgId')\n        })\n\n    },[token, userId, orgId])\n\n\n    const signInHandler = ({token, userId, orgId}) => {\n        setToken(token);\n        setUserId(userId);\n        setOrgId(orgId);\n\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"userId\", userId);\n        localStorage.setItem(\"orgId\", orgId);\n    }\n\n    const signOutHandler = () => {\n\n    }\n    const isLoggedIn = !!token && !!userId && !!orgId;\n    const authContext = {\n        isLoggedIn,\n        token,\n        userId,\n        orgId,\n        signIn: signInHandler,\n        signOut: signOutHandler \n    }\n    return <AuthContext.Provider value={authContext}>{props.children}</AuthContext.Provider>\n\n}\n\n"]},"metadata":{},"sourceType":"module"}