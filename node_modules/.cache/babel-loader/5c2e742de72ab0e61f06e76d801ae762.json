{"ast":null,"code":"import { homeActions } from \"./home-slice\";\nconst url = \"http://localhost:8080\";\nexport const getCurrentYearLeadsChartData = async (orgId, token) => {\n  return async dispatch => {\n    const response = await fetch(`${url}/home/org/${orgId}/getLeads`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    const responseData = await response.json();\n\n    if (!response.ok) {\n      let error = new Error(responseData.message || \"Error Occured!\");\n      error.isValid = responseData.isValid || false;\n      error.value = responseData.value || \"\";\n      throw error;\n    }\n\n    dispatch(homeActions.currentYearLeads({\n      currentYearLeads: responseData.data\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/mukesh-8058/Documents/GitHub/CRM/src/Store/Home/home-actions.js"],"names":["homeActions","url","getCurrentYearLeadsChartData","orgId","token","dispatch","response","fetch","method","headers","responseData","json","ok","error","Error","message","isValid","value","currentYearLeads","data"],"mappings":"AAAA,SAASA,WAAT,QAA4B,cAA5B;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AAGA,OAAO,MAAMC,4BAA4B,GAAG,OAAOC,KAAP,EAAcC,KAAd,KAAwB;AAChE,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,GAAI,aAAYE,KAAM,WAA1B,EAAsC;AAC9DK,MAAAA,MAAM,EAAC,KADuD;AAE9DC,MAAAA,OAAO,EAAG;AACN,wBAAiB,kBADX;AAEN,yBAAmB,UAASL,KAAM;AAF5B;AAFoD,KAAtC,CAA5B;AAOA,UAAMM,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;;AACA,QAAI,CAACL,QAAQ,CAACM,EAAd,EAAkB;AACd,UAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,YAAY,CAACK,OAAb,IAAwB,gBAAlC,CAAZ;AACAF,MAAAA,KAAK,CAACG,OAAN,GAAgBN,YAAY,CAACM,OAAb,IAAwB,KAAxC;AACAH,MAAAA,KAAK,CAACI,KAAN,GAAcP,YAAY,CAACO,KAAb,IAAsB,EAApC;AACA,YAAMJ,KAAN;AACH;;AACDR,IAAAA,QAAQ,CAACL,WAAW,CAACkB,gBAAZ,CAA6B;AAClCA,MAAAA,gBAAgB,EAAER,YAAY,CAACS;AADG,KAA7B,CAAD,CAAR;AAGH,GAlBD;AAmBH,CApBM","sourcesContent":["import { homeActions } from \"./home-slice\";\n\nconst url = \"http://localhost:8080\";\n\n\nexport const getCurrentYearLeadsChartData = async (orgId, token) => {\n    return async (dispatch) => {\n        const response = await fetch(`${url}/home/org/${orgId}/getLeads`, {\n            method:\"GET\",\n            headers : {\n                \"Content-Type\" : \"application/json\",\n                \"Authorization\" : `Bearer ${token}`\n            }\n        });\n        const responseData = await response.json();\n        if (!response.ok) {\n            let error = new Error(responseData.message || \"Error Occured!\")\n            error.isValid = responseData.isValid || false;\n            error.value = responseData.value || \"\";\n            throw(error);\n        }\n        dispatch(homeActions.currentYearLeads({\n            currentYearLeads: responseData.data\n        }))\n    }\n}"]},"metadata":{},"sourceType":"module"}