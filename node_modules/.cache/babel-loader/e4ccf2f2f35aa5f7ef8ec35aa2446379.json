{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/React/front/src/Components/Leads/AddLead.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from 'react-router';\nimport useForm from '../../Hooks/Leads/useForm';\nimport styles from './AddLead.module.css';\nimport { getLeadsFields, postLeadRecord } from '../../library/leadsFns';\nimport LoadingPage from '../../Pages/loadingPage';\nimport Input from '../Input/Input';\nimport { useState } from 'react';\nimport useHttp from '../../Hooks/httpHook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddLead = () => {\n  _s();\n\n  const {\n    inputHandler,\n    address,\n    information,\n    isLoading,\n    error\n  } = useForm(getLeadsFields);\n  const {\n    sendRequest\n  } = useHttp(postLeadRecord);\n  let informationFields, addressFields;\n  const [description, setDescription] = useState(\"\");\n  const history = useHistory();\n\n  const onCancelHandler = event => {\n    event.preventDefault();\n    history.goBack(-1);\n  }; // if(address) {\n  //      addressFields = Object.values(address).map(obj => <Input key={obj.id} label={obj.label} type={obj.type} name={obj.name} value={obj.value} section={obj.section} handleChange={inputHandler}/>) \n  // }\n  // if(information) {\n  //     informationFields = Object.values(information).map(obj => <Input key={obj.id} label={obj.label} type={obj.type} name={obj.name} value={obj.value} section={obj.section} handleChange={inputHandler}/>) \n  // }\n\n\n  const saveHandler = e => {\n    e.preventDefault();\n    let leadObj = {\n      description\n    };\n    Object.values(address).map(leadAddress => {\n      leadObj = { ...leadObj,\n        [leadAddress.name]: leadAddress.value\n      };\n    });\n    Object.values(information).map(leadInfo => {\n      leadObj = { ...leadObj,\n        [leadInfo.name]: leadInfo.value\n      };\n    });\n    sendRequest(leadObj, url => {\n      history.push(url);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    autoComplete: \"none\",\n    children: [true && /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formActions,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Lead\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.alt,\n          onClick: onCancelHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.alt,\n          children: \"Save and New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.save,\n          onClick: saveHandler,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formfields,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Lead Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inp,\n        children: informationFields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Address Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inp,\n        children: addressFields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Description Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inp,\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"description\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AddLead, \"XtDpbnPyt71OwjTLe13Os+muwSQ=\", false, function () {\n  return [useForm, useHttp, useHistory];\n});\n\n_c = AddLead;\nexport default AddLead;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLead\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/React/front/src/Components/Leads/AddLead.js"],"names":["useHistory","useForm","styles","getLeadsFields","postLeadRecord","LoadingPage","Input","useState","useHttp","AddLead","inputHandler","address","information","isLoading","error","sendRequest","informationFields","addressFields","description","setDescription","history","onCancelHandler","event","preventDefault","goBack","saveHandler","e","leadObj","Object","values","map","leadAddress","name","value","leadInfo","url","push","form","formActions","alt","save","formfields","inp","target"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,wBAA/C;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA,WAAzB;AAAsCC,IAAAA,SAAtC;AAAiDC,IAAAA;AAAjD,MAA0Db,OAAO,CAACE,cAAD,CAAvE;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAkBP,OAAO,CAAEJ,cAAF,CAA/B;AACA,MAAIY,iBAAJ,EAAuBC,aAAvB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMa,OAAO,GAAGpB,UAAU,EAA1B;;AAEA,QAAMqB,eAAe,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAACI,MAAR,CAAe,CAAC,CAAhB;AACH,GAHD,CARkB,CAalB;AACA;AACA;AAEA;AACA;AACA;;;AAEA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACH,cAAF;AACA,QAAII,OAAO,GAAG;AAAET,MAAAA;AAAF,KAAd;AAEAU,IAAAA,MAAM,CAACC,MAAP,CAAclB,OAAd,EAAuBmB,GAAvB,CAA2BC,WAAW,IAAI;AACtCJ,MAAAA,OAAO,GAAG,EACN,GAAGA,OADG;AAEN,SAACI,WAAW,CAACC,IAAb,GAAqBD,WAAW,CAACE;AAF3B,OAAV;AAIH,KALD;AAOAL,IAAAA,MAAM,CAACC,MAAP,CAAcjB,WAAd,EAA2BkB,GAA3B,CAA+BI,QAAQ,IAAG;AACtCP,MAAAA,OAAO,GAAG,EACN,GAAGA,OADG;AAEN,SAACO,QAAQ,CAACF,IAAV,GAAiBE,QAAQ,CAACD;AAFpB,OAAV;AAIH,KALD;AAMAlB,IAAAA,WAAW,CAACY,OAAD,EAAWQ,GAAD,IAAS;AAC1Bf,MAAAA,OAAO,CAACgB,IAAR,CAAaD,GAAb;AACH,KAFU,CAAX;AAIH,GArBD;;AAuBA,sBACQ;AAAM,IAAA,SAAS,EAAEjC,MAAM,CAACmC,IAAxB;AAA8B,IAAA,YAAY,EAAC,MAA3C;AAAA,eACK,qBAAQ,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADb,eAEI;AAAK,MAAA,SAAS,EAAEnC,MAAM,CAACoC,WAAvB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAEpC,MAAM,CAACqC,GAA1B;AAA+B,UAAA,OAAO,EAAElB,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAEnB,MAAM,CAACqC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAErC,MAAM,CAACsC,IAAxC;AAA8C,UAAA,OAAO,EAAEf,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI;AAAK,MAAA,SAAS,EAAEvB,MAAM,CAACuC,UAAvB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAEvC,MAAM,CAACwC,GAAvB;AAAA,kBACK1B;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAK,QAAA,SAAS,EAAEd,MAAM,CAACwC,GAAvB;AAAA,kBACKzB;AADL;AAAA;AAAA;AAAA;AAAA,cANJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAM,QAAA,SAAS,EAAEf,MAAM,CAACwC,GAAxB;AAAA,+BACI;AAAU,UAAA,IAAI,EAAC,MAAf;AAAsB,UAAA,IAAI,EAAC,aAA3B;AAAyC,UAAA,QAAQ,EAAGhB,CAAD,IAAOP,cAAc,CAACO,CAAC,CAACiB,MAAF,CAASV,KAAV;AAAxE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AA4BH,CAxED;;GAAMxB,O;UAE8DR,O,EACxCO,O,EAGRR,U;;;KANdS,O;AA0EN,eAAeA,OAAf","sourcesContent":["import { useHistory } from 'react-router';\nimport useForm from '../../Hooks/Leads/useForm';\nimport styles from './AddLead.module.css';\nimport { getLeadsFields, postLeadRecord } from '../../library/leadsFns';\nimport LoadingPage from '../../Pages/loadingPage';\nimport Input from '../Input/Input';\nimport { useState } from 'react';\nimport useHttp from '../../Hooks/httpHook';\n\nconst AddLead = () => {\n\n    const { inputHandler, address, information, isLoading, error} = useForm(getLeadsFields);\n    const { sendRequest } = useHttp( postLeadRecord);\n    let informationFields, addressFields;\n    const [description, setDescription] = useState(\"\");\n    const history = useHistory();\n\n    const onCancelHandler = (event) => {\n        event.preventDefault();\n        history.goBack(-1);\n    }\n\n    // if(address) {\n    //      addressFields = Object.values(address).map(obj => <Input key={obj.id} label={obj.label} type={obj.type} name={obj.name} value={obj.value} section={obj.section} handleChange={inputHandler}/>) \n    // }\n\n    // if(information) {\n    //     informationFields = Object.values(information).map(obj => <Input key={obj.id} label={obj.label} type={obj.type} name={obj.name} value={obj.value} section={obj.section} handleChange={inputHandler}/>) \n    // }\n\n    const saveHandler = (e) => {\n        e.preventDefault();\n        let leadObj = { description };\n        \n        Object.values(address).map(leadAddress => {\n            leadObj = {\n                ...leadObj,\n                [leadAddress.name] : leadAddress.value\n            }\n        });\n\n        Object.values(information).map(leadInfo =>{\n            leadObj = {\n                ...leadObj,\n                [leadInfo.name]: leadInfo.value \n            }\n        });\n        sendRequest(leadObj, (url) => {\n            history.push(url);\n        });\n\n    }\n\n    return (\n            <form className={styles.form} autoComplete=\"none\">\n                {true && <LoadingPage/>}\n                <div className={styles.formActions}>\n                    <h2>Create Lead</h2>\n                    <div>\n                        <button className={styles.alt} onClick={onCancelHandler}>Cancel</button>\n                        <button className={styles.alt}>Save and New</button>\n                        <button type=\"submit\" className={styles.save} onClick={saveHandler}>Save</button>\n                    </div> \n                </div>\n                <div className={styles.formfields}>\n                    <h3>Lead Information</h3>\n                    <div className={styles.inp}>\n                        {informationFields}\n                    </div>\n                    <h3>Address Information</h3>\n                    <div className={styles.inp}>\n                        {addressFields}\n                    </div>\n                    <h3>Description Information</h3>\n                    <div  className={styles.inp}>\n                        <textarea type=\"text\" name=\"description\" onChange={(e) => setDescription(e.target.value)}></textarea>\n                    </div>\n                </div>       \n            </form>\n    )\n\n}\n\nexport default AddLead;"]},"metadata":{},"sourceType":"module"}