{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Documents/GitHub/CRM/src/Components/Input/Input.js\";\nimport styles from './Input.module.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = ({\n  label,\n  value,\n  type,\n  name,\n  handleChange,\n  section,\n  error\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.formControl} ${error && error.value === name ? styles.error : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: name,\n      type: type,\n      value: value,\n      name: name,\n      onChange: e => handleChange(e, section),\n      autoComplete: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }, this), error && error.value === name && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.errorMessage,\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 52\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Input;\nexport default _c2 = /*#__PURE__*/React.memo(Input);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mukesh-8058/Documents/GitHub/CRM/src/Components/Input/Input.js"],"names":["styles","React","Input","label","value","type","name","handleChange","section","error","formControl","e","errorMessage","message","memo"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,IAAf;AAAsBC,EAAAA,IAAtB;AAA4BC,EAAAA,YAA5B;AAA0CC,EAAAA,OAA1C;AAAmDC,EAAAA;AAAnD,CAAD,KAA+D;AAEzE,sBAAO;AAAK,IAAA,SAAS,EAAG,GAAET,MAAM,CAACU,WAAY,IAAGD,KAAK,IAAIA,KAAK,CAACL,KAAN,KAAgBE,IAAzB,GAAgCN,MAAM,CAACS,KAAvC,GAA8C,EAAG,EAA1F;AAAA,4BACK;AAAO,MAAA,OAAO,EAAEH,IAAhB;AAAA,gBAAuBH;AAAvB;AAAA;AAAA;AAAA;AAAA,YADL,eAEK;AAAO,MAAA,EAAE,EAAEG,IAAX;AAAiB,MAAA,IAAI,EAAED,IAAvB;AAA6B,MAAA,KAAK,EAAED,KAApC;AAA2C,MAAA,IAAI,EAAEE,IAAjD;AAAuD,MAAA,QAAQ,EAAGK,CAAD,IAAMJ,YAAY,CAACI,CAAD,EAAKH,OAAL,CAAnF;AAAkG,MAAA,YAAY,EAAC;AAA/G;AAAA;AAAA;AAAA;AAAA,YAFL,EAGOC,KAAK,IAAIA,KAAK,CAACL,KAAN,KAAgBE,IAAzB,iBAAiC;AAAG,MAAA,SAAS,EAAEN,MAAM,CAACY,YAArB;AAAA,gBAAoCH,KAAK,CAACI;AAA1C;AAAA;AAAA;AAAA;AAAA,YAHxC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CAPD;;KAAMX,K;AASN,kCAAeD,KAAK,CAACa,IAAN,CAAWZ,KAAX,CAAf","sourcesContent":["import styles from './Input.module.css';\nimport React from 'react';\n\nconst Input = ({label, value, type , name, handleChange, section, error}) => {\n   \n    return <div className={`${styles.formControl} ${error && error.value === name ? styles.error: \"\"}`}>\n                <label htmlFor={name}>{label}</label>\n                <input id={name} type={type} value={value} name={name} onChange={(e)=> handleChange(e , section)} autoComplete=\"none\"/>\n                { error && error.value === name && <p className={styles.errorMessage}>{error.message}</p> }\n            </div>            \n};\n\nexport default React.memo(Input);"]},"metadata":{},"sourceType":"module"}