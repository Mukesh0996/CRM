{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useHttp = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async (requestConfig, sendData) => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const responseData = await response.json();\n\n      if (!response.ok) {\n        setError({\n          isValid: responseData.isValid ? responseData.isValid : \"\",\n          value: responseData.value ? responseData.value : \"\"\n        });\n        throw new Error(responseData.message);\n      }\n\n      sendData(responseData);\n    } catch (error) {\n      setIsLoading(false);\n      setError(prevState => {\n        return { ...prevState,\n          message: error.message\n        };\n      });\n    }\n  };\n\n  return {\n    isLoading,\n    sendRequest,\n    error\n  };\n};\n\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/React/front/src/Hooks/httpHook.js"],"names":["useState","useHttp","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","sendData","response","fetch","url","method","body","JSON","stringify","headers","responseData","json","ok","isValid","value","Error","message","prevState"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMM,WAAW,GAAG,OAAOC,aAAP,EAAqBC,QAArB,KAAkC;AAClDL,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACA,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAa,CAACI,GAAf,EAAoB;AAC5CC,QAAAA,MAAM,EAAEL,aAAa,CAACK,MAAd,GAAuBL,aAAa,CAACK,MAArC,GAA6C,KADT;AAE5CC,QAAAA,IAAI,EAAEN,aAAa,CAACM,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAeR,aAAa,CAACM,IAA7B,CAArB,GAA0D,IAFpB;AAG5CG,QAAAA,OAAO,EAAE;AACL,0BAAiB;AADZ;AAHmC,OAApB,CAA5B;AAOA,YAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAA3B;;AACA,UAAG,CAACT,QAAQ,CAACU,EAAb,EAAiB;AACbd,QAAAA,QAAQ,CAAC;AACLe,UAAAA,OAAO,EAAEH,YAAY,CAACG,OAAb,GAAuBH,YAAY,CAACG,OAApC,GAA8C,EADlD;AAELC,UAAAA,KAAK,EAAEJ,YAAY,CAACI,KAAb,GAAqBJ,YAAY,CAACI,KAAlC,GAA0C;AAF5C,SAAD,CAAR;AAIA,cAAM,IAAIC,KAAJ,CAAUL,YAAY,CAACM,OAAvB,CAAN;AACH;;AACDf,MAAAA,QAAQ,CAACS,YAAD,CAAR;AACH,KAjBD,CAiBE,OAAOb,KAAP,EAAc;AACZD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAACmB,SAAS,IAAI;AAClB,eAAO,EAAE,GAAGA,SAAL;AAAgBD,UAAAA,OAAO,EAAEnB,KAAK,CAACmB;AAA/B,SAAP;AACH,OAFO,CAAR;AAGH;AACJ,GAzBD;;AA2BA,SAAO;AACHrB,IAAAA,SADG;AAEHI,IAAAA,WAFG;AAGHF,IAAAA;AAHG,GAAP;AAMH,CAtCD;;GAAMH,O;;AAwCN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\"\n\n\nconst useHttp = () => {\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const sendRequest = async (requestConfig,sendData) => {\n        setIsLoading(true);\n        try {\n            const response = await fetch(requestConfig.url, {\n                method: requestConfig.method ? requestConfig.method: \"GET\",\n                body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n                headers: {\n                    \"Content-Type\" : \"application/json\"\n                }\n            });\n            const responseData = await response.json();\n            if(!response.ok) {\n                setError({\n                    isValid: responseData.isValid ? responseData.isValid : \"\",\n                    value: responseData.value ? responseData.value : \"\",\n                })\n                throw new Error(responseData.message)\n            }\n            sendData(responseData);            \n        } catch (error) {\n            setIsLoading(false);\n            setError(prevState => {\n                return { ...prevState, message: error.message }\n            })\n        }\n    }\n\n    return {\n        isLoading,\n        sendRequest,\n        error\n    }\n\n}\n\nexport default useHttp;"]},"metadata":{},"sourceType":"module"}