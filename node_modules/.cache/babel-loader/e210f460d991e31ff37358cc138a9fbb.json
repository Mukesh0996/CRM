{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/CRM/src/Components/Leads/LeadsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingPage from '../../Pages/loadingPage';\nimport { leadActions } from '../../Store/Leads/leads-slice';\nimport Filter from '../Filter/Filter';\nimport Record from '../Record/Record';\nimport styles from './LeadsContainer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeadsContainer = ({\n  leadCols,\n  isLoading\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const filteredLeads = useSelector(state => state.leads.filteredLeads);\n  const {\n    leads,\n    filterApplied\n  } = useSelector(state => state.leads);\n  console.log(\"filter applied\", filterApplied);\n\n  const is = ({\n    name,\n    value\n  }, leads) => {\n    const leadRecs = leads.filter(lead => lead[name] === value);\n    dispatch(leadActions.addFilteredLeads({\n      filteredLeads: leadRecs\n    }));\n  };\n\n  const contains = () => {};\n\n  const [filterMethods, setFilterMethods] = useState([is, contains]);\n  const [filterString, setFilterString] = useState([\"is\", \"contains\"]);\n\n  const filterLeads = obj => {\n    const methodIndex = filterString.findIndex(filter => filter === obj.filterByMethod);\n    const method = filterMethods[methodIndex];\n    method(obj, leads);\n  };\n\n  let columns = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minWidth: \"3rem\",\n        position: \"fixed\",\n        backgroundColor: \"#fff\",\n        borderRadius: \"10px 0 0 0\"\n      },\n      className: styles.column,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), leadCols.map((key, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.column,\n      children: key.label\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 39\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.leadsContainer,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      leadsCols: leadCols,\n      filter: filterLeads,\n      module: \"leads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.leadsrecords,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"lead-columns\"],\n        children: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), filterApplied && filteredLeads.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"100%\",\n          backgroundColor: \"#fff\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Leads present for the specified criteria. Please refresh the page.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 177\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 62\n      }, this), !!leads && filteredLeads.length === 0 && !filterApplied && leads.map(lead => /*#__PURE__*/_jsxDEV(Record, {\n        lead: lead\n      }, lead.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 92\n      }, this)), filterApplied && filteredLeads.length !== 0 && filteredLeads.map(lead => /*#__PURE__*/_jsxDEV(Record, {\n        lead: lead\n      }, lead.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 87\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LeadsContainer, \"kW8THEFn/YJHUBXrMQQNArO8dwg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = LeadsContainer;\nexport default LeadsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeadsContainer\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Components/Leads/LeadsContainer.js"],"names":["React","useState","useDispatch","useSelector","LoadingPage","leadActions","Filter","Record","styles","LeadsContainer","leadCols","isLoading","dispatch","filteredLeads","state","leads","filterApplied","console","log","is","name","value","leadRecs","filter","lead","addFilteredLeads","contains","filterMethods","setFilterMethods","filterString","setFilterString","filterLeads","obj","methodIndex","findIndex","filterByMethod","method","columns","minWidth","position","backgroundColor","borderRadius","column","map","key","index","label","leadsContainer","leadsrecords","length","height","display","justifyContent","alignItems","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingPage from '../../Pages/loadingPage';\nimport { leadActions } from '../../Store/Leads/leads-slice';\nimport Filter from '../Filter/Filter';\nimport Record from '../Record/Record';\nimport styles from './LeadsContainer.module.css';\n\n\nconst LeadsContainer = ({ leadCols, isLoading }) => {\n    const dispatch = useDispatch();\n\n    const filteredLeads = useSelector((state) => state.leads.filteredLeads);\n    const { leads, filterApplied } = useSelector((state) => state.leads);\n    console.log(\"filter applied\", filterApplied);\n    const is = ({ name, value }, leads) => {\n        const leadRecs = leads.filter((lead) => lead[name] === value);\n        dispatch(leadActions.addFilteredLeads({\n            filteredLeads: leadRecs\n        }));\n    };\n    const contains = () => {\n\n    };\n\n    const [filterMethods, setFilterMethods] = useState([is, contains]);\n    const [filterString, setFilterString] = useState([\"is\", \"contains\"]);\n\n    const filterLeads = (obj) => {\n        const methodIndex = filterString.findIndex(filter => filter === obj.filterByMethod);\n        const method = filterMethods[methodIndex];\n        method(obj, leads)\n    }\n\n\n    let columns = <React.Fragment>\n        <div style={{ minWidth: \"3rem\", position: \"fixed\", backgroundColor: \"#fff\", borderRadius: \"10px 0 0 0\" }} className={styles.column}>\n            <input type=\"checkbox\" />\n        </div>\n        {leadCols.map((key, index) => <div key={index} className={styles.column}>{key.label}</div>)}\n    </React.Fragment>;\n   \n    return (<section className={styles.leadsContainer}>\n        {isLoading && <LoadingPage />}\n        <Filter leadsCols={leadCols} filter={filterLeads} module=\"leads\" />\n        <section className={styles.leadsrecords}>\n            <div className={styles[\"lead-columns\"]}>\n                {columns}\n            </div>\n            { filterApplied && filteredLeads.length === 0 && <div style={{height:\"100%\", backgroundColor:\"#fff\", display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}><p>No Leads present for the specified criteria. Please refresh the page.</p></div> }\n            { !!leads && filteredLeads.length === 0 && !filterApplied && leads.map(lead => <Record lead={lead} key={lead.id} />)}\n            { filterApplied && filteredLeads.length !==0 && filteredLeads.map(lead => <Record lead={lead} key={lead.id} />) }\n        </section>\n    </section>);\n}\n\nexport default LeadsContainer"]},"metadata":{},"sourceType":"module"}