{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/CRM/src/Components/Leads/LeadsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingPage from '../../Pages/loadingPage';\nimport { leadActions } from '../../Store/Leads/leads-slice';\nimport Filter from '../Filter/Filter';\nimport Record from '../Record/Record';\nimport styles from './LeadsContainer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeadsContainer = ({\n  leadCols,\n  isLoading,\n  filterCols\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    leads,\n    filterApplied,\n    filteredLeads\n  } = useSelector(state => state.leads);\n\n  const is = ({\n    name,\n    value\n  }, leads) => {\n    const leadRecs = leads.filter(lead => lead[name] === value);\n    dispatch(leadActions.addFilteredLeads({\n      filteredLeads: leadRecs\n    }));\n  };\n\n  const contains = () => {};\n\n  const [filterMethods] = useState([is, contains]);\n  const [filterString, setFilterString] = useState([\"is\", \"contains\"]);\n\n  const filterLeads = obj => {\n    const methodIndex = filterString.findIndex(filter => filter === obj.filterByMethod);\n    const method = filterMethods[methodIndex];\n    method(obj, leads);\n  };\n\n  let columns = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minWidth: \"3rem\",\n        position: \"fixed\",\n        backgroundColor: \"#fff\",\n        borderRadius: \"10px 0 0 0\"\n      },\n      className: styles.column,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), leadCols.map((key, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.column,\n      children: key.label\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 39\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.leadsContainer,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      leadsCols: filterCols,\n      filter: filterLeads,\n      module: \"leads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.leadsrecords,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"lead-columns\"],\n        children: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), filterApplied && filteredLeads.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"100%\",\n          backgroundColor: \"#fff\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Leads present for the specified criteria. Please refresh the page.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 183\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 61\n      }, this), !!leads && filteredLeads.length === 0 && !filterApplied && leads.map(lead => /*#__PURE__*/_jsxDEV(Record, {\n        lead: lead\n      }, lead.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 91\n      }, this)), filterApplied && filteredLeads.length !== 0 && filteredLeads.map(lead => /*#__PURE__*/_jsxDEV(Record, {\n        lead: lead\n      }, lead.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 87\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LeadsContainer, \"lY+6t6zymoT7B/P7+cNHt1hLZ7Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LeadsContainer;\nexport default LeadsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeadsContainer\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Components/Leads/LeadsContainer.js"],"names":["React","useState","useDispatch","useSelector","LoadingPage","leadActions","Filter","Record","styles","LeadsContainer","leadCols","isLoading","filterCols","dispatch","leads","filterApplied","filteredLeads","state","is","name","value","leadRecs","filter","lead","addFilteredLeads","contains","filterMethods","filterString","setFilterString","filterLeads","obj","methodIndex","findIndex","filterByMethod","method","columns","minWidth","position","backgroundColor","borderRadius","column","map","key","index","label","leadsContainer","leadsrecords","length","height","display","justifyContent","alignItems","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingPage from '../../Pages/loadingPage';\nimport { leadActions } from '../../Store/Leads/leads-slice';\nimport Filter from '../Filter/Filter';\nimport Record from '../Record/Record';\nimport styles from './LeadsContainer.module.css';\n\n\nconst LeadsContainer = ({ leadCols, isLoading , filterCols}) => {\n    const dispatch = useDispatch();\n\n    const { leads, filterApplied, filteredLeads } = useSelector((state) => state.leads);\n   \n    const is = ({ name, value }, leads) => {\n        const leadRecs = leads.filter((lead) => lead[name] === value);\n        dispatch(leadActions.addFilteredLeads({\n            filteredLeads: leadRecs\n        }));\n    };\n    const contains = () => {\n\n    };\n\n    const [filterMethods] = useState([is, contains]);\n    const [filterString, setFilterString] = useState([\"is\", \"contains\"]);\n\n    const filterLeads = (obj) => {\n        const methodIndex = filterString.findIndex(filter => filter === obj.filterByMethod);\n        const method = filterMethods[methodIndex];\n        method(obj, leads)\n    }\n\n    let columns = <React.Fragment>\n        <div style={{ minWidth: \"3rem\", position: \"fixed\", backgroundColor: \"#fff\", borderRadius: \"10px 0 0 0\" }} className={styles.column}>\n            <input type=\"checkbox\" />\n        </div>\n        {leadCols.map((key, index) => <div key={index} className={styles.column}>{key.label}</div>)}\n    </React.Fragment>;\n\n    return (<section className={styles.leadsContainer}>\n        {isLoading && <LoadingPage />}\n        <Filter leadsCols={filterCols} filter={filterLeads} module=\"leads\" />\n        <section className={styles.leadsrecords}>\n            <div className={styles[\"lead-columns\"]}>\n                {columns}\n            </div>\n            {filterApplied && filteredLeads.length === 0 && <div style={{ height: \"100%\", backgroundColor: \"#fff\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}><p>No Leads present for the specified criteria. Please refresh the page.</p></div>}\n            {!!leads && filteredLeads.length === 0 && !filterApplied && leads.map(lead => <Record lead={lead} key={lead.id} />)}\n            {filterApplied && filteredLeads.length !== 0 && filteredLeads.map(lead => <Record lead={lead} key={lead.id} />)}\n        </section>\n    </section>);\n}\n\nexport default LeadsContainer"]},"metadata":{},"sourceType":"module"}