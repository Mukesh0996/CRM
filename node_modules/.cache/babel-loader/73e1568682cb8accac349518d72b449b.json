{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useHttp = requestFn => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState({\n    isValid: false,\n    value: \"\",\n    message: \"\"\n  });\n\n  const sendRequest = async (orgId, sendData) => {\n    console.log(this, orgId);\n    setIsLoading(true);\n\n    try {\n      const responseData = await requestFn(data);\n      sendData(responseData);\n    } catch (error) {\n      setIsLoading(false);\n      setError({\n        isValid: error.isValid,\n        message: error.message,\n        value: error.value\n      });\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    sendRequest,\n    error\n  };\n};\n\n_s(useHttp, \"ISvcW3SrWLnbitTF/Tft5kSrH8A=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/React/front/src/Hooks/httpHook.js"],"names":["useState","useHttp","requestFn","isLoading","setIsLoading","error","setError","isValid","value","message","sendRequest","orgId","sendData","console","log","responseData","data"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,OAAO,GAAIC,SAAD,IAAe;AAAA;;AAE3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAACO,IAAAA,OAAO,EAAE,KAAV;AAAiBC,IAAAA,KAAK,EAAC,EAAvB;AAA2BC,IAAAA,OAAO,EAAC;AAAnC,GAAD,CAAlC;;AAEA,QAAMC,WAAW,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBH,KAAlB;AACAP,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACD,YAAMW,YAAY,GAAG,MAAMb,SAAS,CAACc,IAAD,CAApC;AACAJ,MAAAA,QAAQ,CAACG,YAAD,CAAR;AACF,KAHD,CAGE,OAAOV,KAAP,EAAc;AACZD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC;AACLC,QAAAA,OAAO,EAAEF,KAAK,CAACE,OADV;AAELE,QAAAA,OAAO,EAAEJ,KAAK,CAACI,OAFV;AAGLD,QAAAA,KAAK,EAAEH,KAAK,CAACG;AAHR,OAAD,CAAR;AAKH;;AACDJ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAfD;;AAgBA,SAAO;AACHD,IAAAA,SADG;AAEHO,IAAAA,WAFG;AAGHL,IAAAA;AAHG,GAAP;AAMH,CA3BD;;GAAMJ,O;;AA6BN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\"\n\n\nconst useHttp = (requestFn) => {\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState({isValid: false, value:\"\", message:\"\"});\n\n    const sendRequest = async (orgId, sendData) => {\n        console.log(this, orgId);\n        setIsLoading(true);\n        try {\n           const responseData = await requestFn(data);\n           sendData(responseData);\n        } catch (error) {\n            setIsLoading(false);\n            setError({\n                isValid: error.isValid,\n                message: error.message,\n                value: error.value\n            })\n        }\n        setIsLoading(false);\n    }\n    return {\n        isLoading,\n        sendRequest,\n        error\n    }\n\n}\n\nexport default useHttp;"]},"metadata":{},"sourceType":"module"}