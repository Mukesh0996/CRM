{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport AuthContext from \"../Store/AuthContext\";\n\nconst useHttp = requestFn => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState({\n    isValid: false,\n    value: \"\",\n    message: \"\"\n  });\n  const ctx = useContext(AuthContext);\n\n  const sendRequest = async (data, sendData) => {\n    setIsLoading(true);\n\n    try {\n      const responseData = await requestFn(data, ctx.token);\n      sendData(responseData);\n    } catch (error) {\n      setIsLoading(false);\n      console.log(error.message);\n      setError({\n        isValid: error.isValid,\n        message: error.message,\n        value: error.value\n      });\n      console.log(error);\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    sendRequest,\n    error\n  };\n};\n\n_s(useHttp, \"49uoB/41mQGb+5AogOXK8nhJlPs=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Hooks/httpHook.js"],"names":["useContext","useState","AuthContext","useHttp","requestFn","isLoading","setIsLoading","error","setError","isValid","value","message","ctx","sendRequest","data","sendData","responseData","token","console","log"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAGA,MAAMC,OAAO,GAAIC,SAAD,IAAe;AAAA;;AAE3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AAACQ,IAAAA,OAAO,EAAE,KAAV;AAAiBC,IAAAA,KAAK,EAAC,EAAvB;AAA2BC,IAAAA,OAAO,EAAC;AAAnC,GAAD,CAAlC;AACA,QAAMC,GAAG,GAAGZ,UAAU,CAACE,WAAD,CAAtB;;AACA,QAAMW,WAAW,GAAG,OAAOC,IAAP,EAAaC,QAAb,KAA0B;AAC1CT,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACD,YAAMU,YAAY,GAAG,MAAMZ,SAAS,CAACU,IAAD,EAAOF,GAAG,CAACK,KAAX,CAApC;AACAF,MAAAA,QAAQ,CAACC,YAAD,CAAR;AACF,KAHD,CAGE,OAAOT,KAAP,EAAc;AACZD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACI,OAAlB;AACAH,MAAAA,QAAQ,CAAC;AACLC,QAAAA,OAAO,EAAEF,KAAK,CAACE,OADV;AAELE,QAAAA,OAAO,EAAEJ,KAAK,CAACI,OAFV;AAGLD,QAAAA,KAAK,EAAEH,KAAK,CAACG;AAHR,OAAD,CAAR;AAKAQ,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACH;;AACDD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAhBD;;AAiBA,SAAO;AACHD,IAAAA,SADG;AAEHQ,IAAAA,WAFG;AAGHN,IAAAA;AAHG,GAAP;AAMH,CA5BD;;GAAMJ,O;;AA8BN,eAAeA,OAAf","sourcesContent":["import { useContext, useState } from \"react\"\nimport AuthContext from \"../Store/AuthContext\";\n\n\nconst useHttp = (requestFn) => {\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState({isValid: false, value:\"\", message:\"\"});\n    const ctx = useContext(AuthContext);\n    const sendRequest = async (data, sendData) => {\n        setIsLoading(true);\n        try {\n           const responseData = await requestFn(data, ctx.token);\n           sendData(responseData);\n        } catch (error) {\n            setIsLoading(false);\n            console.log(error.message)\n            setError({\n                isValid: error.isValid,\n                message: error.message,\n                value: error.value\n            });\n            console.log(error);\n        }\n        setIsLoading(false);\n    }\n    return {\n        isLoading,\n        sendRequest,\n        error\n    }\n\n}\n\nexport default useHttp;"]},"metadata":{},"sourceType":"module"}