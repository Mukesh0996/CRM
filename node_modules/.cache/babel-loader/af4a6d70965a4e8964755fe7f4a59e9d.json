{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/CRM/src/Components/Leads/LeadsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingPage from '../../Pages/loadingPage';\nimport { leadActions } from '../../Store/Leads/leads-slice';\nimport Filter from '../Filter/Filter';\nimport Record from '../Record/Record';\nimport styles from './LeadsContainer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeadsContainer = ({\n  leadCols,\n  isLoading,\n  filterCols\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    leads,\n    filterApplied,\n    filteredLeads\n  } = useSelector(state => state.leads);\n\n  const is = ({\n    name,\n    value\n  }, leads) => {\n    const leadRecs = leads.filter(lead => lead[name] === value);\n    dispatch(leadActions.addFilteredLeads({\n      filteredLeads: leadRecs\n    }));\n  };\n\n  const contains = () => {};\n\n  const [filterMethods] = useState([is, contains]);\n  const [filterString] = useState([\"is\", \"contains\"]);\n\n  const filterLeads = obj => {\n    const methodIndex = filterString.findIndex(filter => filter === obj.filterByMethod);\n    const method = filterMethods[methodIndex];\n    method(obj, leads);\n  };\n\n  let columns = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minWidth: \"3rem\",\n        position: \"fixed\",\n        backgroundColor: \"#fff\",\n        borderRadius: \"10px 0 0 0\"\n      },\n      className: styles.column,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), leadCols.map((key, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.column,\n      children: key.label\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 40\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.leadsContainer,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        leadsCols: filterCols,\n        filter: filterLeads,\n        module: \"leads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.leadsrecords,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"lead-columns\"],\n          children: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), filterApplied && filteredLeads.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"100%\",\n            backgroundColor: \"#fff\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No Leads present for the specified criteria. Please refresh the page.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 187\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 65\n        }, this), !!leads && filteredLeads.length === 0 && !filterApplied && leads.map(lead => /*#__PURE__*/_jsxDEV(Record, {\n          lead: lead\n        }, lead.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 95\n        }, this)), filterApplied && filteredLeads.length !== 0 && filteredLeads.map(lead => /*#__PURE__*/_jsxDEV(Record, {\n          lead: lead\n        }, lead.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 91\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LeadsContainer, \"h/MhAFT2KZr/n7ZD3F2izNhfZtM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LeadsContainer;\nexport default LeadsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeadsContainer\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Components/Leads/LeadsContainer.js"],"names":["React","useState","Fragment","useDispatch","useSelector","LoadingPage","leadActions","Filter","Record","styles","LeadsContainer","leadCols","isLoading","filterCols","dispatch","leads","filterApplied","filteredLeads","state","is","name","value","leadRecs","filter","lead","addFilteredLeads","contains","filterMethods","filterString","filterLeads","obj","methodIndex","findIndex","filterByMethod","method","columns","minWidth","position","backgroundColor","borderRadius","column","map","key","index","label","leadsContainer","leadsrecords","length","height","display","justifyContent","alignItems","id"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingPage from '../../Pages/loadingPage';\nimport { leadActions } from '../../Store/Leads/leads-slice';\nimport Filter from '../Filter/Filter';\nimport Record from '../Record/Record';\nimport styles from './LeadsContainer.module.css';\n\n\nconst LeadsContainer = ({ leadCols, isLoading, filterCols }) => {\n    const dispatch = useDispatch();\n    const { leads, filterApplied, filteredLeads } = useSelector((state) => state.leads);\n    \n    const is = ({ name, value }, leads) => {\n        const leadRecs = leads.filter((lead) => lead[name] === value);\n        dispatch(leadActions.addFilteredLeads({filteredLeads: leadRecs}));\n    };\n\n    const contains = () => { };\n\n    const [filterMethods] = useState([is, contains]);\n    const [filterString] = useState([\"is\", \"contains\"]);\n\n    const filterLeads = (obj) => {\n        const methodIndex = filterString.findIndex(filter => filter === obj.filterByMethod);\n        const method = filterMethods[methodIndex];\n        method(obj, leads)\n    }\n\n    let columns = <React.Fragment>\n        <div style={{ minWidth: \"3rem\", position: \"fixed\", backgroundColor: \"#fff\", borderRadius: \"10px 0 0 0\" }} className={styles.column}>\n            <input type=\"checkbox\" />\n        </div>\n        { leadCols.map((key, index) => <div key={index} className={styles.column}>{key.label}</div>) }\n    </React.Fragment>;\n\n    return (<Fragment>\n       \n        <section className={styles.leadsContainer}>\n           \n            { isLoading && <LoadingPage /> }\n            <Filter leadsCols={filterCols} filter={filterLeads} module=\"leads\" />\n            <section className={styles.leadsrecords}>\n                <div className={styles[\"lead-columns\"]}>{columns}</div>\n                {filterApplied && filteredLeads.length === 0 && <div style={{ height: \"100%\", backgroundColor: \"#fff\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}><p>No Leads present for the specified criteria. Please refresh the page.</p></div>}\n                {!!leads && filteredLeads.length === 0 && !filterApplied && leads.map(lead => <Record lead={lead} key={lead.id} />)}\n                {filterApplied && filteredLeads.length !== 0 && filteredLeads.map(lead => <Record lead={lead} key={lead.id} />)}\n            </section>\n            \n        </section>\n        </Fragment>\n    );\n}\n\nexport default LeadsContainer;"]},"metadata":{},"sourceType":"module"}