{"ast":null,"code":"// import React, { useState, Fragment } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import TopBarLoading from '../../Pages/LoadingTopBar';\n// import { leadActions } from '../../Store/Leads/leads-slice';\n// import Filter from '../Filter/Filter';\n// import Record from '../Record/Record';\n// import styles from './LeadsContainer.module.css';\n// const LeadsContainer = ({ leadCols, isLoading, filterCols }) => {\n//     const dispatch = useDispatch();\n//     const { leads, filterApplied, filteredLeads } = useSelector((state) => state.leads);\n//     const is = ({ name, value }, leads) => {\n//         const leadRecs = leads.filter((lead) => lead[name] === value);\n//         dispatch(leadActions.addFilteredLeads({filteredLeads: leadRecs}));\n//     };\n//     const contains = () => { };\n//     const [filterMethods] = useState([is, contains]);\n//     const [filterString] = useState([\"is\", \"contains\"]);\n//     // 9840765219\n//     const filterLeads = (obj) => {\n//         const methodIndex = filterString.findIndex(filter => filter === obj.filterByMethod);\n//         const method = filterMethods[methodIndex];\n//         method(obj, leads)\n//     }\n//     let columns = <React.Fragment>\n//         <div style={{ minWidth: \"3rem\", position: \"fixed\", backgroundColor: \"#fff\", borderRadius: \"10px 0 0 0\" }} className={styles.column}>\n//             <input type=\"checkbox\" />\n//         </div>\n//         { leadCols.map((key, index) => <div key={index} className={styles.column}>{key.label}</div>) }\n//     </React.Fragment>;\n//     return (<Fragment>\n//                 <section className={styles.leadsContainer}>\n//             { isLoading && <TopBarLoading /> }\n//             <Filter leadsCols={filterCols} filter={filterLeads} module=\"leads\" />\n//             <section className={styles.leadsrecords}>\n//                 <div className={styles[\"lead-columns\"]}>{columns}</div>\n//                 {filterApplied && filteredLeads.length === 0 && <div style={{ height: \"100%\", backgroundColor: \"#fff\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}><p>No Leads present for the specified criteria. Please refresh the page.</p></div>}\n//                 {!!leads && filteredLeads.length === 0 && !filterApplied && leads.map(lead => <Record lead={lead} key={lead.id} />)}\n//                 {filterApplied && filteredLeads.length !== 0 && filteredLeads.map(lead => <Record lead={lead} key={lead.id} />)}\n//             </section>\n//         </section>\n//         </Fragment>\n//     );\n// }\n// export default LeadsContainer;","map":{"version":3,"sources":["/Users/mukesh-8058/Documents/CRM/src/Components/Leads/LeadsContainer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState, Fragment } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import TopBarLoading from '../../Pages/LoadingTopBar';\n// import { leadActions } from '../../Store/Leads/leads-slice';\n// import Filter from '../Filter/Filter';\n// import Record from '../Record/Record';\n// import styles from './LeadsContainer.module.css';\n\n\n// const LeadsContainer = ({ leadCols, isLoading, filterCols }) => {\n//     const dispatch = useDispatch();\n//     const { leads, filterApplied, filteredLeads } = useSelector((state) => state.leads);\n    \n//     const is = ({ name, value }, leads) => {\n//         const leadRecs = leads.filter((lead) => lead[name] === value);\n//         dispatch(leadActions.addFilteredLeads({filteredLeads: leadRecs}));\n//     };\n\n//     const contains = () => { };\n\n//     const [filterMethods] = useState([is, contains]);\n//     const [filterString] = useState([\"is\", \"contains\"]);\n//     // 9840765219\n//     const filterLeads = (obj) => {\n//         const methodIndex = filterString.findIndex(filter => filter === obj.filterByMethod);\n//         const method = filterMethods[methodIndex];\n//         method(obj, leads)\n//     }\n\n//     let columns = <React.Fragment>\n//         <div style={{ minWidth: \"3rem\", position: \"fixed\", backgroundColor: \"#fff\", borderRadius: \"10px 0 0 0\" }} className={styles.column}>\n//             <input type=\"checkbox\" />\n//         </div>\n//         { leadCols.map((key, index) => <div key={index} className={styles.column}>{key.label}</div>) }\n//     </React.Fragment>;\n\n//     return (<Fragment>\n//                 <section className={styles.leadsContainer}>\n//             { isLoading && <TopBarLoading /> }\n//             <Filter leadsCols={filterCols} filter={filterLeads} module=\"leads\" />\n//             <section className={styles.leadsrecords}>\n//                 <div className={styles[\"lead-columns\"]}>{columns}</div>\n//                 {filterApplied && filteredLeads.length === 0 && <div style={{ height: \"100%\", backgroundColor: \"#fff\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}><p>No Leads present for the specified criteria. Please refresh the page.</p></div>}\n//                 {!!leads && filteredLeads.length === 0 && !filterApplied && leads.map(lead => <Record lead={lead} key={lead.id} />)}\n//                 {filterApplied && filteredLeads.length !== 0 && filteredLeads.map(lead => <Record lead={lead} key={lead.id} />)}\n//             </section>\n            \n//         </section>\n//         </Fragment>\n//     );\n// }\n\n// export default LeadsContainer;"]},"metadata":{},"sourceType":"module"}