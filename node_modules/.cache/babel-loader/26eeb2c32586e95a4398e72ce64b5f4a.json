{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/React/front/src/Pages/Signin.js\",\n    _s = $RefreshSig$();\n\nimport styles from './SignIn.module.css';\nimport image from '../images/image.png';\nimport { Fragment, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport LoadingPage from './loadingPage';\nimport useInput from '../Hooks/inputHook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmail = value => value.includes('@') && value.trim().length > 3;\n\nconst isEmpty = value => value.trim() !== \"\" && value.trim().length >= 3;\n\nconst SignIn = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorState, setErrorState] = useState({});\n  const history = useHistory();\n  const {\n    value: email,\n    valueChangeHandler: emailChangehandler,\n    blurHandler: emailBlurHandler,\n    isValid: emailValid,\n    isTouched: emailTouched\n  } = useInput(isEmail);\n  const {\n    value: password,\n    valueChangeHandler: passwordChangehandler,\n    blurHandler: passwordBlurHandler,\n    isValid: passwordValid,\n    isTouched: passwordTouched\n  } = useInput(isEmpty);\n\n  const signInhandler = e => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    if (emailValid && passwordValid) {\n      const signInObj = {\n        email,\n        password\n      };\n\n      const sendRequest = async () => {\n        const response = await fetch(\"http://localhost:8080/login\", {\n          method: \"POST\",\n          body: JSON.stringify(signInObj),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          setErrorState({\n            isValid: responseData.isValid,\n            value: responseData.value\n          });\n          throw new Error(responseData.message);\n        }\n\n        localStorage.setItem(\"orgId\", responseData.orgId);\n        localStorage.setItem(\"userId\", responseData.userId);\n        history.push(`/home/org/${responseData.orgId}`);\n        setIsLoading(false);\n      };\n\n      sendRequest().catch(err => {\n        setIsLoading(false);\n        setErrorState(prevState => {\n          return { ...prevState,\n            message: err.message\n          };\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.signup,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 57\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.signinContainer,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"form-detail\"],\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"to access CRM.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: signInhandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"form-control\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"email\",\n              onChange: emailChangehandler,\n              onBlur: emailBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), !emailValid && emailTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: \"Please enter a valid email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 62\n            }, this), !errorState.isValid && errorState.value === \"email\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: errorState.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 84\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"form-control\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              onChange: passwordChangehandler,\n              onBlur: passwordBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), !errorState.isValid && errorState.value === \"password\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: errorState.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 87\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.submitBtn,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.rightContainer,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"CRM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 12\n  }, this);\n};\n\n_s(SignIn, \"Vq7MQYtnNxAl4jZ6IpIPlR/57Rs=\", false, function () {\n  return [useHistory, useInput, useInput];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/React/front/src/Pages/Signin.js"],"names":["styles","image","Fragment","useState","Link","useHistory","LoadingPage","useInput","isEmail","value","includes","trim","length","isEmpty","SignIn","isLoading","setIsLoading","errorState","setErrorState","history","email","valueChangeHandler","emailChangehandler","blurHandler","emailBlurHandler","isValid","emailValid","isTouched","emailTouched","password","passwordChangehandler","passwordBlurHandler","passwordValid","passwordTouched","signInhandler","e","preventDefault","signInObj","sendRequest","response","fetch","method","body","JSON","stringify","headers","responseData","json","ok","Error","message","localStorage","setItem","orgId","userId","push","catch","err","prevState","signup","signinContainer","form","error","submitBtn","rightContainer"],"mappings":"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","sourcesContent":["import styles from './SignIn.module.css';\nimport image from '../images/image.png'\nimport { Fragment, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport LoadingPage from './loadingPage';\nimport useInput from '../Hooks/inputHook';\n\nconst isEmail = (value) => value.includes('@') && value.trim().length > 3;\nconst isEmpty = (value) => value.trim() !== \"\" && value.trim().length >= 3; \n\nconst SignIn = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [errorState, setErrorState] = useState({});\n\n    const history = useHistory();\n\n    const {value: email, \n        valueChangeHandler: emailChangehandler, \n        blurHandler: emailBlurHandler, \n        isValid: emailValid, \n        isTouched: emailTouched} = useInput(isEmail);\n\n        const {value: password, \n            valueChangeHandler: passwordChangehandler, \n            blurHandler: passwordBlurHandler, \n            isValid: passwordValid, \n            isTouched: passwordTouched} = useInput(isEmpty);\n\n    const signInhandler = (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n\n        if(emailValid && passwordValid) {\n            const signInObj = {\n                email,\n                password\n            }\n            const sendRequest = async () => {\n                const response =  await fetch(\"http://localhost:8080/login\", {\n                    method:\"POST\",\n                    body: JSON.stringify(signInObj),\n                    headers :{\n                       \"Content-Type\": \"application/json\"\n                    }\n                });\n                const responseData = await response.json();\n                if(!response.ok) {\n                    setErrorState({\n                        isValid: responseData.isValid,\n                        value: responseData.value\n                    })\n                  throw new Error(responseData.message)\n                }\n                localStorage.setItem(\"orgId\", responseData.orgId);\n                localStorage.setItem(\"userId\",responseData.userId);\n                history.push(`/home/org/${responseData.orgId}`)\n                setIsLoading(false);\n            }\n           sendRequest().catch(err => {\n               setIsLoading(false)\n              setErrorState(prevState => {\n                  return { ...prevState, message: err.message }\n              })\n           })\n        }\n    }\n\n    return <Fragment> \n                <div className={styles.signup}><button> <Link to=\"/signup\">SIGN UP</Link> </button></div>\n                <main className={styles.signinContainer}>\n                  { isLoading && <LoadingPage/>}\n                    <section className={styles.form}>\n                        <div className={styles[\"form-detail\"]}>\n                            <h1>Sign in</h1>\n                            <p>to access CRM.</p>\n                        </div>\n                    <form onSubmit={signInhandler}>\n                        <div className={styles[\"form-control\"]}>\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"text\" id=\"email\" onChange={emailChangehandler} onBlur={emailBlurHandler}/>\n                            { !emailValid && emailTouched && <p className={styles.error}>Please enter a valid email</p> }\n                            { !errorState.isValid && errorState.value===\"email\" && <p className={styles.error}>{errorState.message}</p> }\n                        </div>\n                        <div className={styles[\"form-control\"]}>\n                            <label htmlFor=\"password\">Password</label>\n                            <input type=\"password\" id=\"password\" onChange={passwordChangehandler} onBlur={passwordBlurHandler}/>\n                            { !errorState.isValid && errorState.value===\"password\" && <p className={styles.error}>{errorState.message}</p> }\n                        </div>\n                        <button className={styles.submitBtn}>Sign In</button>\n                    </form>\n                </section>\n                <section className={styles.rightContainer}> \n                   <img src={image} alt=\"CRM\"/>\n                 </section>\n             </main>\n             </Fragment>\n}\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}