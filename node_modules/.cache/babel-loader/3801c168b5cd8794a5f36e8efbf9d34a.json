{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/React/front/src/Pages/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport useInput from '../Hooks/SignUpHook';\nimport styles from './Signup.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() !== \"\" && value.trim().length < 3;\n\nconst isContactNumber = value => !isNaN(value) && value.trim().length === 10;\n\nconst isEmail = value => value.includes('@');\n\nconst Signup = () => {\n  _s();\n\n  const {\n    value: first_name,\n    valueChangeHandler: firstNameHandler,\n    blurHandler: fNameBlurHandler,\n    isValid: fNameValid,\n    isTouched: fNameTouched\n  } = useInput(isEmpty);\n  const {\n    value: last_name,\n    valueChangeHandler: lastNameHandler,\n    blurHandler: lNameBlurHandler,\n    isValid: lNameValid,\n    isTouched: lNameTouched\n  } = useInput(isEmpty);\n  const {\n    value: email,\n    valueChangeHandler: emailHandler,\n    blurHandler: emailBlurHandler,\n    isValid: emailValid,\n    isTouched: emailTouched\n  } = useInput(isEmpty);\n  const {\n    value: contact,\n    valueChangeHandler: contactHandler,\n    blurHandler: contactBlurHandler,\n    isValid: contactValid,\n    isTouched: contactTouched\n  } = useInput(isContactNumber);\n  const {\n    value: org_name,\n    valueChangeHandler: orgNameHandler,\n    blurHandler: orgBlurHandler,\n    isValid: orgNameValid,\n    isTouched: orgNameTouched\n  } = useInput(isEmpty);\n  const {\n    value: password,\n    valueChangeHandler: passwordHandler,\n    blurHandler: passwordBlurHandler,\n    isValid: passwordValid,\n    isTouched: passwordTouched\n  } = useInput(isEmpty);\n\n  const signUphandler = event => {\n    event.preventDefault();\n    const signUpObj = {\n      first_name,\n      last_name,\n      email,\n      contact,\n      org_name,\n      password\n    }; //network request;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.signin,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Already have an account? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"SIGN IN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 74\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.signupContainer,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"form-detail\"],\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Sign up. For Free\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"to access CRM.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: signUphandler,\n          autoComplete: \"false\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"form-control\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"f_name\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"f_name\",\n              name: \"first_name\",\n              onChange: event => firstNameHandler(event),\n              onBlur: fNameBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), fNameValid && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: \"Please enter a valid First Name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"form-control\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"l_name\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"l_name\",\n              name: \"last_name\",\n              onBlur: lNameBlurHandler,\n              onChange: lastNameHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), lNameValid && lNameTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: \"Please enter a valid Last Name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"form-control\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Work Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"email\",\n              name: \"email\",\n              onBlur: emailBlurHandler,\n              onChange: emailBlurHandler,\n              onChange: emailHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), emailValid && emailTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: \"Please enter a valid Email.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"form-control\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"contact\",\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"contact\",\n              name: \"contact\",\n              onBlur: contactBlurHandler,\n              onChange: contactHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), contactValid && contactTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: \"Please enter a valid Contact number.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"form-control\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"orgname\",\n              children: \"Organizations Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"orgname\",\n              name: \"org_name\",\n              onBlur: orgBlurHandler,\n              onChange: orgNameHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), orgNameValid && orgNameTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: \"Please enter a valid organizations name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"form-control\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              autoComplete: \"false\",\n              onBlur: passwordBlurHandler,\n              onChange: passwordHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this), passwordValid && passwordTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: \"Please enter a valid password. Should be of length 3.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 63\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.submitBtn,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Signup, \"Bj129or5+8zKjzlmvrNyHw+KB2Y=\", false, function () {\n  return [useInput, useInput, useInput, useInput, useInput, useInput];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/React/front/src/Pages/Signup.js"],"names":["Fragment","Link","useInput","styles","isEmpty","value","trim","length","isContactNumber","isNaN","isEmail","includes","Signup","first_name","valueChangeHandler","firstNameHandler","blurHandler","fNameBlurHandler","isValid","fNameValid","isTouched","fNameTouched","last_name","lastNameHandler","lNameBlurHandler","lNameValid","lNameTouched","email","emailHandler","emailBlurHandler","emailValid","emailTouched","contact","contactHandler","contactBlurHandler","contactValid","contactTouched","org_name","orgNameHandler","orgBlurHandler","orgNameValid","orgNameTouched","password","passwordHandler","passwordBlurHandler","passwordValid","passwordTouched","signUphandler","event","preventDefault","signUpObj","signin","signupContainer","form","error","submitBtn"],"mappings":"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","sourcesContent":["import { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport useInput from '../Hooks/SignUpHook';\nimport styles from './Signup.module.css';\n\nconst isEmpty = (value) => value.trim() !== \"\" && value.trim().length < 3; \nconst isContactNumber = (value) => !isNaN(value) && value.trim().length === 10;\nconst isEmail = (value) => value.includes('@');\n\nconst Signup = () => {\n\n   const { value: first_name, \n            valueChangeHandler: firstNameHandler, \n            blurHandler: fNameBlurHandler,\n            isValid: fNameValid , isTouched: fNameTouched } = useInput(isEmpty);\n\n   const { value: last_name, \n           valueChangeHandler: lastNameHandler, \n           blurHandler: lNameBlurHandler, \n           isValid: lNameValid, isTouched : lNameTouched} = useInput(isEmpty);\n\n   const { value: email, \n         valueChangeHandler: emailHandler, \n         blurHandler: emailBlurHandler, \n         isValid: emailValid, isTouched: emailTouched } = useInput(isEmpty);\n\n   const { value: contact, \n        valueChangeHandler: contactHandler, \n        blurHandler: contactBlurHandler, \n        isValid: contactValid, isTouched: contactTouched } = useInput(isContactNumber);\n\n   const { value: org_name, \n           valueChangeHandler: orgNameHandler, \n           blurHandler: orgBlurHandler, \n           isValid: orgNameValid, isTouched: orgNameTouched } = useInput(isEmpty);\n\n   const { value: password, \n         valueChangeHandler: passwordHandler, \n         blurHandler: passwordBlurHandler, \n         isValid: passwordValid, isTouched: passwordTouched } = useInput(isEmpty);\n\n    const signUphandler = (event) => {\n        event.preventDefault();\n\n        const signUpObj = {\n            first_name,\n            last_name,\n            email,\n            contact,\n            org_name,\n            password\n        }\n       //network request;\n    }\n\n\n    return (<Fragment>\n        <div className={styles.signin}> <p> Already have an account? </p><Link to=\"/\">SIGN IN</Link></div>\n        <main className={styles.signupContainer}>\n            <section className={styles.form}>\n                <div className={styles[\"form-detail\"]}>\n                    <h1>Sign up. For Free</h1>\n                    <p>to access CRM.</p>\n                </div>\n                <form onSubmit={signUphandler} autoComplete=\"false\">\n                    <div className={styles[\"form-control\"]}>\n                        <label htmlFor=\"f_name\">First Name</label>\n                        <input type=\"text\" id=\"f_name\" name=\"first_name\" onChange={(event)=> firstNameHandler(event)} onBlur={fNameBlurHandler}/>\n                        { fNameValid  && <p className={styles.error}>Please enter a valid First Name.</p> }\n                    </div>\n                    <div className={styles[\"form-control\"]}>\n                        <label htmlFor=\"l_name\">Last Name</label>\n                        <input type=\"text\" id=\"l_name\" name=\"last_name\" onBlur={lNameBlurHandler} onChange={lastNameHandler}/>\n                        { lNameValid && lNameTouched && <p className={styles.error}>Please enter a valid Last Name.</p> }\n                    </div>\n                    <div className={styles[\"form-control\"]}>\n                        <label htmlFor=\"email\">Work Email</label>\n                        <input type=\"text\" id=\"email\" name=\"email\" onBlur={emailBlurHandler} onChange={emailBlurHandler}  onChange={emailHandler}/>\n                        { emailValid && emailTouched && <p className={styles.error}>Please enter a valid Email.</p> }\n                    </div>\n                    <div className={styles[\"form-control\"]}>\n                        <label htmlFor=\"contact\">Contact</label>\n                        <input type=\"text\" id=\"contact\" name=\"contact\"  onBlur={contactBlurHandler} onChange={contactHandler}/>\n                        { contactValid && contactTouched && <p className={styles.error}>Please enter a valid Contact number.</p> }\n                    </div>\n                    <div className={styles[\"form-control\"]}>\n                        <label htmlFor=\"orgname\">Organizations Name</label>\n                        <input type=\"text\" id=\"orgname\" name=\"org_name\"  onBlur= {orgBlurHandler} onChange={orgNameHandler}/>\n                        { orgNameValid && orgNameTouched && <p className={styles.error}>Please enter a valid organizations name.</p> }\n                    </div>\n                    <div className={styles[\"form-control\"]}>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" name=\"password\"  autoComplete=\"false\" onBlur={passwordBlurHandler} onChange={passwordHandler}/>\n                        { passwordValid && passwordTouched && <p className={styles.error}>Please enter a valid password. Should be of length 3.</p> }\n                    </div>\n                    <button className={styles.submitBtn}>Sign Up</button>\n                </form>\n            </section>\n        </main>\n        </Fragment>\n    );\n\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}