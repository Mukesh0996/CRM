{"ast":null,"code":"import { leadsActions } from \"./leads-slice\";\nconst url = \"http://localhost:8080\";\nexport const getFields = (orgId, token) => {\n  return async dispatch => {\n    const response = await fetch(`${url}/org/1234/leads/leadstable`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    const responseData = await response.json();\n    dispatch(leadsActions.addFields({\n      fields: responseData\n    }));\n    console.log(leadsActions);\n\n    if (!response.ok) {\n      let error = new Error(responseData.message || \"Error Occured!\");\n      error.isValid = responseData.isValid || false;\n      error.value = responseData.value || \"\";\n      throw error;\n    }\n  };\n};","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Store/Leads/leads-actions.js"],"names":["leadsActions","url","getFields","orgId","token","dispatch","response","fetch","method","headers","responseData","json","addFields","fields","console","log","ok","error","Error","message","isValid","value"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAiB;AAEtC,SAAO,MAAOC,QAAP,IAAoB;AAEvB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,GAAI,4BAAR,EAAoC;AAC5DO,MAAAA,MAAM,EAAC,KADqD;AAE5DC,MAAAA,OAAO,EAAG;AACN,wBAAe,kBADT;AAEN,yBAAkB,UAASL,KAAM;AAF3B;AAFkD,KAApC,CAA5B;AAOA,UAAMM,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AACAN,IAAAA,QAAQ,CAACL,YAAY,CAACY,SAAb,CAAuB;AAC5BC,MAAAA,MAAM,EAAEH;AADoB,KAAvB,CAAD,CAAR;AAGAI,IAAAA,OAAO,CAACC,GAAR,CAAYf,YAAZ;;AACA,QAAG,CAACM,QAAQ,CAACU,EAAb,EAAiB;AACb,UAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUR,YAAY,CAACS,OAAb,IAAwB,gBAAlC,CAAZ;AACAF,MAAAA,KAAK,CAACG,OAAN,GAAgBV,YAAY,CAACU,OAAb,IAAwB,KAAxC;AACAH,MAAAA,KAAK,CAACI,KAAN,GAAcX,YAAY,CAACW,KAAb,IAAsB,EAApC;AACA,YAAMJ,KAAN;AACH;AAEJ,GArBD;AAsBH,CAxBM","sourcesContent":["import { leadsActions } from \"./leads-slice\";\n\nconst url = \"http://localhost:8080\";\n\nexport const getFields = (orgId, token) =>{\n   \n    return async (dispatch) => {\n        \n        const response = await fetch(`${url}/org/1234/leads/leadstable`,{\n            method:\"GET\",\n            headers : {\n                \"Content-Type\":\"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            }\n        });\n        const responseData = await response.json();\n        dispatch(leadsActions.addFields({\n            fields: responseData\n        }))\n        console.log(leadsActions);\n        if(!response.ok) {\n            let error = new Error(responseData.message || \"Error Occured!\")\n            error.isValid = responseData.isValid || false;\n            error.value = responseData.value || \"\";\n            throw(error);\n        }\n       \n    }\n};"]},"metadata":{},"sourceType":"module"}