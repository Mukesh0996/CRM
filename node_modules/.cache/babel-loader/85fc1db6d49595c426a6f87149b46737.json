{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Documents/CRM/src/Store/Auth/AuthStore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport AuthContext from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [userId, setUserId] = useState(localStorage.getItem(\"userId\"));\n  const [orgId, setOrgId] = useState(localStorage.getItem(\"orgId\"));\n  const [iat, setIat] = useState(localStorage.getItem(\"iat\"));\n  const [expAt, setExpAt] = useState(localStorage.getItem(\"expAt\"));\n  const [userName, setUserName] = useState(localStorage.getItem(\"userName\"));\n\n  const signOutHandler = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"orgId\");\n    localStorage.removeItem(\"expAt\");\n    localStorage.removeItem(\"iat\");\n    localStorage.removeItem(\"userName\");\n  };\n\n  const signInHandler = ({\n    token,\n    userId,\n    orgId,\n    name\n  }) => {\n    const currentTime = new Date().getTime();\n    const expiryTime = currentTime + 86400000;\n    setToken(token);\n    setUserId(userId);\n    setOrgId(orgId);\n    setIat(currentTime);\n    setExpAt(expiryTime);\n    setUserName(name);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"userId\", userId);\n    localStorage.setItem(\"orgId\", orgId);\n    localStorage.setItem(\"iat\", currentTime);\n    localStorage.setItem(\"expAt\", expiryTime);\n    localStorage.setItem(\"userName\", userName);\n  };\n\n  if (new Date().getTime() > Number(expAt) && Number(expAt) !== 0) {\n    signOutHandler();\n  } else if (new Date().getTime() > iat && new Date().getTime() < expAt) {\n    localStorage.setItem(\"iat\", new Date().getTime());\n    setIat(new Date().getTime());\n  }\n\n  useEffect(() => {\n    if (iat && expAt) {\n      setTimeout(signOutHandler, Number(expAt) - Number(iat));\n    }\n  }, [iat, expAt]);\n  const isLoggedIn = !!token && !!userId && !!orgId;\n  const authContext = {\n    isLoggedIn,\n    token,\n    userId,\n    orgId,\n    signIn: signInHandler,\n    signOut: signOutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"4PgsGJxmQj/ILDa1rdPa+vIFqIg=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/mukesh-8058/Documents/CRM/src/Store/Auth/AuthStore.js"],"names":["React","useEffect","useState","AuthContext","AuthContextProvider","props","token","setToken","localStorage","getItem","userId","setUserId","orgId","setOrgId","iat","setIat","expAt","setExpAt","userName","setUserName","signOutHandler","removeItem","signInHandler","name","currentTime","Date","getTime","expiryTime","setItem","Number","setTimeout","isLoggedIn","authContext","signIn","signOut","children"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AuthContext from './AuthContext';\n\n\nexport const AuthContextProvider = (props) => {\n    \n    const [token, setToken] = useState(localStorage.getItem('token'));\n    const [userId, setUserId] = useState(localStorage.getItem(\"userId\"));\n    const [orgId, setOrgId] = useState(localStorage.getItem(\"orgId\"));\n    const [iat, setIat] = useState(localStorage.getItem(\"iat\"));\n    const [expAt, setExpAt] = useState(localStorage.getItem(\"expAt\"));\n    const [userName, setUserName] = useState(localStorage.getItem(\"userName\"));\n\n    const signOutHandler = () => {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"userId\");\n        localStorage.removeItem(\"orgId\");\n        localStorage.removeItem(\"expAt\");\n        localStorage.removeItem(\"iat\");\n        localStorage.removeItem(\"userName\");\n\n    }\n\n    const signInHandler = ({token, userId, orgId, name}) => {\n        const currentTime = new Date().getTime();\n        const expiryTime = currentTime + 86400000;\n        \n        setToken(token);\n        setUserId(userId);\n        setOrgId(orgId);\n        setIat(currentTime);\n        setExpAt(expiryTime);\n        setUserName(name);\n\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"userId\", userId);\n        localStorage.setItem(\"orgId\", orgId);\n        localStorage.setItem(\"iat\", currentTime);\n        localStorage.setItem(\"expAt\", expiryTime);\n        localStorage.setItem(\"userName\", userName);\n        \n    }\n\n    if(new Date().getTime() > Number(expAt) && Number(expAt) !== 0) {\n        signOutHandler();\n    }\n\n     else if(new Date().getTime() > iat && new Date().getTime() < expAt) {\n        localStorage.setItem(\"iat\", new Date().getTime());\n        setIat(new Date().getTime());\n    }\n\n    useEffect(() => {\n        if(iat && expAt) {\n            setTimeout(signOutHandler, Number(expAt) - Number(iat));\n        }\n    },[iat, expAt]);\n    \n    const isLoggedIn = !!token && !!userId && !!orgId;\n\n    const authContext = {\n        isLoggedIn,\n        token,\n        userId,\n        orgId,\n        signIn: signInHandler,\n        signOut: signOutHandler \n    }\n\n    return <AuthContext.Provider value={authContext}>{props.children}</AuthContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}