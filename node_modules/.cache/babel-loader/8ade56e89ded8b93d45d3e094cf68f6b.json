{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/React/front/src/Store/AuthStore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AuthContext from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const [userId, setUserId] = useState(\"\");\n  const [orgId, setOrgId] = useState(\"\");\n\n  const signInHandler = (token, userId, orgId) => {\n    setToken(token);\n    setUserId(userId);\n    setOrgId(orgId);\n  };\n\n  const signOutHandler = () => {}; // const isLoggedIn = !!token && !!userId && !!orgId;\n\n\n  const authValue = {\n    isLoggedIn: true,\n    token,\n    signIn: signInHandler,\n    signOut: signOutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"PS6ewtBOwNh4Np6V3YY10R3WB6E=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/React/front/src/Store/AuthStore.js"],"names":["React","useState","AuthContext","AuthContextProvider","props","initialToken","localStorage","getItem","token","setToken","userId","setUserId","orgId","setOrgId","signInHandler","signOutHandler","authValue","isLoggedIn","signIn","signOut","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAE1C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACI,YAAD,CAAlC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAMa,aAAa,GAAG,CAACN,KAAD,EAAQE,MAAR,EAAgBE,KAAhB,KAA0B;AAC5CH,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAJD;;AAMA,QAAMG,cAAc,GAAG,MAAM,CAE5B,CAFD,CAd0C,CAkB1C;;;AACA,QAAMC,SAAS,GAAG;AACdC,IAAAA,UAAU,EAAE,IADE;AAEdT,IAAAA,KAFc;AAGdU,IAAAA,MAAM,EAAEJ,aAHM;AAIdK,IAAAA,OAAO,EAAEJ;AAJK,GAAlB;AAMA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,SAA7B;AAAA,cAAyCZ,KAAK,CAACgB;AAA/C;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CA3BM;;GAAMjB,mB;;KAAAA,mB;AA6Bb,eAAeD,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport AuthContext from './AuthContext';\n\n\nexport const AuthContextProvider = (props) => {\n\n    const initialToken = localStorage.getItem('token');\n    const [token, setToken] = useState(initialToken);\n    const [userId, setUserId] = useState(\"\");\n    const [orgId, setOrgId] = useState(\"\");\n\n\n    const signInHandler = (token, userId, orgId) => {\n        setToken(token);\n        setUserId(userId);\n        setOrgId(orgId);\n    }\n\n    const signOutHandler = () => {\n\n    }\n\n    // const isLoggedIn = !!token && !!userId && !!orgId;\n    const authValue = {\n        isLoggedIn: true,\n        token,\n        signIn: signInHandler,\n        signOut: signOutHandler \n    }\n    return <AuthContext.Provider value={authValue}>{props.children}</AuthContext.Provider>\n\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}