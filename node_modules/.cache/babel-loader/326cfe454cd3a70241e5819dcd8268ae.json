{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/React/front/src/Components/Leads/AddLead.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from 'react-router';\nimport useForm from '../../Hooks/Leads/useForm';\nimport styles from './AddLead.module.css';\nimport { getLeadsFields } from '../../library/leadsFns';\nimport LoadingPage from '../../Pages/loadingPage';\nimport Input from '../Input/Input';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddLead = () => {\n  _s();\n\n  const {\n    inputHandler,\n    address,\n    information,\n    isLoading,\n    error\n  } = useForm(getLeadsFields);\n  const [description, setDescription] = useState(\"\");\n  const history = useHistory();\n  let informationFields, addressFields;\n\n  const onCancelHandler = event => {\n    event.preventDefault();\n    history.goBack(-1);\n  };\n\n  if (address) {\n    addressFields = Object.values(address).map(obj => /*#__PURE__*/_jsxDEV(Input, {\n      label: obj.label,\n      type: obj.type,\n      name: obj.name,\n      value: obj.value,\n      section: obj.section,\n      handleChange: inputHandler\n    }, obj.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 60\n    }, this));\n  }\n\n  if (information) {\n    informationFields = Object.values(information).map(obj => /*#__PURE__*/_jsxDEV(Input, {\n      label: obj.label,\n      type: obj.type,\n      name: obj.name,\n      value: obj.value,\n      section: obj.section,\n      handleChange: inputHandler\n    }, obj.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 67\n    }, this));\n  }\n\n  const saveHandler = e => {\n    e.preventDefault();\n    let leadObj = {\n      description\n    };\n    Object.values(address).map(leadAddress => {\n      leadObj = { ...leadObj,\n        [leadAddress.name]: leadAddress.value\n      };\n    });\n    Object.values(information).map(leadInfo => {\n      leadObj = { ...leadObj,\n        [leadInfo.name]: leadInfo.value\n      };\n    });\n    console.log(leadObj);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    autoComplete: \"none\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formActions,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Lead\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.alt,\n          onClick: onCancelHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.alt,\n          children: \"Save and New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.save,\n          onClick: saveHandler,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formfields,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Lead Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inp,\n        children: informationFields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Address Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inp,\n        children: addressFields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Description Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inp,\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"description\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AddLead, \"C3H5r0GXN3MImh0Znga66tRrkhY=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = AddLead;\nexport default AddLead;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLead\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/React/front/src/Components/Leads/AddLead.js"],"names":["useHistory","useForm","styles","getLeadsFields","LoadingPage","Input","useState","AddLead","inputHandler","address","information","isLoading","error","description","setDescription","history","informationFields","addressFields","onCancelHandler","event","preventDefault","goBack","Object","values","map","obj","label","type","name","value","section","id","saveHandler","e","leadObj","leadAddress","leadInfo","console","log","form","formActions","alt","save","formfields","inp","target"],"mappings":"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","sourcesContent":["import { useHistory } from 'react-router';\nimport useForm from '../../Hooks/Leads/useForm';\nimport styles from './AddLead.module.css';\nimport { getLeadsFields } from '../../library/leadsFns';\nimport LoadingPage from '../../Pages/loadingPage';\nimport Input from '../Input/Input';\nimport { useState } from 'react';\n\nconst AddLead = () => {\n\n    const { inputHandler, address, information, isLoading, error} = useForm(getLeadsFields);\n    const [description, setDescription] = useState(\"\");\n    const history = useHistory();\n\n    let informationFields, addressFields;\n\n    const onCancelHandler = (event) => {\n        event.preventDefault();\n        history.goBack(-1);\n    }\n\n    if(address) {\n         addressFields = Object.values(address).map(obj => <Input key={obj.id} label={obj.label} type={obj.type} name={obj.name} value={obj.value} section={obj.section} handleChange={inputHandler}/>) \n    }\n\n    if(information) {\n        informationFields = Object.values(information).map(obj => <Input key={obj.id} label={obj.label} type={obj.type} name={obj.name} value={obj.value} section={obj.section} handleChange={inputHandler}/>) \n    }\n\n    const saveHandler = (e) =>{\n        e.preventDefault();\n        let leadObj = { description };\n        \n        Object.values(address).map(leadAddress => {\n            leadObj = {\n                ...leadObj,\n                [leadAddress.name] : leadAddress.value\n            }\n        });\n\n        Object.values(information).map(leadInfo =>{\n            leadObj = {\n                ...leadObj,\n                [leadInfo.name]: leadInfo.value \n            }\n        });\n        \n        console.log(leadObj)\n    }\n\n    return (\n            <form className={styles.form} autoComplete=\"none\">\n                {isLoading && <LoadingPage/>}\n                <div className={styles.formActions}>\n                    <h2>Create Lead</h2>\n                    <div>\n                        <button className={styles.alt} onClick={onCancelHandler}>Cancel</button>\n                        <button className={styles.alt}>Save and New</button>\n                        <button type=\"submit\" className={styles.save} onClick={saveHandler}>Save</button>\n                    </div> \n                </div>\n                <div className={styles.formfields}>\n                    <h3>Lead Information</h3>\n                    <div className={styles.inp}>\n                        {informationFields}\n                    </div>\n                    <h3>Address Information</h3>\n                    <div className={styles.inp}>\n                        {addressFields}\n                    </div>\n                    <h3>Description Information</h3>\n                    <div  className={styles.inp}>\n                        <textarea type=\"text\" name=\"description\" onChange={(e) => setDescription(e.target.value)}></textarea>\n                    </div>\n                </div>       \n            </form>\n    )\n\n}\n\nexport default AddLead;"]},"metadata":{},"sourceType":"module"}