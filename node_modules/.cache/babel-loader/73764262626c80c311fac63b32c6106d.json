{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/React/front/src/Components/Leads/AddLead.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router';\nimport useForm from '../../Hooks/Leads/useForm';\nimport styles from './AddLead.module.css';\nimport { getLeadsFields, postLeadRecord } from '../../library/leadsFns';\nimport LoadingPage from '../../Pages/loadingPage';\nimport Input from '../Input/Input';\nimport { useState } from 'react';\nimport useHttp from '../../Hooks/httpHook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddLead = () => {\n  _s();\n\n  const {\n    inputHandler,\n    address,\n    information,\n    isLoading,\n    error\n  } = useForm(getLeadsFields);\n  const {\n    sendRequest\n  } = useHttp(postLeadRecord);\n  let informationFields, addressFields;\n  const [description, setDescription] = useState(\"\");\n  const history = useHistory();\n\n  const onCancelHandler = event => {\n    event.preventDefault();\n    history.goBack(-1);\n  };\n\n  if (address) {\n    addressFields = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Address Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inp,\n        children: Object.values(address).map(obj => /*#__PURE__*/_jsxDEV(Input, {\n          label: obj.label,\n          type: obj.type,\n          name: obj.name,\n          value: obj.value,\n          section: obj.section,\n          handleChange: inputHandler\n        }, obj.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 64\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 26\n    }, this);\n  }\n\n  if (information) {\n    informationFields = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Address Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inp,\n        children: Object.values(information).map(obj => /*#__PURE__*/_jsxDEV(Input, {\n          label: obj.label,\n          type: obj.type,\n          name: obj.name,\n          value: obj.value,\n          section: obj.section,\n          handleChange: inputHandler\n        }, obj.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 73\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 30\n    }, this);\n  }\n\n  const saveHandler = e => {\n    e.preventDefault();\n    let leadObj = {\n      description\n    };\n    Object.values(address).map(leadAddress => {\n      leadObj = { ...leadObj,\n        [leadAddress.name]: leadAddress.value\n      };\n    });\n    Object.values(information).map(leadInfo => {\n      leadObj = { ...leadObj,\n        [leadInfo.name]: leadInfo.value\n      };\n    });\n    sendRequest(leadObj, url => {\n      history.push(url);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    autoComplete: \"none\",\n    children: [true && /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formActions,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Lead\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.alt,\n          onClick: onCancelHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.alt,\n          children: \"Save and New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.save,\n          onClick: saveHandler,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formfields,\n      children: [informationFields, addressFields, /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Description Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inp,\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"description\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AddLead, \"XtDpbnPyt71OwjTLe13Os+muwSQ=\", false, function () {\n  return [useForm, useHttp, useHistory];\n});\n\n_c = AddLead;\nexport default AddLead;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLead\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/React/front/src/Components/Leads/AddLead.js"],"names":["React","useHistory","useForm","styles","getLeadsFields","postLeadRecord","LoadingPage","Input","useState","useHttp","AddLead","inputHandler","address","information","isLoading","error","sendRequest","informationFields","addressFields","description","setDescription","history","onCancelHandler","event","preventDefault","goBack","inp","Object","values","map","obj","label","type","name","value","section","id","saveHandler","e","leadObj","leadAddress","leadInfo","url","push","form","formActions","alt","save","formfields","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router';\nimport useForm from '../../Hooks/Leads/useForm';\nimport styles from './AddLead.module.css';\nimport { getLeadsFields, postLeadRecord } from '../../library/leadsFns';\nimport LoadingPage from '../../Pages/loadingPage';\nimport Input from '../Input/Input';\nimport { useState } from 'react';\nimport useHttp from '../../Hooks/httpHook';\n\nconst AddLead = () => {\n\n    const { inputHandler, address, information, isLoading, error} = useForm(getLeadsFields);\n    const { sendRequest } = useHttp( postLeadRecord);\n    let informationFields, addressFields;\n    const [description, setDescription] = useState(\"\");\n    const history = useHistory();\n\n    const onCancelHandler = (event) => {\n        event.preventDefault();\n        history.goBack(-1);\n    }\n\n    if(address) {\n         addressFields = <React.Fragment>\n                            <h3>Address Information</h3>\n                            <div className={styles.inp}>\n                            {Object.values(address).map(obj => <Input key={obj.id} label={obj.label} type={obj.type} name={obj.name} value={obj.value} section={obj.section} handleChange={inputHandler}/>) }         \n                            </div>\n                            </React.Fragment>\n    }\n\n    if(information) {\n        informationFields =  <React.Fragment>\n                                <h3>Address Information</h3>\n                                <div className={styles.inp}>\n                                { Object.values(information).map(obj => <Input key={obj.id} label={obj.label} type={obj.type} name={obj.name} value={obj.value} section={obj.section} handleChange={inputHandler}/>) }       \n                                </div>\n                                </React.Fragment>\n    }\n\n    const saveHandler = (e) => {\n        e.preventDefault();\n        let leadObj = { description };\n        \n        Object.values(address).map(leadAddress => {\n            leadObj = {\n                ...leadObj,\n                [leadAddress.name] : leadAddress.value\n            }\n        });\n\n        Object.values(information).map(leadInfo =>{\n            leadObj = {\n                ...leadObj,\n                [leadInfo.name]: leadInfo.value \n            }\n        });\n        sendRequest(leadObj, (url) => {\n            history.push(url);\n        });\n\n    }\n\n    return (\n            <form className={styles.form} autoComplete=\"none\">\n                {true && <LoadingPage/>}\n                <div className={styles.formActions}>\n                    <h2>Create Lead</h2>\n                    <div>\n                        <button className={styles.alt} onClick={onCancelHandler}>Cancel</button>\n                        <button className={styles.alt}>Save and New</button>\n                        <button type=\"submit\" className={styles.save} onClick={saveHandler}>Save</button>\n                    </div> \n                </div>\n                <div className={styles.formfields}>\n                        {informationFields}\n                        {addressFields}\n                    <h3>Description Information</h3>\n                    <div  className={styles.inp}>\n                        <textarea type=\"text\" name=\"description\" onChange={(e) => setDescription(e.target.value)}></textarea>\n                    </div>\n                </div>       \n            </form>\n    )\n\n}\n\nexport default AddLead;"]},"metadata":{},"sourceType":"module"}