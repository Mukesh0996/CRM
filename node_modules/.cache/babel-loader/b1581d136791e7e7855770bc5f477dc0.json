{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/CRM/src/Components/Filter/Filter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from './Filter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = ({\n  leadsCols\n}) => {\n  _s();\n\n  const [showFilter, setShowFilter] = useState(false);\n  const [filterValue, setFilterValue] = useState(\"\");\n  const filterMethods = [\"is\", \"contains\"];\n\n  const createFilterCriteria = key => {\n    setShowFilter(prevState => !prevState);\n    setFilterValue(key.toLowerCase().split(\" \").join(\"_\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.filterSection,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Filter leads By:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), leadsCols.map((col, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.filter,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.filterOptions,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: () => {\n              createFilterCriteria(col.label);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.lighter,\n            children: col.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 97\n        }, this), showFilter && filterValue === col.label.toLowerCase().split(\" \").join(\"_\") && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.filterCriteria,\n          children: [\"a \", /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: styles.filterMethods,\n            children: filterMethods.map((method, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: method\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 99\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 100\n        }, this), showFilter && filterValue === col.label.toLowerCase().split(\" \").join(\"_\") && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.filterInput,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              minWidth: \"4rem\"\n            },\n            name: filterValue,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 136\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 202\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 99\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 65\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 48\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Filter, \"LxT1nNXnvM51ViI4xN9x0tgKxEw=\");\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Components/Filter/Filter.js"],"names":["React","useState","styles","Filter","leadsCols","showFilter","setShowFilter","filterValue","setFilterValue","filterMethods","createFilterCriteria","key","prevState","toLowerCase","split","join","filterSection","map","col","index","filter","filterOptions","label","lighter","filterCriteria","method","filterInput","minWidth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAAA;;AAC5B,QAAK,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAA+BP,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAMQ,aAAa,GAAG,CAAC,IAAD,EAAM,UAAN,CAAtB;;AAEA,QAAMC,oBAAoB,GAAIC,GAAD,IAAS;AAClCL,IAAAA,aAAa,CAACM,SAAS,IAAI,CAACA,SAAf,CAAb;AACAJ,IAAAA,cAAc,CAACG,GAAG,CAACE,WAAJ,GAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,IAA7B,CAAkC,GAAlC,CAAD,CAAd;AAEH,GAJD;;AAMA,sBACQ;AAAS,IAAA,SAAS,EAAEb,MAAM,CAACc,aAA3B;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMZ,SAAS,CAACa,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,kBAAe,QAAC,KAAD,CAAO,QAAP;AAAA,mCAAiB;AAAK,QAAA,SAAS,EAAEjB,MAAM,CAACkB,MAAvB;AAAA,qCAAgC;AAAiB,UAAA,SAAS,EAAElB,MAAM,CAACmB,aAAnC;AAAA,kCAC5E;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAE,MAAI;AAACX,cAAAA,oBAAoB,CAACQ,GAAG,CAACI,KAAL,CAApB;AAAgC;AAArE;AAAA;AAAA;AAAA;AAAA,kBAD4E,eAE5E;AAAG,YAAA,SAAS,EAAEpB,MAAM,CAACqB,OAArB;AAAA,sBAA+BL,GAAG,CAACI;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAF4E;AAAA,WAAUH,KAAV;AAAA;AAAA;AAAA;AAAA,gBAAhC,EAI3Cd,UAAU,IAAIE,WAAW,KAAKW,GAAG,CAACI,KAAJ,CAAUT,WAAV,GAAwBC,KAAxB,CAA8B,GAA9B,EAAmCC,IAAnC,CAAwC,GAAxC,CAA9B,iBAA8E;AAAK,UAAA,SAAS,EAAEb,MAAM,CAACsB,cAAvB;AAAA,wCAC1E;AAAI,YAAA,SAAS,EAAEtB,MAAM,CAACO,aAAtB;AAAA,sBAAsCA,aAAa,CAACQ,GAAd,CAAkB,CAACQ,MAAD,EAASN,KAAT,kBAAiB;AAAA,wBAAiBM;AAAjB,eAASN,KAAT;AAAA;AAAA;AAAA;AAAA,oBAAnC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAD0E;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJnC,EAO5Cd,UAAU,IAAIE,WAAW,KAAKW,GAAG,CAACI,KAAJ,CAAUT,WAAV,GAAwBC,KAAxB,CAA8B,GAA9B,EAAmCC,IAAnC,CAAwC,GAAxC,CAA9B,iBAA8E;AAAK,UAAA,SAAS,EAAEb,MAAM,CAACwB,WAAvB;AAAA,uCAAqC;AAAO,YAAA,KAAK,EAAE;AAACC,cAAAA,QAAQ,EAAC;AAAV,aAAd;AAAiC,YAAA,IAAI,EAAEpB,WAAvC;AAAoD,YAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,kBAArC,oBAAuG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAvG;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAA7B,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAiBH,CA5BD;;GAAMJ,M;;KAAAA,M;AA8BN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport styles from './Filter.module.css';\n\nconst Filter = ({leadsCols}) => {\n    const[showFilter, setShowFilter] = useState(false);\n    const [filterValue, setFilterValue]= useState(\"\");\n    const filterMethods = [\"is\",\"contains\"];\n\n    const createFilterCriteria = (key) => {\n        setShowFilter(prevState => !prevState);\n        setFilterValue(key.toLowerCase().split(\" \").join(\"_\"))\n\n    }\n    \n    return (\n            <section className={styles.filterSection}>\n                <p>Filter leads By:</p>\n                { leadsCols.map((col, index)=> <React.Fragment> <div className={styles.filter}> <div key={index} className={styles.filterOptions}>\n                    <input type=\"checkbox\" onClick={()=>{createFilterCriteria(col.label)}}/>\n                    <p className={styles.lighter}>{col.label}</p>\n                    </div>\n                   { showFilter && filterValue === col.label.toLowerCase().split(\" \").join(\"_\") && <div className={styles.filterCriteria}>\n                       a <ul className={styles.filterMethods}>{filterMethods.map((method, index)=><li key={index}>{method}</li>)}</ul>\n                       </div>}\n                 {  showFilter && filterValue === col.label.toLowerCase().split(\" \").join(\"_\") && <div className={styles.filterInput}> <input style={{minWidth:\"4rem\"}} name={filterValue} type=\"text\"/> <button>Filter</button> </div>}\n                   </div>\n                    </React.Fragment>\n                    )}\n            </section>\n    );\n\n}\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}