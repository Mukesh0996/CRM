{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/CRM/src/Pages/Leads.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ModuleActions from \"../Components/Leads/LeadsActions\";\nimport LeadsContainer from \"../Components/Leads/LeadsContainer\";\nimport useHttp from \"../Hooks/httpHook\";\nimport AuthContext from \"../Store/Auth/AuthContext\";\nimport { getAllLeads, getFilterColumns } from \"../Store/Leads/leads-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeadsModule = () => {\n  _s();\n\n  const ctx = useContext(AuthContext);\n  const {\n    sendRequest: getLeads,\n    isLoading,\n    error: getLeadsError\n  } = useHttp(getAllLeads, true);\n  const {\n    sendRequest: fetchFilerColumns,\n    isLoading: FilterLoading,\n    error: filterError\n  } = useHttp(getFilterColumns, true);\n  const {\n    filterColumns,\n    leads,\n    columns\n  } = useSelector(state => state.leads);\n  console.log(getLeadsError, filterError);\n  useEffect(() => {\n    getLeads(ctx.orgId);\n    fetchFilerColumns(ctx.orgId);\n  }, [ctx.orgId]);\n\n  if (getLeadsError || filterError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"93vh\",\n        backgroundColor: \"white\",\n        color: \"red\",\n        fontWeight: \"bold\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [getLeadsError && !filterError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getLeadsError.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 44\n      }, this), filterError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getLeadsError.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ModuleActions, {\n      path: \"add-lead\",\n      module: \"Leads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(LeadsContainer, {\n      filterCols: filterColumns,\n      leadCols: columns || [],\n      leads: leads || [],\n      isLoading: isLoading && FilterLoading,\n      filterError: filterError,\n      getLeadsError: getLeadsError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n};\n\n_s(LeadsModule, \"TWYhADgkt3+kPTzoOPvaXa0rfgk=\", false, function () {\n  return [useHttp, useHttp, useSelector];\n});\n\n_c = LeadsModule;\nexport default LeadsModule;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeadsModule\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Pages/Leads.js"],"names":["useContext","useEffect","useSelector","ModuleActions","LeadsContainer","useHttp","AuthContext","getAllLeads","getFilterColumns","LeadsModule","ctx","sendRequest","getLeads","isLoading","error","getLeadsError","fetchFilerColumns","FilterLoading","filterError","filterColumns","leads","columns","state","console","log","orgId","height","backgroundColor","color","fontWeight","display","alignItems","justifyContent","message"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,8BAA9C;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,GAAG,GAAGV,UAAU,CAACM,WAAD,CAAtB;AAEA,QAAM;AAAEK,IAAAA,WAAW,EAAEC,QAAf;AAAyBC,IAAAA,SAAzB;AAAoCC,IAAAA,KAAK,EAAEC;AAA3C,MAA6DV,OAAO,CAACE,WAAD,EAAc,IAAd,CAA1E;AACA,QAAM;AAACI,IAAAA,WAAW,EAAEK,iBAAd;AAAiCH,IAAAA,SAAS,EAAEI,aAA5C;AAA2DH,IAAAA,KAAK,EAAEI;AAAlE,MAAiFb,OAAO,CAACG,gBAAD,EAAmB,IAAnB,CAA9F;AACA,QAAM;AAAEW,IAAAA,aAAF;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,MAAoCnB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACF,KAAhB,CAArD;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYT,aAAZ,EAA2BG,WAA3B;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACbW,IAAAA,QAAQ,CAACF,GAAG,CAACe,KAAL,CAAR;AACAT,IAAAA,iBAAiB,CAACN,GAAG,CAACe,KAAL,CAAjB;AAEF,GAJQ,EAIP,CAACf,GAAG,CAACe,KAAL,CAJO,CAAT;;AAOA,MAAGV,aAAa,IAAIG,WAApB,EAAiC;AAC7B,wBAAO;AAAK,MAAA,KAAK,EAAE;AAACQ,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,eAAe,EAAC,OAAhC;AAAyCC,QAAAA,KAAK,EAAC,KAA/C;AAAsDC,QAAAA,UAAU,EAAC,MAAjE;AAAyEC,QAAAA,OAAO,EAAC,MAAjF;AAAyFC,QAAAA,UAAU,EAAC,QAApG;AAA8GC,QAAAA,cAAc,EAAC;AAA7H,OAAZ;AAAA,iBACLjB,aAAa,IAAI,CAACG,WAAlB,iBAAiC;AAAA,kBAAIH,aAAa,CAACkB;AAAlB;AAAA;AAAA;AAAA;AAAA,cAD5B,EAELf,WAAW,iBAAI;AAAA,kBAAIH,aAAa,CAACkB;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFV;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAIH;;AAED,sBAAO;AAAA,4BACK,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,UAApB;AAA+B,MAAA,MAAM,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,YADL,eAEK,QAAC,cAAD;AAAgB,MAAA,UAAU,EAAEd,aAA5B;AAA2C,MAAA,QAAQ,EAAGE,OAAO,IAAI,EAAjE;AAAsE,MAAA,KAAK,EAAGD,KAAK,IAAG,EAAtF;AAA2F,MAAA,SAAS,EAAEP,SAAS,IAAII,aAAnH;AAAkI,MAAA,WAAW,EAAEC,WAA/I;AAA4J,MAAA,aAAa,EAAEH;AAA3K;AAAA;AAAA;AAAA;AAAA,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CA1BD;;GAAMN,W;UAGiEJ,O,EACoBA,O,EAC7CH,W;;;KALxCO,W;AA4BN,eAAeA,WAAf","sourcesContent":["import { useContext } from \"react\";\nimport { useEffect } from \"react\"\nimport { useSelector } from \"react-redux\";\nimport ModuleActions from \"../Components/Leads/LeadsActions\";\nimport LeadsContainer from \"../Components/Leads/LeadsContainer\";\nimport useHttp from \"../Hooks/httpHook\";\nimport AuthContext from \"../Store/Auth/AuthContext\";\nimport { getAllLeads, getFilterColumns } from \"../Store/Leads/leads-actions\";\n\nconst LeadsModule = () => {\n    const ctx = useContext(AuthContext);\n\n    const { sendRequest: getLeads, isLoading, error: getLeadsError } = useHttp(getAllLeads, true);\n    const {sendRequest: fetchFilerColumns, isLoading: FilterLoading, error: filterError} = useHttp(getFilterColumns, true);\n    const { filterColumns, leads, columns } = useSelector(state => state.leads);\n\n    console.log(getLeadsError, filterError);\n    useEffect(() => {\n       getLeads(ctx.orgId);\n       fetchFilerColumns(ctx.orgId);\n      \n    },[ctx.orgId]);\n\n   \n    if(getLeadsError || filterError) {\n        return <div style={{height:\"93vh\", backgroundColor:\"white\", color:\"red\", fontWeight:\"bold\", display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}>\n        { getLeadsError && !filterError && <p>{getLeadsError.message}</p>}\n        { filterError && <p>{getLeadsError.message}</p>}\n        </div>\n    }\n\n    return <div> \n                <ModuleActions path=\"add-lead\" module=\"Leads\"/>\n                <LeadsContainer filterCols={filterColumns} leadCols={ columns || [] } leads={ leads|| [] } isLoading={isLoading && FilterLoading} filterError={filterError} getLeadsError={getLeadsError}/>\n            </div>\n}\n\nexport default LeadsModule;"]},"metadata":{},"sourceType":"module"}