{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/CRM/src/Pages/Leads.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Fragment, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ModuleActions from \"../Components/Leads/LeadsActions\";\nimport LeadsContainer from \"../Components/Leads/LeadsContainer\";\nimport useHttp from \"../Hooks/httpHook\";\nimport AuthContext from \"../Store/Auth/AuthContext\";\nimport { getAllLeads, getFilterColumns } from \"../Store/Leads/leads-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeadsModule = () => {\n  _s();\n\n  const ctx = useContext(AuthContext);\n  const {\n    sendRequest: getLeads,\n    isLoading,\n    error\n  } = useHttp(getAllLeads, true);\n  const {\n    sendRequest: fetchFilerColumns,\n    isLoading: FilterLoding,\n    error: filterError\n  } = useHttp(getFilterColumns, true);\n  useEffect(() => {\n    getLeads(ctx.orgId);\n    fetchFilerColumns(ctx.orgId);\n  }, []);\n  const {\n    filterColumns,\n    leads,\n    columns\n  } = useSelector(state => state.leads);\n  const Leadcolumns = useSelector(state => state.leads.columns);\n  const sortedLeadColumsn = columns.sort((a, b) => {});\n  console.log(columns);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ModuleActions, {\n      path: \"add-lead\",\n      module: \"Leads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(LeadsContainer, {\n      filterCols: filterColumns,\n      leadCols: columns || [],\n      leads: leads || [],\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n};\n\n_s(LeadsModule, \"R3KGxkAIj0Ho45o+musNgEwnaA0=\", false, function () {\n  return [useHttp, useHttp, useSelector, useSelector];\n});\n\n_c = LeadsModule;\nexport default LeadsModule;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeadsModule\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Pages/Leads.js"],"names":["useContext","Fragment","useEffect","useSelector","ModuleActions","LeadsContainer","useHttp","AuthContext","getAllLeads","getFilterColumns","LeadsModule","ctx","sendRequest","getLeads","isLoading","error","fetchFilerColumns","FilterLoding","filterError","orgId","filterColumns","leads","columns","state","Leadcolumns","sortedLeadColumsn","sort","a","b","console","log"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,8BAA9C;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,GAAG,GAAGX,UAAU,CAACO,WAAD,CAAtB;AAEA,QAAM;AAAEK,IAAAA,WAAW,EAAEC,QAAf;AAAyBC,IAAAA,SAAzB;AAAoCC,IAAAA;AAApC,MAA8CT,OAAO,CAACE,WAAD,EAAc,IAAd,CAA3D;AACA,QAAM;AAACI,IAAAA,WAAW,EAAEI,iBAAd;AAAiCF,IAAAA,SAAS,EAAEG,YAA5C;AAA0DF,IAAAA,KAAK,EAAEG;AAAjE,MAAgFZ,OAAO,CAACG,gBAAD,EAAmB,IAAnB,CAA7F;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACbW,IAAAA,QAAQ,CAACF,GAAG,CAACQ,KAAL,CAAR;AACAH,IAAAA,iBAAiB,CAACL,GAAG,CAACQ,KAAL,CAAjB;AAEF,GAJQ,EAIP,EAJO,CAAT;AAOA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,MAAoCnB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACF,KAAhB,CAArD;AACA,QAAOG,WAAW,GAAIrB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACF,KAAN,CAAYC,OAAtB,CAAjC;AAGA,QAAMG,iBAAiB,GAAGH,OAAO,CAACI,IAAR,CAAa,CAACC,CAAD,EAAGC,CAAH,KAAQ,CAE9C,CAFyB,CAA1B;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AAEA,sBAAO;AAAA,4BACK,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,UAApB;AAA+B,MAAA,MAAM,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,YADL,eAEK,QAAC,cAAD;AAAgB,MAAA,UAAU,EAAEF,aAA5B;AAA2C,MAAA,QAAQ,EAAGE,OAAO,IAAI,EAAjE;AAAsE,MAAA,KAAK,EAAGD,KAAK,IAAG,EAAtF;AAA2F,MAAA,SAAS,EAAEP;AAAtG;AAAA;AAAA;AAAA;AAAA,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CA1BD;;GAAMJ,W;UAGkDJ,O,EACkCA,O,EAS5CH,W,EACpBA,W;;;KAdpBO,W;AA4BN,eAAeA,WAAf","sourcesContent":["import { useContext } from \"react\";\nimport { Fragment, useEffect } from \"react\"\nimport { useSelector } from \"react-redux\";\nimport ModuleActions from \"../Components/Leads/LeadsActions\";\nimport LeadsContainer from \"../Components/Leads/LeadsContainer\";\nimport useHttp from \"../Hooks/httpHook\";\nimport AuthContext from \"../Store/Auth/AuthContext\";\nimport { getAllLeads, getFilterColumns } from \"../Store/Leads/leads-actions\";\n\nconst LeadsModule = () => {\n    const ctx = useContext(AuthContext);\n\n    const { sendRequest: getLeads, isLoading, error } = useHttp(getAllLeads, true);\n    const {sendRequest: fetchFilerColumns, isLoading: FilterLoding, error: filterError} = useHttp(getFilterColumns, true);\n\n    useEffect(() => {\n       getLeads(ctx.orgId);\n       fetchFilerColumns(ctx.orgId);\n      \n    },[]);\n\n   \n    const { filterColumns, leads, columns } = useSelector(state => state.leads);\n    const  Leadcolumns  = useSelector(state => state.leads.columns);\n\n\n    const sortedLeadColumsn = columns.sort((a,b)=> {\n\n    })\n    console.log(columns);\n\n    return <div> \n                <ModuleActions path=\"add-lead\" module=\"Leads\"/>\n                <LeadsContainer filterCols={filterColumns} leadCols={ columns || [] } leads={ leads|| [] } isLoading={isLoading}/>\n            </div>\n}\n\nexport default LeadsModule;"]},"metadata":{},"sourceType":"module"}