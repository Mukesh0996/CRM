{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mukesh-8058/Desktop/CRM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mukesh-8058/Desktop/CRM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/mukesh-8058/Desktop/CRM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext,useState}from\"react\";import{useDispatch}from\"react-redux\";import AuthContext from\"../Store/Auth/AuthContext\";var useHttp=function useHttp(requestFn,dispatcherIsTrue){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState({isValid:false,value:\"\",message:\"\"}),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var ctx=useContext(AuthContext);var dispatch=useDispatch();var sendRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(orgId,sendData){var responseData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);_context.prev=1;if(!dispatcherIsTrue){_context.next=8;break;}_context.next=5;return dispatch(requestFn(orgId,ctx.token));case 5:responseData=_context.sent;_context.next=12;break;case 8:_context.next=10;return requestFn(orgId,ctx.token);case 10:responseData=_context.sent;sendData(responseData);//transports the data from the server to the respective function component\ncase 12:_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](1);setIsLoading(false);setError({isValid:_context.t0.isValid,message:_context.t0.message,value:_context.t0.value});case 18:setIsLoading(false);case 19:case\"end\":return _context.stop();}}},_callee,null,[[1,14]]);}));return function sendRequest(_x,_x2){return _ref.apply(this,arguments);};}();return{isLoading:isLoading,sendRequest:sendRequest,error:error};};export default useHttp;","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Hooks/httpHook.js"],"names":["useContext","useState","useDispatch","AuthContext","useHttp","requestFn","dispatcherIsTrue","isLoading","setIsLoading","isValid","value","message","error","setError","ctx","dispatch","sendRequest","orgId","sendData","token","responseData"],"mappings":"4bAAA,OAASA,UAAT,CAAqBC,QAArB,KAAqC,OAArC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CAGA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,SAAD,CAAYC,gBAAZ,CAAiC,CAE7C,cAAkCL,QAAQ,CAAC,KAAD,CAA1C,wCAAOM,SAAP,eAAkBC,YAAlB,eACA,eAA0BP,QAAQ,CAAC,CAACQ,OAAO,CAAE,KAAV,CAAiBC,KAAK,CAAC,EAAvB,CAA2BC,OAAO,CAAC,EAAnC,CAAD,CAAlC,yCAAOC,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,GAAG,CAAGd,UAAU,CAACG,WAAD,CAAtB,CACA,GAAMY,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CAEA,GAAMc,CAAAA,WAAW,0FAAG,iBAAOC,KAAP,CAAcC,QAAd,mIAChBV,YAAY,CAAC,IAAD,CAAZ,CADgB,oBAKTF,gBALS,+CAMaS,CAAAA,QAAQ,CAACV,SAAS,CAACY,KAAD,CAAQH,GAAG,CAACK,KAAZ,CAAV,CANrB,QAMTC,YANS,oEAUaf,CAAAA,SAAS,CAACY,KAAD,CAAQH,GAAG,CAACK,KAAZ,CAVtB,SAURC,YAVQ,eAWRF,QAAQ,CAACE,YAAD,CAAR,CAAyB;AAXjB,yFAiBZZ,YAAY,CAAC,KAAD,CAAZ,CACAK,QAAQ,CAAC,CACLJ,OAAO,CAAE,YAAMA,OADV,CAELE,OAAO,CAAE,YAAMA,OAFV,CAGLD,KAAK,CAAE,YAAMA,KAHR,CAAD,CAAR,CAlBY,QAwBhBF,YAAY,CAAC,KAAD,CAAZ,CAxBgB,qEAAH,kBAAXQ,CAAAA,WAAW,gDAAjB,CA2BA,MAAO,CACHT,SAAS,CAATA,SADG,CAEHS,WAAW,CAAXA,WAFG,CAGHJ,KAAK,CAALA,KAHG,CAAP,CAMH,CAxCD,CA0CA,cAAeR,CAAAA,OAAf","sourcesContent":["import { useContext, useState } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport AuthContext from \"../Store/Auth/AuthContext\";\n\n\nconst useHttp = (requestFn, dispatcherIsTrue) => {\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState({isValid: false, value:\"\", message:\"\"});\n    const ctx = useContext(AuthContext);\n    const dispatch = useDispatch();\n\n    const sendRequest = async (orgId, sendData) => {\n        setIsLoading(true);\n        let responseData;\n        try {\n\n            if(dispatcherIsTrue) {\n               responseData =  await dispatch(requestFn(orgId, ctx.token));\n            //    console.log(\"response data is\", responseData); need to check later\n            //     sendData(responseData);\n            } else {\n                responseData = await requestFn(orgId, ctx.token);\n                sendData(responseData);  //transports the data from the server to the respective function component\n\n            }   \n\n        } catch (error) {\n\n            setIsLoading(false);\n            setError({\n                isValid: error.isValid,\n                message: error.message,\n                value: error.value\n            });\n        }\n        setIsLoading(false);\n    }\n\n    return {\n        isLoading,\n        sendRequest,\n        error\n    }\n\n}\n\nexport default useHttp;"]},"metadata":{},"sourceType":"module"}