{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mukesh-8058/Desktop/CRM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mukesh-8058/Desktop/CRM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{leadActions}from\"./leads-slice\";var url=\"http://localhost:8080\";export var getLeadsFields=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(orgId,token){var response,responseData,error;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(url,\"/org/\").concat(orgId,\"/leads/leadstable\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}});case 2:response=_context.sent;_context.next=5;return response.json();case 5:responseData=_context.sent;if(response.ok){_context.next=11;break;}error=new Error(responseData.message||\"Error Occured!\");error.isValid=responseData.isValid||false;error.value=responseData.value||\"\";throw error;case 11:return _context.abrupt(\"return\",responseData);case 12:case\"end\":return _context.stop();}}},_callee);}));return function getLeadsFields(_x,_x2){return _ref.apply(this,arguments);};}();export var getFilterColumns=function getFilterColumns(orgId,token){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response,responseData,error;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(url,\"/org/\").concat(orgId,\"/leads/getfilterColumns\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:responseData=_context2.sent;if(response.ok){_context2.next=11;break;}error=new Error(responseData.message||\"Error Occured!\");error.isValid=responseData.isValid||false;error.value=responseData.value||\"\";throw error;case 11:dispatch(leadActions.addFilterColumns({filterColumns:responseData.data}));case 12:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3){return _ref2.apply(this,arguments);};}();};export var getAllLeads=function getAllLeads(orgId,token){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response,responseData,error;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"\".concat(url,\"/org/\").concat(orgId,\"/leads/getrecords\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}});case 2:response=_context3.sent;_context3.next=5;return response.json();case 5:responseData=_context3.sent;if(response.ok){_context3.next=11;break;}error=new Error(responseData.message||\"Error Occured!\");error.isValid=responseData.isValid||false;error.value=responseData.value||\"\";throw error;case 11:dispatch(leadActions.replaceLeads({leads:responseData.data.leads,cols:responseData.data.leadCols,canCreate:true,canEdit:true}));case 12:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x4){return _ref3.apply(this,arguments);};}();};export var addLeadRecord=function addLeadRecord(data,token){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var orgId,leadObj,response,responseData,error;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:orgId=data.orgId;delete data['orgId'];leadObj=data;_context4.next=5;return fetch(\"\".concat(url,\"/org/\").concat(orgId,\"/leads/addrecord\"),{method:\"POST\",body:JSON.stringify(leadObj),headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}});case 5:response=_context4.sent;_context4.next=8;return response.json();case 8:responseData=_context4.sent;if(response.ok){_context4.next=14;break;}error=new Error(responseData.message);error.isValid=responseData.isValid||false;error.value=responseData.value||\"\";throw error;case 14:dispatch(leadActions.addLead({lead:responseData.data}));return _context4.abrupt(\"return\",responseData.data);case 16:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x5){return _ref4.apply(this,arguments);};}();};export var getSingleLeadRecord=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var response,responseData,error;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch();case 2:response=_context5.sent;_context5.next=5;return response.json();case 5:responseData=_context5.sent;if(response){_context5.next=11;break;}error=new Error(responseData.message);error.isValid=responseData.isValid||false;error.value=responseData.value||\"\";throw error;case 11:return _context5.abrupt(\"return\",responseData);case 12:case\"end\":return _context5.stop();}}},_callee5);}));return function getSingleLeadRecord(){return _ref5.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/CRM/src/Store/Leads/leads-actions.js"],"names":["leadActions","url","getLeadsFields","orgId","token","fetch","method","headers","response","json","responseData","ok","error","Error","message","isValid","value","getFilterColumns","dispatch","addFilterColumns","filterColumns","data","getAllLeads","replaceLeads","leads","cols","leadCols","canCreate","canEdit","addLeadRecord","leadObj","body","JSON","stringify","addLead","lead","getSingleLeadRecord"],"mappings":"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","sourcesContent":["import { leadActions } from \"./leads-slice\";\n\nconst url = \"http://localhost:8080\";\n\nexport const getLeadsFields = async (orgId, token) => {\n    const response = await fetch(`${url}/org/${orgId}/leads/leadstable`,{\n        method:\"GET\",\n        headers : {\n            \"Content-Type\":\"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n    const responseData = await response.json();\n\n    if(!response.ok) {\n        let error = new Error(responseData.message || \"Error Occured!\")\n        error.isValid = responseData.isValid || false;\n        error.value = responseData.value || \"\";\n        throw(error);\n    }\n    // responseData will be destructed in the respective component\n    return responseData;\n}\n\nexport const getFilterColumns = (orgId, token) => {\n    return async (dispatch) => {\n        const response = await fetch(`${url}/org/${orgId}/leads/getfilterColumns`,{\n            method:\"GET\",\n            headers : {\n                \"Content-Type\":\"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            }\n        })\n        const responseData = await response.json();\n\n        if(!response.ok) {\n            let error = new Error(responseData.message || \"Error Occured!\")\n            error.isValid = responseData.isValid || false;\n            error.value = responseData.value || \"\";\n            throw(error);\n        }\n        dispatch(leadActions.addFilterColumns({\n            filterColumns: responseData.data\n        }))\n       \n    }\n}\n\n\nexport const getAllLeads = (orgId, token) => {\n    return async (dispatch) => {\n        const response = await fetch(`${url}/org/${orgId}/leads/getrecords`,{\n            method:\"GET\",\n            headers :{\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            }\n        });\n        const responseData = await response.json();\n        if(!response.ok) {\n            let error = new Error(responseData.message || \"Error Occured!\")\n            error.isValid = responseData.isValid || false;\n            error.value = responseData.value || \"\";\n            throw(error);\n        }\n        dispatch(leadActions.replaceLeads({\n            leads: responseData.data.leads,\n            cols: responseData.data.leadCols,\n            canCreate : true,\n            canEdit: true\n        }))\n    }\n}\n\nexport const addLeadRecord = (data, token) => {\n\n    return async (dispatch) => {\n        const { orgId } = data;\n        delete data['orgId'];\n        const leadObj = data;\n        const response = await fetch(`${url}/org/${orgId}/leads/addrecord`,{\n        method:\"POST\",\n        body: JSON.stringify(leadObj),\n        headers :{\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n\n    const responseData = await response.json();\n\n    if(!response.ok) {\n        let error = new Error(responseData.message);\n        error.isValid = responseData.isValid || false;\n        error.value = responseData.value || \"\";\n        throw(error);\n    }\n    dispatch(leadActions.addLead({\n        lead: responseData.data\n    }));\n    return responseData.data;\n    }\n}\n\nexport const getSingleLeadRecord = async () => {\n    const response = await fetch();\n    const responseData = await response.json();\n    if(!response) {\n        let error = new Error(responseData.message);\n        error.isValid = responseData.isValid || false;\n        error.value = responseData.value || \"\";\n        throw(error);\n    }\n\n    return responseData;\n\n}"]},"metadata":{},"sourceType":"module"}